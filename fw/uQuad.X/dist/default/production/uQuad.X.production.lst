

Microchip Technology PIC18 PRO Macro Assembler V1.21 build 54009 
                                                                                               Mon Nov 23 01:25:42 2015

Microchip Technology Omniscient Code Generator (PRO mode) build 54009
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    83                           	dabs	1,0x400,32,_BDT
    84                           	dabs	1,0x500,64,_comm_out_buffer
    85                           	dabs	1,0x428,8,_CtrlTrfData
    86                           	dabs	1,0x420,8,_SetupPkt
    87                           	dabs	1,0x540,64,_comm_in_buffer
    88  0000                     
    89                           	psect	idataCOMRAM
    90  001004                     __pidataCOMRAM:
    91                           	opt stack 0
    92                           
    93                           ;initializer for sensors_i2c_async_rw_completed@AMI304_read_request
    94  001004  40                 	db	64
    95                           
    96                           ;initializer for sensors_i2c_async_rw_completed@MPL3115A2_read_request
    97  001005  02                 	db	2
    98                           
    99                           	psect	smallconst
   100  001026                     __psmallconst:
   101                           	opt stack 0
   102  001026                     _leds_quad_patterns:
   103                           	opt stack 0
   104  001026  0000               	dw	0
   105  001028  0000               	dw	0
   106  00102A  0F0F               	dw	3855
   107  00102C  0F0F               	dw	3855
   108  00102E  F0F0               	dw	61680
   109  001030  F0F0               	dw	61680
   110  001032  00FF               	dw	255
   111  001034  00FF               	dw	255
   112  001036  FF00               	dw	65280
   113  001038  FF00               	dw	65280
   114  00103A  FFFF               	dw	65535
   115  00103C  0000               	dw	0
   116  00103E  0000               	dw	0
   117  001040  FFFF               	dw	65535
   118  001042  FFFF               	dw	65535
   119  001044  0000               	dw	0
   120  001046  C0C0               	dw	49344
   121  001048  C0C0               	dw	49344
   122  00104A  3030               	dw	12336
   123  00104C  3030               	dw	12336
   124  00104E  0C0C               	dw	3084
   125  001050  0C0C               	dw	3084
   126  001052  0303               	dw	771
   127  001054  0303               	dw	771
   128  001056  FFFF               	dw	65535
   129  001058  FFFF               	dw	65535
   130  00105A                     __end_of_leds_quad_patterns:
   131                           	opt stack 0
   132  00105A                     _leds_status_patterns:
   133                           	opt stack 0
   134  00105A  E7E0               	dw	59360
   135  00105C  07E7               	dw	2023
   136  00105E  E180               	dw	57728
   137  001060  07E7               	dw	2023
   138  001062  87E0               	dw	34784
   139  001064  07E1               	dw	2017
   140  001066  8180               	dw	33152
   141  001068  07E1               	dw	2017
   142  00106A  E7E0               	dw	59360
   143  00106C  0187               	dw	391
   144  00106E  E180               	dw	57728
   145  001070  0187               	dw	391
   146  001072  87E0               	dw	34784
   147  001074  0181               	dw	385
   148  001076  8180               	dw	33152
   149  001078  0181               	dw	385
   150  00107A  FFFF               	dw	65535
   151  00107C  FFFF               	dw	65535
   152  00107E  00                 	db	0
   153  00107F  00                 	db	0
   154  001080  00                 	db	0
   155  001081  00                 	db	0
   156  001082  00                 	db	0
   157  001083  00                 	db	0
   158  001084  00                 	db	0
   159  001085  00                 	db	0
   160  001086  00                 	db	0
   161  001087  00                 	db	0
   162  001088  00                 	db	0
   163  001089  00                 	db	0
   164  00108A  00                 	db	0
   165  00108B  00                 	db	0
   166  00108C  00                 	db	0
   167  00108D  00                 	db	0
   168  00108E                     __end_of_leds_status_patterns:
   169                           	opt stack 0
   170  00108E                     _USB_SD_Ptr:
   171                           	opt stack 0
   172  00108E  F4                 	db	low ((low _sd000)| (__smallconst& (0+-256)))
   173  00108F  CC                 	db	low ((low _sd001)| (__smallconst& (0+-256)))
   174  001090  B2                 	db	low ((low _sd002)| (__smallconst& (0+-256)))
   175  001091                     __end_of_USB_SD_Ptr:
   176                           	opt stack 0
   177  001091                     _USB_CD_Ptr:
   178                           	opt stack 0
   179  001091  92                 	db	low ((low _configDescriptor1)| (__smallconst& (0+-256)))
   180  001092                     __end_of_USB_CD_Ptr:
   181                           	opt stack 0
   182  001092                     _configDescriptor1:
   183                           	opt stack 0
   184  001092  09                 	db	9
   185  001093  02                 	db	2
   186  001094  20                 	db	32
   187  001095  00                 	db	0
   188  001096  01                 	db	1
   189  001097  01                 	db	1
   190  001098  00                 	db	0
   191  001099  C0                 	db	192
   192  00109A  32                 	db	50
   193  00109B  09                 	db	9
   194  00109C  04                 	db	4
   195  00109D  00                 	db	0
   196  00109E  00                 	db	0
   197  00109F  02                 	db	2
   198  0010A0  FF                 	db	255
   199  0010A1  FF                 	db	255
   200  0010A2  FF                 	db	255
   201  0010A3  00                 	db	0
   202  0010A4  07                 	db	7
   203  0010A5  05                 	db	5
   204  0010A6  01                 	db	1
   205  0010A7  02                 	db	2
   206  0010A8  40                 	db	64
   207  0010A9  00                 	db	0
   208  0010AA  01                 	db	1
   209  0010AB  07                 	db	7
   210  0010AC  05                 	db	5
   211  0010AD  81                 	db	129
   212  0010AE  02                 	db	2
   213  0010AF  40                 	db	64
   214  0010B0  00                 	db	0
   215  0010B1  01                 	db	1
   216  0010B2                     __end_of_configDescriptor1:
   217                           	opt stack 0
   218  0010B2                     _sd002:
   219                           	opt stack 0
   220  0010B2  1A                 	db	26
   221  0010B3  03                 	db	3
   222  0010B4  0075               	dw	117
   223  0010B6  0051               	dw	81
   224  0010B8  0075               	dw	117
   225  0010BA  0061               	dw	97
   226  0010BC  0064               	dw	100
   227  0010BE  0020               	dw	32
   228  0010C0  0044               	dw	68
   229  0010C2  0065               	dw	101
   230  0010C4  0076               	dw	118
   231  0010C6  0069               	dw	105
   232  0010C8  0063               	dw	99
   233  0010CA  0065               	dw	101
   234  0010CC                     __end_of_sd002:
   235                           	opt stack 0
   236  0010CC                     _sd001:
   237                           	opt stack 0
   238  0010CC  16                 	db	22
   239  0010CD  03                 	db	3
   240  0010CE  0042               	dw	66
   241  0010D0  0061               	dw	97
   242  0010D2  006C               	dw	108
   243  0010D4  0064               	dw	100
   244  0010D6  007A               	dw	122
   245  0010D8  0061               	dw	97
   246  0010DA  0072               	dw	114
   247  0010DC  0069               	dw	105
   248  0010DE  006B               	dw	107
   249  0010E0  0061               	dw	97
   250  0010E2                     __end_of_sd001:
   251                           	opt stack 0
   252  0010E2                     _device_dsc:
   253                           	opt stack 0
   254  0010E2  12                 	db	18
   255  0010E3  01                 	db	1
   256  0010E4  0200               	dw	512
   257  0010E6  00                 	db	0
   258  0010E7  00                 	db	0
   259  0010E8  00                 	db	0
   260  0010E9  08                 	db	8
   261  0010EA  3562               	dw	13666
   262  0010EC  0001               	dw	1
   263  0010EE  0100               	dw	256
   264  0010F0  01                 	db	1
   265  0010F1  02                 	db	2
   266  0010F2  00                 	db	0
   267  0010F3  01                 	db	1
   268  0010F4                     __end_of_device_dsc:
   269                           	opt stack 0
   270  0010F4                     _sd000:
   271                           	opt stack 0
   272  0010F4  04                 	db	4
   273  0010F5  03                 	db	3
   274  0010F6  0409               	dw	1033
   275  0010F8                     __end_of_sd000:
   276                           	opt stack 0
   277  0000                     _TMR1	set	4046
   278  0000                     _TMR3	set	4018
   279  0000                     _ADCON1	set	4033
   280  0000                     _INTCON2bits	set	4081
   281  0000                     _INTCON3bits	set	4080
   282  0000                     _INTCONbits	set	4082
   283  0000                     _IPR1bits	set	3999
   284  0000                     _IPR2bits	set	4002
   285  0000                     _LATD	set	3980
   286  0000                     _LATDbits	set	3980
   287  0000                     _LATEbits	set	3981
   288  0000                     _PIE1bits	set	3997
   289  0000                     _PIE2bits	set	4000
   290  0000                     _PIR1bits	set	3998
   291  0000                     _PIR2bits	set	4001
   292  0000                     _RCONbits	set	4048
   293  0000                     _SSPADD	set	4040
   294  0000                     _SSPBUF	set	4041
   295  0000                     _SSPCON1	set	4038
   296  0000                     _SSPCON1bits	set	4038
   297  0000                     _SSPCON2	set	4037
   298  0000                     _SSPCON2bits	set	4037
   299  0000                     _SSPSTAT	set	4039
   300  0000                     _SSPSTATbits	set	4039
   301  0000                     _T0CONbits	set	4053
   302  0000                     _T1CONbits	set	4045
   303  0000                     _T3CONbits	set	4017
   304  0000                     _TMR0L	set	4054
   305  0000                     _TRISBbits	set	3987
   306  0000                     _TRISDbits	set	3989
   307  0000                     _TRISEbits	set	3990
   308  0000                     _UADDR	set	3950
   309  0000                     _UCFG	set	3951
   310  0000                     _UCON	set	3949
   311  0000                     _UCONbits	set	3949
   312  0000                     _UEIE	set	3947
   313  0000                     _UEIR	set	3946
   314  0000                     _UEP0bits	set	3952
   315  0000                     _UIE	set	3945
   316  0000                     _UIEbits	set	3945
   317  0000                     _UIR	set	3944
   318  0000                     _UIRbits	set	3944
   319  0000                     _USTAT	set	3948
   320  0000                     _UEP0	set	3952
   321  0000                     _UEP1	set	3953
   322  0010F8  00                 	db	0	; dummy byte at the end
   323  0000                     
   324                           	psect	nvCOMRAM
   325  00004E                     __pnvCOMRAM:
   326                           	opt stack 0
   327  00004E                     _leds_led0_mode:
   328                           	opt stack 0
   329  00004E                     	ds	1
   330  00004F                     _leds_led1_mode:
   331                           	opt stack 0
   332  00004F                     	ds	1
   333  000050                     _motors_pwm_on_bits:
   334                           	opt stack 0
   335  000050                     	ds	1
   336                           
   337                           	psect	nvBANK0
   338  0000D7                     __pnvBANK0:
   339                           	opt stack 0
   340  0000D7                     _leds_led2_mode:
   341                           	opt stack 0
   342  0000D7                     	ds	1
   343  0000D8                     _leds_led3_mode:
   344                           	opt stack 0
   345  0000D8                     	ds	1
   346                           
   347                           ; #config settings
   348  0000                     
   349                           	psect	cinit
   350  006344                     __pcinit:
   351                           	opt stack 0
   352  006344                     start_initialization:
   353                           	opt stack 0
   354  006344                     __initialization:
   355                           	opt stack 0
   356                           
   357                           ; Clear objects allocated to BANK0 (89 bytes)
   358  006344  EE00  F060         	lfsr	0,__pbssBANK0
   359  006348  0E59               	movlw	89
   360  00634A                     clear_0:
   361  00634A  6AEE               	clrf	postinc0,c
   362  00634C  06E8               	decf	wreg,f,c
   363  00634E  E1FD               	bnz	clear_0
   364                           
   365                           ; Clear objects allocated to COMRAM (39 bytes)
   366  006350  EE00  F001         	lfsr	0,__pbssCOMRAM
   367  006354  0E27               	movlw	39
   368  006356                     clear_1:
   369  006356  6AEE               	clrf	postinc0,c
   370  006358  06E8               	decf	wreg,f,c
   371  00635A  E1FD               	bnz	clear_1
   372                           
   373                           ; Initialize objects allocated to COMRAM (2 bytes)
   374                           ; load TBLPTR registers with __pidataCOMRAM
   375  00635C  0E04               	movlw	low __pidataCOMRAM
   376  00635E  6EF6               	movwf	tblptrl,c
   377  006360  0E10               	movlw	high __pidataCOMRAM
   378  006362  6EF7               	movwf	tblptrh,c
   379  006364  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   380  006366  6EF8               	movwf	tblptru,c
   381  006368  0009               	tblrd		*+	;fetch initializer
   382  00636A  CFF5 F051          	movff	tablat,__pdataCOMRAM
   383  00636E  0009               	tblrd		*+	;fetch initializer
   384  006370  CFF5 F052          	movff	tablat,__pdataCOMRAM+1
   385  006374                     end_of_initialization:
   386                           	opt stack 0
   387  006374                     __end_of__initialization:
   388                           	opt stack 0
   389  006374  0E00               	movlw	low (__Lmediumconst shr (0+16))
   390  006376  6EF8               	movwf	tblptru,c
   391  006378  0100               	movlb	0
   392  00637A  EF57  F030         	goto	_main	;jump to C main() function
   393                           tblptru	equ	0xFF8
   394                           tblptrh	equ	0xFF7
   395                           tblptrl	equ	0xFF6
   396                           tablat	equ	0xFF5
   397                           postinc0	equ	0xFEE
   398                           wreg	equ	0xFE8
   399                           
   400                           	psect	bssCOMRAM
   401  000001                     __pbssCOMRAM:
   402                           	opt stack 0
   403  000001                     _motors_pwm:
   404                           	opt stack 0
   405  000001                     	ds	4
   406  000005                     _pBDTEntryEP0OutCurrent:
   407                           	opt stack 0
   408  000005                     	ds	2
   409  000007                     _pBDTEntryEP0OutNext:
   410                           	opt stack 0
   411  000007                     	ds	2
   412  000009                     _pDst:
   413                           	opt stack 0
   414  000009                     	ds	2
   415  00000B                     _sensors_i2c_async_rw_buffer:
   416                           	opt stack 0
   417  00000B                     	ds	2
   418  00000D                     _BothEP0OutUOWNsSet:
   419                           	opt stack 0
   420  00000D                     	ds	1
   421  00000E                     _RemoteWakeup:
   422                           	opt stack 0
   423  00000E                     	ds	1
   424  00000F                     _USBDeferINDataStagePackets:
   425                           	opt stack 0
   426  00000F                     	ds	1
   427  000010                     _USBDeferOUTDataStagePackets:
   428                           	opt stack 0
   429  000010                     	ds	1
   430  000011                     _USBDeferStatusStagePacket:
   431                           	opt stack 0
   432  000011                     	ds	1
   433  000012                     _USBDeviceState:
   434                           	opt stack 0
   435  000012                     	ds	1
   436  000013                     _USBStatusStageTimeoutCounter:
   437                           	opt stack 0
   438  000013                     	ds	1
   439  000014                     _comm_usb_is_configured:
   440                           	opt stack 0
   441  000014                     	ds	1
   442  000015                     _controlTransferState:
   443                           	opt stack 0
   444  000015                     	ds	1
   445  000016                     _endpoint_number:
   446                           	opt stack 0
   447  000016                     	ds	1
   448  000017                     _leds_counter:
   449                           	opt stack 0
   450  000017                     	ds	1
   451  000018                     _leds_status_led_mode:
   452                           	opt stack 0
   453  000018                     	ds	1
   454  000019                     _motors_current_off_duration:
   455                           	opt stack 0
   456  000019                     	ds	1
   457  00001A                     _sensors_i2c_async_rw_buffer_progress:
   458                           	opt stack 0
   459  00001A                     	ds	1
   460  00001B                     _sensors_i2c_async_rw_buffer_size:
   461                           	opt stack 0
   462  00001B                     	ds	1
   463  00001C                     _sensors_i2c_async_rw_device_address:
   464                           	opt stack 0
   465  00001C                     	ds	1
   466  00001D                     _sensors_i2c_async_rw_operation:
   467                           	opt stack 0
   468  00001D                     	ds	1
   469  00001E                     _sensors_i2c_async_rw_register_address:
   470                           	opt stack 0
   471  00001E                     	ds	1
   472  00001F                     _sensors_i2c_async_rw_state:
   473                           	opt stack 0
   474  00001F                     	ds	1
   475  000020                     _sensors_measurement_read_buffer:
   476                           	opt stack 0
   477  000020                     	ds	1
   478  000021                     _sensors_measurement_read_state:
   479                           	opt stack 0
   480  000021                     	ds	1
   481  000022                     _sensors_measurement_started:
   482                           	opt stack 0
   483  000022                     	ds	1
   484  000023                     _shortPacketStatus:
   485                           	opt stack 0
   486  000023                     	ds	1
   487  000024                     _USBActiveConfiguration:
   488                           	opt stack 0
   489  000024                     	ds	1
   490  000025                     _USBAlternateInterface:
   491                           	opt stack 0
   492  000025                     	ds	1
   493  000026                     _USTATcopy:
   494                           	opt stack 0
   495  000026                     	ds	1
   496  000027                     _motors_current:
   497                           	opt stack 0
   498  000027                     	ds	1
   499                           tblptru	equ	0xFF8
   500                           tblptrh	equ	0xFF7
   501                           tblptrl	equ	0xFF6
   502                           tablat	equ	0xFF5
   503                           postinc0	equ	0xFEE
   504                           wreg	equ	0xFE8
   505                           
   506                           	psect	dataCOMRAM
   507  000051                     __pdataCOMRAM:
   508                           	opt stack 0
   509  000051                     sensors_i2c_async_rw_completed@AMI304_read_request:
   510                           	opt stack 0
   511  000051                     	ds	1
   512  000052                     sensors_i2c_async_rw_completed@MPL3115A2_read_request:
   513                           	opt stack 0
   514  000052                     	ds	1
   515                           tblptru	equ	0xFF8
   516                           tblptrh	equ	0xFF7
   517                           tblptrl	equ	0xFF6
   518                           tablat	equ	0xFF5
   519                           postinc0	equ	0xFEE
   520                           wreg	equ	0xFE8
   521                           
   522                           	psect	bssBANK0
   523  000060                     __pbssBANK0:
   524                           	opt stack 0
   525  000060                     _outPipes:
   526                           	opt stack 0
   527  000060                     	ds	8
   528  000068                     _motors_pwm_scale:
   529                           	opt stack 0
   530  000068                     	ds	4
   531  00006C                     _pBDTEntryIn:
   532                           	opt stack 0
   533  00006C                     	ds	4
   534  000070                     _pBDTEntryOut:
   535                           	opt stack 0
   536  000070                     	ds	4
   537  000074                     _comm_in_handle:
   538                           	opt stack 0
   539  000074                     	ds	2
   540  000076                     _comm_out_handle:
   541                           	opt stack 0
   542  000076                     	ds	2
   543  000078                     _ep_data_in:
   544                           	opt stack 0
   545  000078                     	ds	2
   546  00007A                     _ep_data_out:
   547                           	opt stack 0
   548  00007A                     	ds	2
   549  00007C                     _USBBusIsSuspended:
   550                           	opt stack 0
   551  00007C                     	ds	1
   552  00007D                     _USBStatusStageEnabledFlag1:
   553                           	opt stack 0
   554  00007D                     	ds	1
   555  00007E                     _USBStatusStageEnabledFlag2:
   556                           	opt stack 0
   557  00007E                     	ds	1
   558  00007F                     _sensors_measurement_buffers_current:
   559                           	opt stack 0
   560  00007F                     	ds	1
   561  000080                     _sensors_measurement_buffers_ready:
   562                           	opt stack 0
   563  000080                     	ds	1
   564  000081                     _sensors_measurement_buffers:
   565                           	opt stack 0
   566  000081                     	ds	50
   567  0000B3                     _inPipes:
   568                           	opt stack 0
   569  0000B3                     	ds	6
   570                           tblptru	equ	0xFF8
   571                           tblptrh	equ	0xFF7
   572                           tblptrl	equ	0xFF6
   573                           tablat	equ	0xFF5
   574                           postinc0	equ	0xFEE
   575                           wreg	equ	0xFE8
   576                           
   577                           	psect	cstackBANK0
   578  0000B9                     __pcstackBANK0:
   579                           	opt stack 0
   580  0000B9                     ??_interrupt_high:
   581                           
   582                           ; 0 bytes @ 0x0
   583  0000B9                     	ds	14
   584  0000C7                     ?_motors_set_pwm:
   585                           	opt stack 0
   586  0000C7                     ?_OpenI2C:
   587                           	opt stack 0
   588  0000C7                     ?_sensors_measurement_get:
   589                           	opt stack 0
   590  0000C7                     ?_memset:
   591                           	opt stack 0
   592  0000C7                     ?_USBTransferOnePacket:
   593                           	opt stack 0
   594  0000C7                     USBTransferOnePacket@dir:
   595                           	opt stack 0
   596  0000C7                     motors_set_pwm@m1:
   597                           	opt stack 0
   598  0000C7                     OpenI2C@slew:
   599                           	opt stack 0
   600  0000C7                     WriteI2C@data_out:
   601                           	opt stack 0
   602  0000C7                     sensors_measurement_get@m:
   603                           	opt stack 0
   604  0000C7                     memset@p1:
   605                           	opt stack 0
   606                           
   607                           ; 2 bytes @ 0xE
   608  0000C7                     	ds	1
   609  0000C8                     ?_sensors_i2c_write_bytes:
   610                           	opt stack 0
   611  0000C8                     ?_sensors_i2c_read_bytes:
   612                           	opt stack 0
   613  0000C8                     motors_set_pwm@m2:
   614                           	opt stack 0
   615  0000C8                     sensors_i2c_write_bytes@ra:
   616                           	opt stack 0
   617  0000C8                     sensors_i2c_read_bytes@ra:
   618                           	opt stack 0
   619  0000C8                     OpenI2C@sync_mode:
   620                           	opt stack 0
   621  0000C8                     USBTransferOnePacket@data:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0xF
   625  0000C8                     	ds	1
   626  0000C9                     ??_sensors_measurement_get:
   627  0000C9                     motors_set_pwm@m3:
   628                           	opt stack 0
   629  0000C9                     sensors_i2c_write_bytes@len:
   630                           	opt stack 0
   631  0000C9                     sensors_i2c_read_bytes@len:
   632                           	opt stack 0
   633  0000C9                     memset@c:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x10
   637  0000C9                     	ds	1
   638  0000CA                     USBTransferOnePacket@len:
   639                           	opt stack 0
   640  0000CA                     motors_set_pwm@m0:
   641                           	opt stack 0
   642  0000CA                     sensors_i2c_write_bytes@data:
   643                           	opt stack 0
   644  0000CA                     sensors_i2c_read_bytes@data:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0x11
   648  0000CA                     	ds	1
   649  0000CB                     ??_sensors_i2c_read_bytes:
   650  0000CB                     USBTransferOnePacket@ep:
   651                           	opt stack 0
   652  0000CB                     sensors_i2c_write_bytes@da:
   653                           	opt stack 0
   654  0000CB                     memset@n:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x12
   658  0000CB                     	ds	1
   659  0000CC                     sensors_i2c_write_bytes@i:
   660                           	opt stack 0
   661  0000CC                     USBTransferOnePacket@handle:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x13
   665  0000CC                     	ds	1
   666  0000CD                     ?_sensors_i2c_write_byte:
   667                           	opt stack 0
   668  0000CD                     sensors_i2c_write_byte@ra:
   669                           	opt stack 0
   670  0000CD                     memset@p:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x14
   674  0000CD                     	ds	1
   675  0000CE                     sensors_measurement_get@buffer:
   676                           	opt stack 0
   677  0000CE                     sensors_i2c_write_byte@data:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x15
   681  0000CE                     	ds	1
   682  0000CF                     USBDeviceInit@i:
   683                           	opt stack 0
   684  0000CF                     sensors_i2c_write_byte@da:
   685                           	opt stack 0
   686  0000CF                     _comm_process$1734:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x16
   690  0000CF                     	ds	1
   691  0000D0                     sensors_i2c_read_bytes@i:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x17
   695  0000D0                     	ds	1
   696  0000D1                     sensors_i2c_read_bytes@da:
   697                           	opt stack 0
   698  0000D1                     _comm_process$1803:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x18
   702  0000D1                     	ds	1
   703  0000D2                     ?_sensors_i2c_read_byte:
   704                           	opt stack 0
   705  0000D2                     sensors_i2c_read_byte@ra:
   706                           	opt stack 0
   707                           
   708                           ; 1 bytes @ 0x19
   709  0000D2                     	ds	1
   710  0000D3                     sensors_i2c_read_byte@data:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x1A
   714  0000D3                     	ds	1
   715  0000D4                     sensors_i2c_read_byte@da:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x1B
   719  0000D4                     	ds	1
   720  0000D5                     ??_sensors_init:
   721                           
   722                           ; 0 bytes @ 0x1C
   723  0000D5                     	ds	1
   724  0000D6                     sensors_init@data:
   725                           	opt stack 0
   726                           
   727                           ; 1 bytes @ 0x1D
   728  0000D6                     	ds	1
   729  0000D7                     tblptru	equ	0xFF8
   730                           tblptrh	equ	0xFF7
   731                           tblptrl	equ	0xFF6
   732                           tablat	equ	0xFF5
   733                           postinc0	equ	0xFEE
   734                           wreg	equ	0xFE8
   735                           
   736                           ; 0 bytes @ 0x1E
   737                           
   738                           	psect	cstackCOMRAM
   739  000028                     __pcstackCOMRAM:
   740                           	opt stack 0
   741  000028                     ??_interrupt_low:
   742  000028                     
   743                           ; 1 bytes @ 0x0
   744  000028                     	ds	1
   745  000029                     ?_USBConfigureEndpoint:
   746                           	opt stack 0
   747  000029                     ??_leds_isr:
   748  000029                     ??_motors_isr:
   749  000029                     ?_sensors_i2c_async_read_bytes:
   750                           	opt stack 0
   751  000029                     ??_USBCtrlTrfRxService:
   752  000029                     ??_USBStdGetDscHandler:
   753  000029                     ??_USBStdGetStatusHandler:
   754  000029                     ?_sensors_i2c_async_write_bytes:
   755                           	opt stack 0
   756  000029                     ?i2_USBTransferOnePacket:
   757                           	opt stack 0
   758  000029                     ?i2_memset:
   759                           	opt stack 0
   760  000029                     USBConfigureEndpoint@direction:
   761                           	opt stack 0
   762  000029                     USBCtrlTrfTxService@byteToSend:
   763                           	opt stack 0
   764  000029                     sensors_i2c_async_read_bytes@ra:
   765                           	opt stack 0
   766  000029                     sensors_i2c_async_write_bytes@ra:
   767                           	opt stack 0
   768  000029                     i2USBTransferOnePacket@dir:
   769                           	opt stack 0
   770  000029                     i2memset@p1:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0x1
   774  000029                     	ds	1
   775  00002A                     ??_USBConfigureEndpoint:
   776  00002A                     USBCtrlTrfRxService@i:
   777                           	opt stack 0
   778  00002A                     USBCtrlTrfInHandler@lastDTS:
   779                           	opt stack 0
   780  00002A                     sensors_i2c_async_read_bytes@len:
   781                           	opt stack 0
   782  00002A                     sensors_i2c_async_write_bytes@len:
   783                           	opt stack 0
   784  00002A                     USBStdGetStatusHandler@p:
   785                           	opt stack 0
   786  00002A                     i2USBTransferOnePacket@data:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0x2
   790  00002A                     	ds	1
   791  00002B                     USBCtrlTrfRxService@byteToRead:
   792                           	opt stack 0
   793  00002B                     motors_isr@motor_pwm_bit:
   794                           	opt stack 0
   795  00002B                     sensors_i2c_async_read_bytes@data:
   796                           	opt stack 0
   797  00002B                     sensors_i2c_async_write_bytes@data:
   798                           	opt stack 0
   799  00002B                     i2memset@c:
   800                           	opt stack 0
   801                           
   802                           ; 2 bytes @ 0x3
   803  00002B                     	ds	1
   804  00002C                     sensors_i2c_async_read_bytes@da:
   805                           	opt stack 0
   806  00002C                     sensors_i2c_async_write_bytes@da:
   807                           	opt stack 0
   808  00002C                     i2USBTransferOnePacket@len:
   809                           	opt stack 0
   810                           
   811                           ; 1 bytes @ 0x4
   812  00002C                     	ds	1
   813  00002D                     i2USBTransferOnePacket@ep:
   814                           	opt stack 0
   815  00002D                     i2memset@n:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x5
   819  00002D                     	ds	1
   820  00002E                     i2USBTransferOnePacket@handle:
   821                           	opt stack 0
   822                           
   823                           ; 2 bytes @ 0x6
   824  00002E                     	ds	1
   825  00002F                     i2memset@p:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x7
   829  00002F                     	ds	1
   830  000030                     USBConfigureEndpoint@EPNum:
   831                           	opt stack 0
   832                           
   833                           ; 1 bytes @ 0x8
   834  000030                     	ds	1
   835  000031                     i2USBDeviceInit@i:
   836                           	opt stack 0
   837  000031                     USBConfigureEndpoint@handle:
   838                           	opt stack 0
   839                           
   840                           ; 2 bytes @ 0x9
   841  000031                     	ds	1
   842  000032                     leds_isr@pat_flag:
   843                           	opt stack 0
   844                           
   845                           ; 4 bytes @ 0xA
   846  000032                     	ds	1
   847  000033                     ?_USBEnableEndpoint:
   848                           	opt stack 0
   849  000033                     USBEnableEndpoint@options:
   850                           	opt stack 0
   851                           
   852                           ; 1 bytes @ 0xB
   853  000033                     	ds	1
   854  000034                     ??_USBEnableEndpoint:
   855                           
   856                           ; 0 bytes @ 0xC
   857  000034                     	ds	2
   858  000036                     USBEnableEndpoint@p:
   859                           	opt stack 0
   860                           
   861                           ; 2 bytes @ 0xE
   862  000036                     	ds	2
   863  000038                     USBEnableEndpoint@ep:
   864                           	opt stack 0
   865                           
   866                           ; 1 bytes @ 0x10
   867  000038                     	ds	1
   868  000039                     ?_USER_USB_CALLBACK_EVENT_HANDLER:
   869                           	opt stack 0
   870  000039                     USER_USB_CALLBACK_EVENT_HANDLER@event:
   871                           	opt stack 0
   872                           
   873                           ; 2 bytes @ 0x11
   874  000039                     	ds	2
   875  00003B                     
   876                           ; 2 bytes @ 0x13
   877  00003B                     	ds	2
   878  00003D                     
   879                           ; 2 bytes @ 0x15
   880  00003D                     	ds	2
   881  00003F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
   882                           
   883                           ; 0 bytes @ 0x17
   884  00003F                     	ds	2
   885  000041                     ??_USBStdFeatureReqHandler:
   886  000041                     USBStdSetCfgHandler@i:
   887                           	opt stack 0
   888                           
   889                           ; 1 bytes @ 0x19
   890  000041                     	ds	2
   891  000043                     USBStdFeatureReqHandler@pUEP:
   892                           	opt stack 0
   893                           
   894                           ; 2 bytes @ 0x1B
   895  000043                     	ds	2
   896  000045                     USBStdFeatureReqHandler@current_ep_data:
   897                           	opt stack 0
   898                           
   899                           ; 1 bytes @ 0x1D
   900  000045                     	ds	1
   901  000046                     USBStdFeatureReqHandler@p:
   902                           	opt stack 0
   903                           
   904                           ; 2 bytes @ 0x1E
   905  000046                     	ds	2
   906  000048                     ??_USBCheckStdRequest:
   907                           
   908                           ; 0 bytes @ 0x20
   909  000048                     	ds	1
   910  000049                     ??_USBCtrlEPService:
   911  000049                     
   912                           ; 0 bytes @ 0x21
   913  000049                     	ds	2
   914  00004B                     USBCtrlEPService@setup_cnt:
   915                           	opt stack 0
   916                           
   917                           ; 1 bytes @ 0x23
   918  00004B                     	ds	1
   919  00004C                     ??_USBDeviceTasks:
   920                           
   921                           ; 0 bytes @ 0x24
   922  00004C                     	ds	1
   923  00004D                     USBDeviceTasks@i:
   924                           	opt stack 0
   925                           
   926                           ; 1 bytes @ 0x25
   927  00004D                     	ds	1
   928  00004E                     tblptru	equ	0xFF8
   929                           tblptrh	equ	0xFF7
   930                           tblptrl	equ	0xFF6
   931                           tablat	equ	0xFF5
   932                           postinc0	equ	0xFEE
   933                           wreg	equ	0xFE8
   934                           
   935                           ; 0 bytes @ 0x26
   936 ;;
   937 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   938 ;;
   939 ;; *************** function _main *****************
   940 ;; Defined at:
   941 ;;		line 10 in file "main.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;		None               void
   948 ;; Registers used:
   949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   955 ;;      Params:         0       0       0       0       0       0       0       0       0
   956 ;;      Locals:         0       0       0       0       0       0       0       0       0
   957 ;;      Temps:          0       0       0       0       0       0       0       0       0
   958 ;;      Totals:         0       0       0       0       0       0       0       0       0
   959 ;;Total ram usage:        0 bytes
   960 ;; Hardware stack levels required when called:   19
   961 ;; This function calls:
   962 ;;		_app_init
   963 ;;		_app_process
   964 ;; This function is called by:
   965 ;;		Startup code after reset
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text0
   970  0060AE                     __ptext0:
   971                           	opt stack 0
   972  0060AE                     _main:
   973                           	opt stack 12
   974                           
   975                           ;main.c: 13: app_init();
   976                           
   977                           ;incstack = 0
   978                           ;incstack = 0
   979  0060AE  EC89  F031         	call	_app_init	;wreg free
   980  0060B2                     l395:
   981  0060B2  EC78  F030         	call	_app_process	;wreg free
   982  0060B6  D7FD               	goto	l395
   983  0060B8                     __end_of_main:
   984                           	opt stack 0
   985                           tblptru	equ	0xFF8
   986                           tblptrh	equ	0xFF7
   987                           tblptrl	equ	0xFF6
   988                           tablat	equ	0xFF5
   989                           postinc0	equ	0xFEE
   990                           wreg	equ	0xFE8
   991                           
   992 ;; *************** function _app_process *****************
   993 ;; Defined at:
   994 ;;		line 34 in file "app.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;		None               void
  1001 ;; Registers used:
  1002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/4
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1008 ;;      Params:         0       0       0       0       0       0       0       0       0
  1009 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1010 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1011 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1012 ;;Total ram usage:        0 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; Hardware stack levels required when called:   15
  1015 ;; This function calls:
  1016 ;;		_comm_process
  1017 ;;		_leds_process
  1018 ;;		_motors_process
  1019 ;;		_sensors_process
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text1
  1026  0060F0                     __ptext1:
  1027                           	opt stack 0
  1028  0060F0                     _app_process:
  1029                           	opt stack 15
  1030                           
  1031                           ;app.c: 35: leds_process();
  1032                           
  1033                           ;incstack = 0
  1034                           ;incstack = 0
  1035  0060F0  EC53  F030         	call	_leds_process	;wreg free
  1036                           
  1037                           ;app.c: 36: motors_process();
  1038  0060F4  EC54  F030         	call	_motors_process	;wreg free
  1039                           
  1040                           ;app.c: 37: sensors_process();
  1041  0060F8  EC0A  F008         	call	_sensors_process	;wreg free
  1042                           
  1043                           ;app.c: 38: comm_process();
  1044  0060FC  EF2D  F03A         	goto	_comm_process	;wreg free
  1045  006100                     __end_of_app_process:
  1046                           	opt stack 0
  1047                           tblptru	equ	0xFF8
  1048                           tblptrh	equ	0xFF7
  1049                           tblptrl	equ	0xFF6
  1050                           tablat	equ	0xFF5
  1051                           postinc0	equ	0xFEE
  1052                           wreg	equ	0xFE8
  1053                           
  1054 ;; *************** function _sensors_process *****************
  1055 ;; Defined at:
  1056 ;;		line 222 in file "/Users/zangel/microchip/mla/v2014_07_22/framework/usb/sensors.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;		None
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;		None
  1061 ;; Return value:  Size  Location     Type
  1062 ;;		None               void
  1063 ;; Registers used:
  1064 ;;		None
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/4
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1070 ;;      Params:         0       0       0       0       0       0       0       0       0
  1071 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1072 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1073 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1074 ;;Total ram usage:        0 bytes
  1075 ;; Hardware stack levels used:    1
  1076 ;; Hardware stack levels required when called:   13
  1077 ;; This function calls:
  1078 ;;		Nothing
  1079 ;; This function is called by:
  1080 ;;		_app_process
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text2
  1085  001014                     __ptext2:
  1086                           	opt stack 0
  1087  001014                     _sensors_process:
  1088                           	opt stack 16
  1089                           
  1090                           ;incstack = 0
  1091                           ;incstack = 0
  1092  001014  0012               	return	
  1093  001016                     __end_of_sensors_process:
  1094                           	opt stack 0
  1095                           tblptru	equ	0xFF8
  1096                           tblptrh	equ	0xFF7
  1097                           tblptrl	equ	0xFF6
  1098                           tablat	equ	0xFF5
  1099                           postinc0	equ	0xFEE
  1100                           wreg	equ	0xFE8
  1101                           
  1102 ;; *************** function _motors_process *****************
  1103 ;; Defined at:
  1104 ;;		line 102 in file "motors.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;		None
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;		None
  1109 ;; Return value:  Size  Location     Type
  1110 ;;		None               void
  1111 ;; Registers used:
  1112 ;;		None
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/4
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1118 ;;      Params:         0       0       0       0       0       0       0       0       0
  1119 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1121 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1122 ;;Total ram usage:        0 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; Hardware stack levels required when called:   13
  1125 ;; This function calls:
  1126 ;;		Nothing
  1127 ;; This function is called by:
  1128 ;;		_app_process
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text3
  1133  0060A8                     __ptext3:
  1134                           	opt stack 0
  1135  0060A8                     _motors_process:
  1136                           	opt stack 16
  1137                           
  1138                           ;incstack = 0
  1139                           ;incstack = 0
  1140  0060A8  0012               	return	
  1141  0060AA                     __end_of_motors_process:
  1142                           	opt stack 0
  1143                           tblptru	equ	0xFF8
  1144                           tblptrh	equ	0xFF7
  1145                           tblptrl	equ	0xFF6
  1146                           tablat	equ	0xFF5
  1147                           postinc0	equ	0xFEE
  1148                           wreg	equ	0xFE8
  1149                           
  1150 ;; *************** function _leds_process *****************
  1151 ;; Defined at:
  1152 ;;		line 96 in file "leds.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;		None               void
  1159 ;; Registers used:
  1160 ;;		None
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/4
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1166 ;;      Params:         0       0       0       0       0       0       0       0       0
  1167 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1168 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1169 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1170 ;;Total ram usage:        0 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:   13
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_app_process
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text4
  1181  0060A6                     __ptext4:
  1182                           	opt stack 0
  1183  0060A6                     _leds_process:
  1184                           	opt stack 16
  1185                           
  1186                           ;incstack = 0
  1187                           ;incstack = 0
  1188  0060A6  0012               	return	
  1189  0060A8                     __end_of_leds_process:
  1190                           	opt stack 0
  1191                           tblptru	equ	0xFF8
  1192                           tblptrh	equ	0xFF7
  1193                           tblptrl	equ	0xFF6
  1194                           tablat	equ	0xFF5
  1195                           postinc0	equ	0xFEE
  1196                           wreg	equ	0xFE8
  1197                           
  1198 ;; *************** function _comm_process *****************
  1199 ;; Defined at:
  1200 ;;		line 35 in file "comm.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;		None
  1205 ;; Return value:  Size  Location     Type
  1206 ;;		None               void
  1207 ;; Registers used:
  1208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/4
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1214 ;;      Params:         0       0       0       0       0       0       0       0       0
  1215 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1217 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1218 ;;Total ram usage:        4 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:   14
  1221 ;; This function calls:
  1222 ;;		_USBTransferOnePacket
  1223 ;;		_motors_set_pwm
  1224 ;;		_sensors_measurement_get
  1225 ;; This function is called by:
  1226 ;;		_app_process
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text5
  1231  00745A                     __ptext5:
  1232                           	opt stack 0
  1233  00745A                     _comm_process:
  1234                           	opt stack 15
  1235                           
  1236                           ;comm.c: 36: if(USBDeviceState < CONFIGURED_STATE) return;
  1237                           
  1238                           ;incstack = 0
  1239                           ;incstack = 0
  1240  00745A  0E20               	movlw	32
  1241  00745C  6012               	cpfslt	_USBDeviceState,c	;volatile
  1242  00745E  D001               	goto	l453
  1243  007460  D081               	goto	l454
  1244  007462                     l453:
  1245                           
  1246                           ;comm.c: 37: if(UCONbits.SUSPND) return;
  1247  007462  B26D               	btfsc	3949,1,c	;volatile
  1248  007464  D07F               	goto	l454
  1249                           
  1250                           ;comm.c: 39: if(!(comm_out_handle==0?0:((volatile BDT_ENTRY*)comm_out_handle)->STAT.UOWN
      +                          ))
  1251  007466  0100               	movlb	0	; () banked
  1252  007468  5177               	movf	(_comm_out_handle+1)& (0+255),w,b
  1253  00746A  1176               	iorwf	_comm_out_handle& (0+255),w,b
  1254  00746C  E009               	bz	l458
  1255                           
  1256                           ; BSR set to: 0
  1257  00746E  C076  FFD9         	movff	_comm_out_handle,fsr2l
  1258  007472  C077  FFDA         	movff	_comm_out_handle+1,fsr2h
  1259  007476  34DF               	rlcf	223,w,c
  1260  007478  36E8               	rlcf	wreg,f,c
  1261  00747A  0B01               	andlw	1
  1262  00747C  6FCF               	movwf	_comm_process$1734& (0+255),b
  1263  00747E  D001               	goto	L1
  1264  007480                     l458:
  1265                           
  1266                           ; BSR set to: 0
  1267  007480  6BCF               	clrf	_comm_process$1734& (0+255),b
  1268  007482                     L1:
  1269  007482  6BD0               	clrf	(_comm_process$1734+1)& (0+255),b
  1270                           
  1271                           ; BSR set to: 0
  1272  007484  51D0               	movf	(_comm_process$1734+1)& (0+255),w,b
  1273  007486  11CF               	iorwf	_comm_process$1734& (0+255),w,b
  1274  007488  E02E               	bz	l4133
  1275  00748A  D041               	goto	l4137
  1276  00748C                     l462:
  1277                           
  1278                           ; BSR set to: 5
  1279                           ;comm.c: 44: leds_led0_mode = comm_out_buffer.packet.leds_mode.led0_mode;
  1280  00748C  C501 F04E          	movff	1281,_leds_led0_mode
  1281                           
  1282                           ;comm.c: 45: leds_led1_mode = comm_out_buffer.packet.leds_mode.led1_mode;
  1283  007490  C502 F04F          	movff	1282,_leds_led1_mode
  1284                           
  1285                           ;comm.c: 46: leds_led2_mode = comm_out_buffer.packet.leds_mode.led2_mode;
  1286  007494  C503 F0D7          	movff	1283,_leds_led2_mode
  1287                           
  1288                           ;comm.c: 47: leds_led3_mode = comm_out_buffer.packet.leds_mode.led3_mode;
  1289  007498  C504 F0D8          	movff	1284,_leds_led3_mode
  1290                           
  1291                           ;comm.c: 48: break;
  1292  00749C  D02A               	goto	l4135
  1293  00749E                     l4129:
  1294                           
  1295                           ; BSR set to: 5
  1296                           ;comm.c: 51: motors_set_pwm(
  1297                           ;comm.c: 52: ((uint16_t)comm_out_buffer.packet.motors_pwm.motor0_pwm * 94) >> 8,
  1298                           ;comm.c: 53: ((uint16_t)comm_out_buffer.packet.motors_pwm.motor1_pwm * 94) >> 8,
  1299                           ;comm.c: 54: ((uint16_t)comm_out_buffer.packet.motors_pwm.motor2_pwm * 94) >> 8,
  1300                           ;comm.c: 55: ((uint16_t)comm_out_buffer.packet.motors_pwm.motor3_pwm * 94) >> 8
  1301                           ;comm.c: 56: );
  1302  00749E  5102               	movf	2,w,b
  1303  0074A0  0D5E               	mullw	94
  1304  0074A2  CFF4 FFF3          	movff	prodh,prodl
  1305  0074A6  6AF4               	clrf	prodh,c
  1306  0074A8  50F3               	movf	prodl,w,c
  1307  0074AA  0100               	movlb	0	; () banked
  1308  0074AC  6FC7               	movwf	?_motors_set_pwm& (0+255),b
  1309  0074AE  0105               	movlb	5	; () banked
  1310  0074B0  5103               	movf	3,w,b
  1311  0074B2  0D5E               	mullw	94
  1312  0074B4  CFF4 FFF3          	movff	prodh,prodl
  1313  0074B8  6AF4               	clrf	prodh,c
  1314  0074BA  50F3               	movf	prodl,w,c
  1315  0074BC  0100               	movlb	0	; () banked
  1316  0074BE  6FC8               	movwf	(?_motors_set_pwm+1)& (0+255),b
  1317  0074C0  0105               	movlb	5	; () banked
  1318  0074C2  5104               	movf	4,w,b
  1319  0074C4  0D5E               	mullw	94
  1320  0074C6  CFF4 FFF3          	movff	prodh,prodl
  1321  0074CA  6AF4               	clrf	prodh,c
  1322  0074CC  50F3               	movf	prodl,w,c
  1323  0074CE  0100               	movlb	0	; () banked
  1324  0074D0  6FC9               	movwf	(?_motors_set_pwm+2)& (0+255),b
  1325  0074D2  0105               	movlb	5	; () banked
  1326  0074D4  5101               	movf	1,w,b
  1327  0074D6  0D5E               	mullw	94
  1328  0074D8  CFF4 FFF3          	movff	prodh,prodl
  1329  0074DC  6AF4               	clrf	prodh,c
  1330  0074DE  50F3               	movf	prodl,w,c
  1331  0074E0  ECDE  F031         	call	_motors_set_pwm
  1332                           
  1333                           ;comm.c: 57: break;
  1334  0074E4  D006               	goto	l4135
  1335  0074E6                     l4133:
  1336                           
  1337                           ; BSR set to: 0
  1338  0074E6  0105               	movlb	5	; () banked
  1339  0074E8  5100               	movf	0,w,b
  1340                           
  1341                           ; Switch size 1, requested type "speed"
  1342                           ; Number of cases is 2, Range of values is 1 to 2
  1343                           ; switch strategies available:
  1344                           ; Name         Instructions Cycles
  1345                           ; simple_byte            7     4 (average)
  1346                           ;	Chosen strategy is simple_byte
  1347  0074EA  0A01               	xorlw	1	; case 1
  1348  0074EC  E0CF               	bz	l462
  1349  0074EE  0A03               	xorlw	3	; case 2
  1350  0074F0  E0D6               	bz	l4129
  1351  0074F2                     l4135:
  1352                           
  1353                           ;comm.c: 59: comm_out_handle = USBTransferOnePacket(1,0,(uint8_t*)&comm_out_buffer,64);
  1354  0074F2  0100               	movlb	0	; () banked
  1355  0074F4  6BC7               	clrf	?_USBTransferOnePacket& (0+255),b
  1356  0074F6  0E05               	movlw	5
  1357  0074F8  6FC9               	movwf	(?_USBTransferOnePacket+2)& (0+255),b
  1358  0074FA  6BC8               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
  1359  0074FC  0E40               	movlw	64
  1360  0074FE  6FCA               	movwf	(?_USBTransferOnePacket+3)& (0+255),b
  1361  007500  0E01               	movlw	1
  1362  007502  ECBF  F034         	call	_USBTransferOnePacket
  1363  007506  C0C7  F076         	movff	?_USBTransferOnePacket,_comm_out_handle
  1364  00750A  C0C8  F077         	movff	?_USBTransferOnePacket+1,_comm_out_handle+1
  1365  00750E                     l4137:
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;comm.c: 60: }
  1369                           ;comm.c: 63: if(!(comm_in_handle==0?0:((volatile BDT_ENTRY*)comm_in_handle)->STAT.UOWN))
  1370  00750E  5175               	movf	(_comm_in_handle+1)& (0+255),w,b
  1371  007510  1174               	iorwf	_comm_in_handle& (0+255),w,b
  1372  007512  E009               	bz	l467
  1373                           
  1374                           ; BSR set to: 0
  1375  007514  C074  FFD9         	movff	_comm_in_handle,fsr2l
  1376  007518  C075  FFDA         	movff	_comm_in_handle+1,fsr2h
  1377  00751C  34DF               	rlcf	223,w,c
  1378  00751E  36E8               	rlcf	wreg,f,c
  1379  007520  0B01               	andlw	1
  1380  007522  6FD1               	movwf	_comm_process$1803& (0+255),b
  1381  007524  D001               	goto	L2
  1382  007526                     l467:
  1383                           
  1384                           ; BSR set to: 0
  1385  007526  6BD1               	clrf	_comm_process$1803& (0+255),b
  1386  007528                     L2:
  1387  007528  6BD2               	clrf	(_comm_process$1803+1)& (0+255),b
  1388                           
  1389                           ; BSR set to: 0
  1390  00752A  51D2               	movf	(_comm_process$1803+1)& (0+255),w,b
  1391  00752C  11D1               	iorwf	_comm_process$1803& (0+255),w,b
  1392  00752E  E11A               	bnz	l454
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;comm.c: 64: {
  1396                           ;comm.c: 65: if(sensors_measurement_get(&comm_in_buffer.packet.measurement))
  1397  007530  0E05               	movlw	5
  1398  007532  0100               	movlb	0	; () banked
  1399  007534  6FC8               	movwf	(?_sensors_measurement_get+1)& (0+255),b
  1400  007536  0E41               	movlw	65
  1401  007538  6FC7               	movwf	?_sensors_measurement_get& (0+255),b
  1402  00753A  EC86  F03E         	call	_sensors_measurement_get	;wreg free
  1403  00753E  0900               	iorlw	0
  1404  007540  E011               	bz	l454
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;comm.c: 66: {
  1408                           ;comm.c: 67: comm_in_buffer.packet.id = 0x00;
  1409  007542  0105               	movlb	5	; () banked
  1410  007544  6B40               	clrf	64,b
  1411                           
  1412                           ; BSR set to: 5
  1413                           ;comm.c: 68: comm_in_handle = USBTransferOnePacket(1,1,(uint8_t*)&comm_in_buffer,64);
  1414  007546  0E01               	movlw	1
  1415  007548  0100               	movlb	0	; () banked
  1416  00754A  6FC7               	movwf	?_USBTransferOnePacket& (0+255),b
  1417  00754C  0E05               	movlw	5
  1418  00754E  6FC9               	movwf	(?_USBTransferOnePacket+2)& (0+255),b
  1419  007550  0E40               	movlw	64
  1420  007552  6FC8               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
  1421  007554  6FCA               	movwf	(?_USBTransferOnePacket+3)& (0+255),b
  1422  007556  0E01               	movlw	1
  1423  007558  ECBF  F034         	call	_USBTransferOnePacket
  1424  00755C  C0C7  F074         	movff	?_USBTransferOnePacket,_comm_in_handle
  1425  007560  C0C8  F075         	movff	?_USBTransferOnePacket+1,_comm_in_handle+1
  1426  007564                     l454:
  1427  007564  0012               	return	
  1428  007566                     __end_of_comm_process:
  1429                           	opt stack 0
  1430                           tblptru	equ	0xFF8
  1431                           tblptrh	equ	0xFF7
  1432                           tblptrl	equ	0xFF6
  1433                           tablat	equ	0xFF5
  1434                           prodh	equ	0xFF4
  1435                           prodl	equ	0xFF3
  1436                           postinc0	equ	0xFEE
  1437                           wreg	equ	0xFE8
  1438                           fsr2h	equ	0xFDA
  1439                           fsr2l	equ	0xFD9
  1440                           
  1441 ;; *************** function _sensors_measurement_get *****************
  1442 ;; Defined at:
  1443 ;;		line 256 in file "/Users/zangel/microchip/mla/v2014_07_22/framework/usb/sensors.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;  m               2   14[BANK0 ] PTR struct .
  1446 ;;		 -> comm_in_buffer..(24), comm_in_buffer(64), 
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  buffer          1   21[BANK0 ] PTR const unsigned char 
  1449 ;;		 -> sensors_measurement_buffers(50), 
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      unsigned char 
  1452 ;; Registers used:
  1453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1454 ;; Tracked objects:
  1455 ;;		On entry : F/0
  1456 ;;		On exit  : F/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1459 ;;      Params:         0       2       0       0       0       0       0       0       0
  1460 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1461 ;;      Temps:          0       5       0       0       0       0       0       0       0
  1462 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1463 ;;Total ram usage:        8 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:   13
  1466 ;; This function calls:
  1467 ;;		Nothing
  1468 ;; This function is called by:
  1469 ;;		_comm_process
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text6
  1474  007D0C                     __ptext6:
  1475                           	opt stack 0
  1476  007D0C                     _sensors_measurement_get:
  1477                           	opt stack 15
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;sensors.c: 257: uint8_t const *buffer;
  1481                           ;sensors.c: 258: if(!sensors_measurement_started || !sensors_measurement_buffers_ready)
  1482                           
  1483                           ;incstack = 0
  1484                           ;incstack = 0
  1485  007D0C  5022               	movf	_sensors_measurement_started,w,c	;volatile
  1486  007D0E  E002               	bz	l4185
  1487                           
  1488                           ; BSR set to: 0
  1489  007D10  6780               	tstfsz	_sensors_measurement_buffers_ready& (0+255),b	;volatile
  1490  007D12  D002               	goto	l4189
  1491  007D14                     l4185:
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;sensors.c: 259: return 0;
  1495  007D14  0E00               	movlw	0
  1496  007D16  D173               	goto	l759
  1497  007D18                     l4189:
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;sensors.c: 261: buffer = sensors_measurement_buffers[sensors_measurement_buffers_curren
      +                          t];
  1501  007D18  517F               	movf	_sensors_measurement_buffers_current& (0+255),w,b
  1502  007D1A  0D19               	mullw	25
  1503  007D1C  50F3               	movf	prodl,w,c
  1504  007D1E  0F81               	addlw	low _sensors_measurement_buffers
  1505  007D20  6FCE               	movwf	sensors_measurement_get@buffer& (0+255),b
  1506                           
  1507                           ; BSR set to: 0
  1508                           ;sensors.c: 263: m->acceleration.x = buffer[0] << 8 | buffer[1];
  1509  007D22  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1510  007D24  6ED9               	movwf	fsr2l,c
  1511  007D26  6ADA               	clrf	fsr2h,c
  1512  007D28  50DF               	movf	indf2,w,c
  1513  007D2A  6FCA               	movwf	(??_sensors_measurement_get+1)& (0+255),b
  1514  007D2C  6BC9               	clrf	??_sensors_measurement_get& (0+255),b
  1515  007D2E  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1516  007D30  6ED9               	movwf	fsr2l,c
  1517  007D32  6ADA               	clrf	fsr2h,c
  1518  007D34  2AD9               	incf	fsr2l,f,c
  1519  007D36  6ADA               	clrf	fsr2h,c
  1520  007D38  50DF               	movf	indf2,w,c
  1521  007D3A  13C9               	iorwf	??_sensors_measurement_get& (0+255),f,b
  1522  007D3C  C0C7  FFD9         	movff	sensors_measurement_get@m,fsr2l
  1523  007D40  C0C8  FFDA         	movff	sensors_measurement_get@m+1,fsr2h
  1524  007D44  C0C9  FFDE         	movff	??_sensors_measurement_get,postinc2
  1525  007D48  C0CA  FFDD         	movff	??_sensors_measurement_get+1,postdec2
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;sensors.c: 264: m->acceleration.y = buffer[2] << 8 | buffer[3];
  1529  007D4C  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1530  007D4E  6ED9               	movwf	fsr2l,c
  1531  007D50  6ADA               	clrf	fsr2h,c
  1532  007D52  0E02               	movlw	2
  1533  007D54  26D9               	addwf	fsr2l,f,c
  1534  007D56  6ADA               	clrf	fsr2h,c
  1535  007D58  50DF               	movf	indf2,w,c
  1536  007D5A  6FCA               	movwf	(??_sensors_measurement_get+1)& (0+255),b
  1537  007D5C  6BC9               	clrf	??_sensors_measurement_get& (0+255),b
  1538  007D5E  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1539  007D60  6ED9               	movwf	fsr2l,c
  1540  007D62  6ADA               	clrf	fsr2h,c
  1541  007D64  0E03               	movlw	3
  1542  007D66  26D9               	addwf	fsr2l,f,c
  1543  007D68  6ADA               	clrf	fsr2h,c
  1544  007D6A  50DF               	movf	indf2,w,c
  1545  007D6C  13C9               	iorwf	??_sensors_measurement_get& (0+255),f,b
  1546  007D6E  EE20 F002          	lfsr	2,2
  1547  007D72  51C7               	movf	sensors_measurement_get@m& (0+255),w,b
  1548  007D74  26D9               	addwf	fsr2l,f,c
  1549  007D76  51C8               	movf	(sensors_measurement_get@m+1)& (0+255),w,b
  1550  007D78  22DA               	addwfc	fsr2h,f,c
  1551  007D7A  C0C9  FFDE         	movff	??_sensors_measurement_get,postinc2
  1552  007D7E  C0CA  FFDD         	movff	??_sensors_measurement_get+1,postdec2
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;sensors.c: 265: m->acceleration.z = buffer[4] << 8 | buffer[5];
  1556  007D82  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1557  007D84  6ED9               	movwf	fsr2l,c
  1558  007D86  6ADA               	clrf	fsr2h,c
  1559  007D88  0E04               	movlw	4
  1560  007D8A  26D9               	addwf	fsr2l,f,c
  1561  007D8C  6ADA               	clrf	fsr2h,c
  1562  007D8E  50DF               	movf	indf2,w,c
  1563  007D90  6FCA               	movwf	(??_sensors_measurement_get+1)& (0+255),b
  1564  007D92  6BC9               	clrf	??_sensors_measurement_get& (0+255),b
  1565  007D94  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1566  007D96  6ED9               	movwf	fsr2l,c
  1567  007D98  6ADA               	clrf	fsr2h,c
  1568  007D9A  0E05               	movlw	5
  1569  007D9C  26D9               	addwf	fsr2l,f,c
  1570  007D9E  6ADA               	clrf	fsr2h,c
  1571  007DA0  50DF               	movf	indf2,w,c
  1572  007DA2  13C9               	iorwf	??_sensors_measurement_get& (0+255),f,b
  1573  007DA4  EE20 F004          	lfsr	2,4
  1574  007DA8  51C7               	movf	sensors_measurement_get@m& (0+255),w,b
  1575  007DAA  26D9               	addwf	fsr2l,f,c
  1576  007DAC  51C8               	movf	(sensors_measurement_get@m+1)& (0+255),w,b
  1577  007DAE  22DA               	addwfc	fsr2h,f,c
  1578  007DB0  C0C9  FFDE         	movff	??_sensors_measurement_get,postinc2
  1579  007DB4  C0CA  FFDD         	movff	??_sensors_measurement_get+1,postdec2
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;sensors.c: 267: m->rotation_rate.x = buffer[8] << 8 | buffer[9];
  1583  007DB8  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1584  007DBA  6ED9               	movwf	fsr2l,c
  1585  007DBC  6ADA               	clrf	fsr2h,c
  1586  007DBE  0E08               	movlw	8
  1587  007DC0  26D9               	addwf	fsr2l,f,c
  1588  007DC2  6ADA               	clrf	fsr2h,c
  1589  007DC4  50DF               	movf	indf2,w,c
  1590  007DC6  6FCA               	movwf	(??_sensors_measurement_get+1)& (0+255),b
  1591  007DC8  6BC9               	clrf	??_sensors_measurement_get& (0+255),b
  1592  007DCA  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1593  007DCC  6ED9               	movwf	fsr2l,c
  1594  007DCE  6ADA               	clrf	fsr2h,c
  1595  007DD0  0E09               	movlw	9
  1596  007DD2  26D9               	addwf	fsr2l,f,c
  1597  007DD4  6ADA               	clrf	fsr2h,c
  1598  007DD6  50DF               	movf	indf2,w,c
  1599  007DD8  13C9               	iorwf	??_sensors_measurement_get& (0+255),f,b
  1600  007DDA  EE20 F006          	lfsr	2,6
  1601  007DDE  51C7               	movf	sensors_measurement_get@m& (0+255),w,b
  1602  007DE0  26D9               	addwf	fsr2l,f,c
  1603  007DE2  51C8               	movf	(sensors_measurement_get@m+1)& (0+255),w,b
  1604  007DE4  22DA               	addwfc	fsr2h,f,c
  1605  007DE6  C0C9  FFDE         	movff	??_sensors_measurement_get,postinc2
  1606  007DEA  C0CA  FFDD         	movff	??_sensors_measurement_get+1,postdec2
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;sensors.c: 268: m->rotation_rate.y = buffer[10] << 8 | buffer[11];
  1610  007DEE  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1611  007DF0  6ED9               	movwf	fsr2l,c
  1612  007DF2  6ADA               	clrf	fsr2h,c
  1613  007DF4  0E0A               	movlw	10
  1614  007DF6  26D9               	addwf	fsr2l,f,c
  1615  007DF8  6ADA               	clrf	fsr2h,c
  1616  007DFA  50DF               	movf	indf2,w,c
  1617  007DFC  6FCA               	movwf	(??_sensors_measurement_get+1)& (0+255),b
  1618  007DFE  6BC9               	clrf	??_sensors_measurement_get& (0+255),b
  1619  007E00  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1620  007E02  6ED9               	movwf	fsr2l,c
  1621  007E04  6ADA               	clrf	fsr2h,c
  1622  007E06  0E0B               	movlw	11
  1623  007E08  26D9               	addwf	fsr2l,f,c
  1624  007E0A  6ADA               	clrf	fsr2h,c
  1625  007E0C  50DF               	movf	indf2,w,c
  1626  007E0E  13C9               	iorwf	??_sensors_measurement_get& (0+255),f,b
  1627  007E10  EE20 F008          	lfsr	2,8
  1628  007E14  51C7               	movf	sensors_measurement_get@m& (0+255),w,b
  1629  007E16  26D9               	addwf	fsr2l,f,c
  1630  007E18  51C8               	movf	(sensors_measurement_get@m+1)& (0+255),w,b
  1631  007E1A  22DA               	addwfc	fsr2h,f,c
  1632  007E1C  C0C9  FFDE         	movff	??_sensors_measurement_get,postinc2
  1633  007E20  C0CA  FFDD         	movff	??_sensors_measurement_get+1,postdec2
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;sensors.c: 269: m->rotation_rate.z = buffer[12] << 8 | buffer[13];
  1637  007E24  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1638  007E26  6ED9               	movwf	fsr2l,c
  1639  007E28  6ADA               	clrf	fsr2h,c
  1640  007E2A  0E0C               	movlw	12
  1641  007E2C  26D9               	addwf	fsr2l,f,c
  1642  007E2E  6ADA               	clrf	fsr2h,c
  1643  007E30  50DF               	movf	indf2,w,c
  1644  007E32  6FCA               	movwf	(??_sensors_measurement_get+1)& (0+255),b
  1645  007E34  6BC9               	clrf	??_sensors_measurement_get& (0+255),b
  1646  007E36  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1647  007E38  6ED9               	movwf	fsr2l,c
  1648  007E3A  6ADA               	clrf	fsr2h,c
  1649  007E3C  0E0D               	movlw	13
  1650  007E3E  26D9               	addwf	fsr2l,f,c
  1651  007E40  6ADA               	clrf	fsr2h,c
  1652  007E42  50DF               	movf	indf2,w,c
  1653  007E44  13C9               	iorwf	??_sensors_measurement_get& (0+255),f,b
  1654  007E46  EE20 F00A          	lfsr	2,10
  1655  007E4A  51C7               	movf	sensors_measurement_get@m& (0+255),w,b
  1656  007E4C  26D9               	addwf	fsr2l,f,c
  1657  007E4E  51C8               	movf	(sensors_measurement_get@m+1)& (0+255),w,b
  1658  007E50  22DA               	addwfc	fsr2h,f,c
  1659  007E52  C0C9  FFDE         	movff	??_sensors_measurement_get,postinc2
  1660  007E56  C0CA  FFDD         	movff	??_sensors_measurement_get+1,postdec2
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;sensors.c: 271: m->magnetic_field.x = buffer[20] << 8 | buffer[19];
  1664  007E5A  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1665  007E5C  6ED9               	movwf	fsr2l,c
  1666  007E5E  6ADA               	clrf	fsr2h,c
  1667  007E60  0E14               	movlw	20
  1668  007E62  26D9               	addwf	fsr2l,f,c
  1669  007E64  6ADA               	clrf	fsr2h,c
  1670  007E66  50DF               	movf	indf2,w,c
  1671  007E68  6FCA               	movwf	(??_sensors_measurement_get+1)& (0+255),b
  1672  007E6A  6BC9               	clrf	??_sensors_measurement_get& (0+255),b
  1673  007E6C  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1674  007E6E  6ED9               	movwf	fsr2l,c
  1675  007E70  6ADA               	clrf	fsr2h,c
  1676  007E72  0E13               	movlw	19
  1677  007E74  26D9               	addwf	fsr2l,f,c
  1678  007E76  6ADA               	clrf	fsr2h,c
  1679  007E78  50DF               	movf	indf2,w,c
  1680  007E7A  13C9               	iorwf	??_sensors_measurement_get& (0+255),f,b
  1681  007E7C  EE20 F00C          	lfsr	2,12
  1682  007E80  51C7               	movf	sensors_measurement_get@m& (0+255),w,b
  1683  007E82  26D9               	addwf	fsr2l,f,c
  1684  007E84  51C8               	movf	(sensors_measurement_get@m+1)& (0+255),w,b
  1685  007E86  22DA               	addwfc	fsr2h,f,c
  1686  007E88  C0C9  FFDE         	movff	??_sensors_measurement_get,postinc2
  1687  007E8C  C0CA  FFDD         	movff	??_sensors_measurement_get+1,postdec2
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;sensors.c: 272: m->magnetic_field.y = buffer[22] << 8 | buffer[21];
  1691  007E90  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1692  007E92  6ED9               	movwf	fsr2l,c
  1693  007E94  6ADA               	clrf	fsr2h,c
  1694  007E96  0E16               	movlw	22
  1695  007E98  26D9               	addwf	fsr2l,f,c
  1696  007E9A  6ADA               	clrf	fsr2h,c
  1697  007E9C  50DF               	movf	indf2,w,c
  1698  007E9E  6FCA               	movwf	(??_sensors_measurement_get+1)& (0+255),b
  1699  007EA0  6BC9               	clrf	??_sensors_measurement_get& (0+255),b
  1700  007EA2  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1701  007EA4  6ED9               	movwf	fsr2l,c
  1702  007EA6  6ADA               	clrf	fsr2h,c
  1703  007EA8  0E15               	movlw	21
  1704  007EAA  26D9               	addwf	fsr2l,f,c
  1705  007EAC  6ADA               	clrf	fsr2h,c
  1706  007EAE  50DF               	movf	indf2,w,c
  1707  007EB0  13C9               	iorwf	??_sensors_measurement_get& (0+255),f,b
  1708  007EB2  EE20 F00E          	lfsr	2,14
  1709  007EB6  51C7               	movf	sensors_measurement_get@m& (0+255),w,b
  1710  007EB8  26D9               	addwf	fsr2l,f,c
  1711  007EBA  51C8               	movf	(sensors_measurement_get@m+1)& (0+255),w,b
  1712  007EBC  22DA               	addwfc	fsr2h,f,c
  1713  007EBE  C0C9  FFDE         	movff	??_sensors_measurement_get,postinc2
  1714  007EC2  C0CA  FFDD         	movff	??_sensors_measurement_get+1,postdec2
  1715                           
  1716                           ; BSR set to: 0
  1717                           ;sensors.c: 273: m->magnetic_field.z = buffer[24] << 8 | buffer[23];
  1718  007EC6  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1719  007EC8  6ED9               	movwf	fsr2l,c
  1720  007ECA  6ADA               	clrf	fsr2h,c
  1721  007ECC  0E18               	movlw	24
  1722  007ECE  26D9               	addwf	fsr2l,f,c
  1723  007ED0  6ADA               	clrf	fsr2h,c
  1724  007ED2  50DF               	movf	indf2,w,c
  1725  007ED4  6FCA               	movwf	(??_sensors_measurement_get+1)& (0+255),b
  1726  007ED6  6BC9               	clrf	??_sensors_measurement_get& (0+255),b
  1727  007ED8  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1728  007EDA  6ED9               	movwf	fsr2l,c
  1729  007EDC  6ADA               	clrf	fsr2h,c
  1730  007EDE  0E17               	movlw	23
  1731  007EE0  26D9               	addwf	fsr2l,f,c
  1732  007EE2  6ADA               	clrf	fsr2h,c
  1733  007EE4  50DF               	movf	indf2,w,c
  1734  007EE6  13C9               	iorwf	??_sensors_measurement_get& (0+255),f,b
  1735  007EE8  EE20 F010          	lfsr	2,16
  1736  007EEC  51C7               	movf	sensors_measurement_get@m& (0+255),w,b
  1737  007EEE  26D9               	addwf	fsr2l,f,c
  1738  007EF0  51C8               	movf	(sensors_measurement_get@m+1)& (0+255),w,b
  1739  007EF2  22DA               	addwfc	fsr2h,f,c
  1740  007EF4  C0C9  FFDE         	movff	??_sensors_measurement_get,postinc2
  1741  007EF8  C0CA  FFDD         	movff	??_sensors_measurement_get+1,postdec2
  1742                           
  1743                           ; BSR set to: 0
  1744                           ;sensors.c: 275: m->atm_temperature = buffer[17] << 8 | buffer[18];
  1745  007EFC  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1746  007EFE  6ED9               	movwf	fsr2l,c
  1747  007F00  6ADA               	clrf	fsr2h,c
  1748  007F02  0E11               	movlw	17
  1749  007F04  26D9               	addwf	fsr2l,f,c
  1750  007F06  6ADA               	clrf	fsr2h,c
  1751  007F08  50DF               	movf	indf2,w,c
  1752  007F0A  6FCA               	movwf	(??_sensors_measurement_get+1)& (0+255),b
  1753  007F0C  6BC9               	clrf	??_sensors_measurement_get& (0+255),b
  1754  007F0E  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1755  007F10  6ED9               	movwf	fsr2l,c
  1756  007F12  6ADA               	clrf	fsr2h,c
  1757  007F14  0E12               	movlw	18
  1758  007F16  26D9               	addwf	fsr2l,f,c
  1759  007F18  6ADA               	clrf	fsr2h,c
  1760  007F1A  50DF               	movf	indf2,w,c
  1761  007F1C  13C9               	iorwf	??_sensors_measurement_get& (0+255),f,b
  1762  007F1E  EE20 F012          	lfsr	2,18
  1763  007F22  51C7               	movf	sensors_measurement_get@m& (0+255),w,b
  1764  007F24  26D9               	addwf	fsr2l,f,c
  1765  007F26  51C8               	movf	(sensors_measurement_get@m+1)& (0+255),w,b
  1766  007F28  22DA               	addwfc	fsr2h,f,c
  1767  007F2A  C0C9  FFDE         	movff	??_sensors_measurement_get,postinc2
  1768  007F2E  C0CA  FFDD         	movff	??_sensors_measurement_get+1,postdec2
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;sensors.c: 277: m->atm_pressure = buffer[14];
  1772  007F32  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1773  007F34  6ED9               	movwf	fsr2l,c
  1774  007F36  6ADA               	clrf	fsr2h,c
  1775  007F38  0E0E               	movlw	14
  1776  007F3A  26D9               	addwf	fsr2l,f,c
  1777  007F3C  6ADA               	clrf	fsr2h,c
  1778  007F3E  50DF               	movf	indf2,w,c
  1779  007F40  6FC9               	movwf	??_sensors_measurement_get& (0+255),b
  1780  007F42  C0C9  F0CA         	movff	??_sensors_measurement_get,??_sensors_measurement_get+1
  1781  007F46  6BCB               	clrf	(??_sensors_measurement_get+2)& (0+255),b
  1782  007F48  6BCC               	clrf	(??_sensors_measurement_get+3)& (0+255),b
  1783  007F4A  6BCD               	clrf	(??_sensors_measurement_get+4)& (0+255),b
  1784  007F4C  EE20 F014          	lfsr	2,20
  1785  007F50  51C7               	movf	sensors_measurement_get@m& (0+255),w,b
  1786  007F52  26D9               	addwf	fsr2l,f,c
  1787  007F54  51C8               	movf	(sensors_measurement_get@m+1)& (0+255),w,b
  1788  007F56  22DA               	addwfc	fsr2h,f,c
  1789  007F58  C0CA  FFDE         	movff	??_sensors_measurement_get+1,postinc2
  1790  007F5C  C0CB  FFDE         	movff	??_sensors_measurement_get+2,postinc2
  1791  007F60  C0CC  FFDE         	movff	??_sensors_measurement_get+3,postinc2
  1792  007F64  C0CD  FFDD         	movff	??_sensors_measurement_get+4,postdec2
  1793  007F68  06D9               	decf	fsr2l,f,c
  1794  007F6A  06D9               	decf	fsr2l,f,c
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;sensors.c: 278: m->atm_pressure <<= 8;
  1798  007F6C  EE20 F014          	lfsr	2,20
  1799  007F70  51C7               	movf	sensors_measurement_get@m& (0+255),w,b
  1800  007F72  26D9               	addwf	fsr2l,f,c
  1801  007F74  51C8               	movf	(sensors_measurement_get@m+1)& (0+255),w,b
  1802  007F76  22DA               	addwfc	fsr2h,f,c
  1803  007F78  0E08               	movlw	8
  1804  007F7A                     u3285:
  1805  007F7A  90D8               	bcf	status,0,c
  1806  007F7C  36DE               	rlcf	postinc2,f,c
  1807  007F7E  36DE               	rlcf	postinc2,f,c
  1808  007F80  36DE               	rlcf	postinc2,f,c
  1809  007F82  36DD               	rlcf	postdec2,f,c
  1810  007F84  06D9               	decf	fsr2l,f,c
  1811  007F86  06D9               	decf	fsr2l,f,c
  1812  007F88  2EE8               	decfsz	wreg,f,c
  1813  007F8A  D7F7               	goto	u3285
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;sensors.c: 279: m->atm_pressure |= buffer[15];
  1817  007F8C  EE20 F014          	lfsr	2,20
  1818  007F90  51C7               	movf	sensors_measurement_get@m& (0+255),w,b
  1819  007F92  26D9               	addwf	fsr2l,f,c
  1820  007F94  51C8               	movf	(sensors_measurement_get@m+1)& (0+255),w,b
  1821  007F96  22DA               	addwfc	fsr2h,f,c
  1822  007F98  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1823  007F9A  6EE1               	movwf	fsr1l,c
  1824  007F9C  6AE2               	clrf	fsr1h,c
  1825  007F9E  0E0F               	movlw	15
  1826  007FA0  26E1               	addwf	fsr1l,f,c
  1827  007FA2  6AE2               	clrf	fsr1h,c
  1828  007FA4  50E7               	movf	indf1,w,c
  1829  007FA6  12DE               	iorwf	postinc2,f,c
  1830  007FA8  0E00               	movlw	0
  1831  007FAA  12DE               	iorwf	postinc2,f,c
  1832  007FAC  12DE               	iorwf	postinc2,f,c
  1833  007FAE  12DD               	iorwf	postdec2,f,c
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;sensors.c: 280: m->atm_pressure <<= 8;
  1837  007FB0  EE20 F014          	lfsr	2,20
  1838  007FB4  51C7               	movf	sensors_measurement_get@m& (0+255),w,b
  1839  007FB6  26D9               	addwf	fsr2l,f,c
  1840  007FB8  51C8               	movf	(sensors_measurement_get@m+1)& (0+255),w,b
  1841  007FBA  22DA               	addwfc	fsr2h,f,c
  1842  007FBC  0E08               	movlw	8
  1843  007FBE                     u3295:
  1844  007FBE  90D8               	bcf	status,0,c
  1845  007FC0  36DE               	rlcf	postinc2,f,c
  1846  007FC2  36DE               	rlcf	postinc2,f,c
  1847  007FC4  36DE               	rlcf	postinc2,f,c
  1848  007FC6  36DD               	rlcf	postdec2,f,c
  1849  007FC8  06D9               	decf	fsr2l,f,c
  1850  007FCA  06D9               	decf	fsr2l,f,c
  1851  007FCC  2EE8               	decfsz	wreg,f,c
  1852  007FCE  D7F7               	goto	u3295
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;sensors.c: 281: m->atm_pressure |= buffer[16];
  1856  007FD0  EE20 F014          	lfsr	2,20
  1857  007FD4  51C7               	movf	sensors_measurement_get@m& (0+255),w,b
  1858  007FD6  26D9               	addwf	fsr2l,f,c
  1859  007FD8  51C8               	movf	(sensors_measurement_get@m+1)& (0+255),w,b
  1860  007FDA  22DA               	addwfc	fsr2h,f,c
  1861  007FDC  51CE               	movf	sensors_measurement_get@buffer& (0+255),w,b
  1862  007FDE  6EE1               	movwf	fsr1l,c
  1863  007FE0  6AE2               	clrf	fsr1h,c
  1864  007FE2  0E10               	movlw	16
  1865  007FE4  26E1               	addwf	fsr1l,f,c
  1866  007FE6  6AE2               	clrf	fsr1h,c
  1867  007FE8  50E7               	movf	indf1,w,c
  1868  007FEA  12DE               	iorwf	postinc2,f,c
  1869  007FEC  0E00               	movlw	0
  1870  007FEE  12DE               	iorwf	postinc2,f,c
  1871  007FF0  12DE               	iorwf	postinc2,f,c
  1872  007FF2  12DD               	iorwf	postdec2,f,c
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;sensors.c: 284: sensors_measurement_buffers_ready--;
  1876  007FF4  0780               	decf	_sensors_measurement_buffers_ready& (0+255),f,b	;volatile
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;sensors.c: 285: sensors_measurement_buffers_current = (sensors_measurement_buffers_curr
      +                          ent+1) & 0x01;
  1880  007FF6  297F               	incf	_sensors_measurement_buffers_current& (0+255),w,b	;volatile
  1881  007FF8  0B01               	andlw	1
  1882  007FFA  6F7F               	movwf	_sensors_measurement_buffers_current& (0+255),b	;volatile
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;sensors.c: 286: return 1;
  1886  007FFC  0E01               	movlw	1
  1887  007FFE                     l759:
  1888                           
  1889                           ; BSR set to: 0
  1890  007FFE  0012               	return	
  1891  008000                     __end_of_sensors_measurement_get:
  1892                           	opt stack 0
  1893                           tblptru	equ	0xFF8
  1894                           tblptrh	equ	0xFF7
  1895                           tblptrl	equ	0xFF6
  1896                           tablat	equ	0xFF5
  1897                           prodh	equ	0xFF4
  1898                           prodl	equ	0xFF3
  1899                           postinc0	equ	0xFEE
  1900                           wreg	equ	0xFE8
  1901                           indf1	equ	0xFE7
  1902                           fsr1h	equ	0xFE2
  1903                           fsr1l	equ	0xFE1
  1904                           indf2	equ	0xFDF
  1905                           postinc2	equ	0xFDE
  1906                           postdec2	equ	0xFDD
  1907                           fsr2h	equ	0xFDA
  1908                           fsr2l	equ	0xFD9
  1909                           status	equ	0xFD8
  1910                           
  1911 ;; *************** function _USBTransferOnePacket *****************
  1912 ;; Defined at:
  1913 ;;		line 996 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;  ep              1    wreg     unsigned char 
  1916 ;;  dir             1   14[BANK0 ] unsigned char 
  1917 ;;  data            2   15[BANK0 ] PTR unsigned char 
  1918 ;;		 -> comm_in_buffer(64), comm_out_buffer(64), 
  1919 ;;  len             1   17[BANK0 ] unsigned char 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  ep              1   18[BANK0 ] unsigned char 
  1922 ;;  handle          2   19[BANK0 ] PTR volatile struct __BD
  1923 ;;		 -> NULL(0), BDT(32), 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  2   14[BANK0 ] PTR void 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1928 ;; Tracked objects:
  1929 ;;		On entry : F/0
  1930 ;;		On exit  : F/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1933 ;;      Params:         0       4       0       0       0       0       0       0       0
  1934 ;;      Locals:         0       3       0       0       0       0       0       0       0
  1935 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1936 ;;      Totals:         0       7       0       0       0       0       0       0       0
  1937 ;;Total ram usage:        7 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:   13
  1940 ;; This function calls:
  1941 ;;		Nothing
  1942 ;; This function is called by:
  1943 ;;		_comm_process
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           	psect	text7
  1948  00697E                     __ptext7:
  1949                           	opt stack 0
  1950  00697E                     _USBTransferOnePacket:
  1951                           	opt stack 15
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;incstack = 0
  1955                           ;incstack = 0
  1956                           ;USBTransferOnePacket@ep stored from wreg
  1957  00697E  CFE8 F0CB          	movff	wreg,USBTransferOnePacket@ep
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  1961                           ;usb_device.c: 1000: if(dir != 0)
  1962  006982  51C7               	movf	USBTransferOnePacket@dir& (0+255),w,b
  1963  006984  E005               	bz	l3575
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;usb_device.c: 1001: {
  1967                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  1968  006986  51CB               	movf	USBTransferOnePacket@ep& (0+255),w,b
  1969  006988  0D02               	mullw	2
  1970  00698A  50F3               	movf	prodl,w,c
  1971  00698C  0F6C               	addlw	low _pBDTEntryIn
  1972  00698E  D004               	goto	L3
  1973  006990                     l3575:
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;usb_device.c: 1005: else
  1977                           ;usb_device.c: 1006: {
  1978                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  1979  006990  51CB               	movf	USBTransferOnePacket@ep& (0+255),w,b
  1980  006992  0D02               	mullw	2
  1981  006994  50F3               	movf	prodl,w,c
  1982  006996  0F70               	addlw	low _pBDTEntryOut
  1983  006998                     L3:
  1984  006998  6ED9               	movwf	fsr2l,c
  1985  00699A  6ADA               	clrf	fsr2h,c
  1986  00699C  CFDE F0CC          	movff	postinc2,USBTransferOnePacket@handle
  1987  0069A0  CFDD F0CD          	movff	postdec2,USBTransferOnePacket@handle+1
  1988                           
  1989                           ; BSR set to: 0
  1990                           ;usb_device.c: 1009: }
  1991                           ;usb_device.c: 1013: if(handle == 0)
  1992  0069A4  51CD               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  1993  0069A6  11CC               	iorwf	USBTransferOnePacket@handle& (0+255),w,b
  1994  0069A8  E103               	bnz	l3581
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;usb_device.c: 1014: {
  1998                           ;usb_device.c: 1015: return 0;
  1999  0069AA  6BC7               	clrf	?_USBTransferOnePacket& (0+255),b
  2000  0069AC  6BC8               	clrf	(?_USBTransferOnePacket+1)& (0+255),b
  2001  0069AE  D036               	goto	l174
  2002  0069B0                     l3581:
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;usb_device.c: 1016: }
  2006                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  2007  0069B0  EE20 F002          	lfsr	2,2
  2008  0069B4  51CC               	movf	USBTransferOnePacket@handle& (0+255),w,b
  2009  0069B6  26D9               	addwf	fsr2l,f,c
  2010  0069B8  51CD               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  2011  0069BA  22DA               	addwfc	fsr2h,f,c
  2012  0069BC  C0C8  FFDE         	movff	USBTransferOnePacket@data,postinc2
  2013  0069C0  C0C9  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  2014                           
  2015                           ;usb_device.c: 1030: handle->CNT = len;
  2016  0069C4  EE20 F001          	lfsr	2,1
  2017  0069C8  51CC               	movf	USBTransferOnePacket@handle& (0+255),w,b
  2018  0069CA  26D9               	addwf	fsr2l,f,c
  2019  0069CC  51CD               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  2020  0069CE  22DA               	addwfc	fsr2h,f,c
  2021  0069D0  C0CA  FFDF         	movff	USBTransferOnePacket@len,indf2
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  2025  0069D4  C0CC  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  2026  0069D8  C0CD  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  2027  0069DC  0E40               	movlw	64
  2028  0069DE  16DF               	andwf	indf2,f,c
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  2032  0069E0  C0CC  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  2033  0069E4  C0CD  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  2034  0069E8  0E00               	movlw	0
  2035  0069EA  86DB               	bsf	plusw2,3,c
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  2039  0069EC  C0CC  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  2040  0069F0  C0CD  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  2041  0069F4  8EDB               	bsf	plusw2,7,c
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;usb_device.c: 1036: if(dir != 0)
  2045  0069F6  51C7               	movf	USBTransferOnePacket@dir& (0+255),w,b
  2046  0069F8  E005               	bz	l3593
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;usb_device.c: 1037: {
  2050                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  2051  0069FA  51CB               	movf	USBTransferOnePacket@ep& (0+255),w,b
  2052  0069FC  0D02               	mullw	2
  2053  0069FE  50F3               	movf	prodl,w,c
  2054  006A00  0F6C               	addlw	low _pBDTEntryIn
  2055  006A02  D004               	goto	L4
  2056  006A04                     l3593:
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;usb_device.c: 1041: else
  2060                           ;usb_device.c: 1042: {
  2061                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  2062  006A04  51CB               	movf	USBTransferOnePacket@ep& (0+255),w,b
  2063  006A06  0D02               	mullw	2
  2064  006A08  50F3               	movf	prodl,w,c
  2065  006A0A  0F70               	addlw	low _pBDTEntryOut
  2066  006A0C                     L4:
  2067  006A0C  6ED9               	movwf	fsr2l,c
  2068  006A0E  6ADA               	clrf	fsr2h,c
  2069  006A10  0E04               	movlw	4
  2070  006A12  1ADF               	xorwf	indf2,f,c
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;usb_device.c: 1045: }
  2074                           ;usb_device.c: 1046: return (void*)handle;
  2075  006A14  C0CC  F0C7         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  2076  006A18  C0CD  F0C8         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  2077  006A1C                     l174:
  2078                           
  2079                           ; BSR set to: 0
  2080  006A1C  0012               	return	
  2081  006A1E                     __end_of_USBTransferOnePacket:
  2082                           	opt stack 0
  2083                           tblptru	equ	0xFF8
  2084                           tblptrh	equ	0xFF7
  2085                           tblptrl	equ	0xFF6
  2086                           tablat	equ	0xFF5
  2087                           prodh	equ	0xFF4
  2088                           prodl	equ	0xFF3
  2089                           postinc0	equ	0xFEE
  2090                           wreg	equ	0xFE8
  2091                           indf1	equ	0xFE7
  2092                           fsr1h	equ	0xFE2
  2093                           fsr1l	equ	0xFE1
  2094                           indf2	equ	0xFDF
  2095                           postinc2	equ	0xFDE
  2096                           postdec2	equ	0xFDD
  2097                           plusw2	equ	0xFDB
  2098                           fsr2h	equ	0xFDA
  2099                           fsr2l	equ	0xFD9
  2100                           status	equ	0xFD8
  2101                           
  2102 ;; *************** function _app_init *****************
  2103 ;; Defined at:
  2104 ;;		line 9 in file "app.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;		None
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;		None               void
  2111 ;; Registers used:
  2112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : F/4
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2118 ;;      Params:         0       0       0       0       0       0       0       0       0
  2119 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2121 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2122 ;;Total ram usage:        0 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:   18
  2125 ;; This function calls:
  2126 ;;		_comm_init
  2127 ;;		_leds_init
  2128 ;;		_motors_init
  2129 ;;		_sensors_init
  2130 ;;		_sensors_measurement_start
  2131 ;; This function is called by:
  2132 ;;		_main
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text8
  2137  006312                     __ptext8:
  2138                           	opt stack 0
  2139  006312                     _app_init:
  2140                           	opt stack 12
  2141                           
  2142                           ;app.c: 10: INTCONbits.PEIE = 1;
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;incstack = 0
  2146                           ;incstack = 0
  2147  006312  8CF2               	bsf	intcon,6,c	;volatile
  2148                           
  2149                           ;app.c: 11: INTCONbits.GIE = 1;
  2150  006314  8EF2               	bsf	intcon,7,c	;volatile
  2151                           
  2152                           ;app.c: 13: ADCON1 = 0x0F;
  2153  006316  0E0F               	movlw	15
  2154  006318  6EC1               	movwf	4033,c	;volatile
  2155                           
  2156                           ;app.c: 14: TRISBbits.TRISB4 = 1;
  2157  00631A  8893               	bsf	3987,4,c	;volatile
  2158                           
  2159                           ;app.c: 16: T3CONbits.TMR3ON = 0;
  2160  00631C  90B1               	bcf	4017,0,c	;volatile
  2161                           
  2162                           ;app.c: 17: T3CONbits.RD16 = 1;
  2163  00631E  8EB1               	bsf	4017,7,c	;volatile
  2164                           
  2165                           ;app.c: 18: T3CONbits.T3CKPS = 0b11;
  2166  006320  0E30               	movlw	48
  2167  006322  12B1               	iorwf	4017,f,c	;volatile
  2168                           
  2169                           ;app.c: 19: T3CONbits.TMR3CS = 0;
  2170  006324  92B1               	bcf	4017,1,c	;volatile
  2171                           
  2172                           ;app.c: 21: PIR2bits.TMR3IF = 0;
  2173  006326  92A1               	bcf	4001,1,c	;volatile
  2174                           
  2175                           ;app.c: 22: PIE2bits.TMR3IE = 0;
  2176  006328  92A0               	bcf	4000,1,c	;volatile
  2177                           
  2178                           ;app.c: 23: TMR3 = 0;
  2179  00632A  6AB2               	clrf	4018,c	;volatile
  2180  00632C  6AB3               	clrf	4019,c	;volatile
  2181                           
  2182                           ;app.c: 24: T3CONbits.TMR3ON = 1;
  2183  00632E  80B1               	bsf	4017,0,c	;volatile
  2184                           
  2185                           ;app.c: 26: leds_init();
  2186  006330  ECFE  F031         	call	_leds_init	;wreg free
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;app.c: 27: motors_init();
  2190  006334  EC86  F032         	call	_motors_init	;wreg free
  2191                           
  2192                           ; BSR set to: 0
  2193                           ;app.c: 28: sensors_init();
  2194  006338  ECCD  F03B         	call	_sensors_init	;wreg free
  2195                           
  2196                           ;app.c: 29: sensors_measurement_start();
  2197  00633C  EC70  F030         	call	_sensors_measurement_start	;wreg free
  2198                           
  2199                           ;app.c: 30: comm_init();
  2200  006340  EF80  F030         	goto	_comm_init	;wreg free
  2201  006344                     __end_of_app_init:
  2202                           	opt stack 0
  2203                           tblptru	equ	0xFF8
  2204                           tblptrh	equ	0xFF7
  2205                           tblptrl	equ	0xFF6
  2206                           tablat	equ	0xFF5
  2207                           prodh	equ	0xFF4
  2208                           prodl	equ	0xFF3
  2209                           intcon	equ	0xFF2
  2210                           postinc0	equ	0xFEE
  2211                           wreg	equ	0xFE8
  2212                           indf1	equ	0xFE7
  2213                           fsr1h	equ	0xFE2
  2214                           fsr1l	equ	0xFE1
  2215                           indf2	equ	0xFDF
  2216                           postinc2	equ	0xFDE
  2217                           postdec2	equ	0xFDD
  2218                           plusw2	equ	0xFDB
  2219                           fsr2h	equ	0xFDA
  2220                           fsr2l	equ	0xFD9
  2221                           status	equ	0xFD8
  2222                           
  2223 ;; *************** function _sensors_measurement_start *****************
  2224 ;; Defined at:
  2225 ;;		line 241 in file "/Users/zangel/microchip/mla/v2014_07_22/framework/usb/sensors.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;		None
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;		None
  2230 ;; Return value:  Size  Location     Type
  2231 ;;		None               void
  2232 ;; Registers used:
  2233 ;;		wreg, status,2
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2239 ;;      Params:         0       0       0       0       0       0       0       0       0
  2240 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2242 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2243 ;;Total ram usage:        0 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; Hardware stack levels required when called:   13
  2246 ;; This function calls:
  2247 ;;		Nothing
  2248 ;; This function is called by:
  2249 ;;		_app_init
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text9
  2254  0060E0                     __ptext9:
  2255                           	opt stack 0
  2256  0060E0                     _sensors_measurement_start:
  2257                           	opt stack 16
  2258                           
  2259                           ;sensors.c: 242: if(sensors_measurement_started) return;
  2260                           
  2261                           ; BSR set to: 4
  2262                           ;incstack = 0
  2263                           ;incstack = 0
  2264  0060E0  5022               	movf	_sensors_measurement_started,w,c	;volatile
  2265  0060E2  E105               	bnz	l749
  2266                           
  2267                           ;sensors.c: 243: sensors_measurement_buffers_ready = 0;
  2268  0060E4  0100               	movlb	0	; () banked
  2269  0060E6  6B80               	clrf	_sensors_measurement_buffers_ready& (0+255),b	;volatile
  2270                           
  2271                           ;sensors.c: 244: sensors_measurement_buffers_current = 0;
  2272  0060E8  6B7F               	clrf	_sensors_measurement_buffers_current& (0+255),b	;volatile
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;sensors.c: 245: sensors_measurement_started = 1;
  2276  0060EA  0E01               	movlw	1
  2277  0060EC  6E22               	movwf	_sensors_measurement_started,c	;volatile
  2278  0060EE                     l749:
  2279  0060EE  0012               	return	
  2280  0060F0                     __end_of_sensors_measurement_start:
  2281                           	opt stack 0
  2282                           tblptru	equ	0xFF8
  2283                           tblptrh	equ	0xFF7
  2284                           tblptrl	equ	0xFF6
  2285                           tablat	equ	0xFF5
  2286                           prodh	equ	0xFF4
  2287                           prodl	equ	0xFF3
  2288                           intcon	equ	0xFF2
  2289                           postinc0	equ	0xFEE
  2290                           wreg	equ	0xFE8
  2291                           indf1	equ	0xFE7
  2292                           fsr1h	equ	0xFE2
  2293                           fsr1l	equ	0xFE1
  2294                           indf2	equ	0xFDF
  2295                           postinc2	equ	0xFDE
  2296                           postdec2	equ	0xFDD
  2297                           plusw2	equ	0xFDB
  2298                           fsr2h	equ	0xFDA
  2299                           fsr2l	equ	0xFD9
  2300                           status	equ	0xFD8
  2301                           
  2302 ;; *************** function _sensors_init *****************
  2303 ;; Defined at:
  2304 ;;		line 73 in file "/Users/zangel/microchip/mla/v2014_07_22/framework/usb/sensors.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  data            1   29[BANK0 ] unsigned char 
  2309 ;;  device          1    0        unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;		None               void
  2312 ;; Registers used:
  2313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : F/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2319 ;;      Params:         0       0       0       0       0       0       0       0       0
  2320 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2321 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2322 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2323 ;;Total ram usage:        2 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:   17
  2326 ;; This function calls:
  2327 ;;		_OpenI2C
  2328 ;;		_sensors_i2c_write_byte
  2329 ;;		_sensors_i2c_read_byte
  2330 ;; This function is called by:
  2331 ;;		_app_init
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           	psect	text10
  2336  00779A                     __ptext10:
  2337                           	opt stack 0
  2338  00779A                     _sensors_init:
  2339                           	opt stack 12
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;sensors.c: 74: uint8_t data, device;
  2343                           ;sensors.c: 75: sensors_measurement_started = 0;
  2344                           
  2345                           ;incstack = 0
  2346                           ;incstack = 0
  2347  00779A  6A22               	clrf	_sensors_measurement_started,c	;volatile
  2348                           
  2349                           ;sensors.c: 76: sensors_measurement_buffers_ready = 0;
  2350  00779C  6B80               	clrf	_sensors_measurement_buffers_ready& (0+255),b	;volatile
  2351                           
  2352                           ;sensors.c: 77: sensors_measurement_buffers_current = 0;
  2353  00779E  6B7F               	clrf	_sensors_measurement_buffers_current& (0+255),b	;volatile
  2354                           
  2355                           ;sensors.c: 79: sensors_measurement_read_state = SENSORS_MEASUEREMENT_IDLE;
  2356  0077A0  6A21               	clrf	_sensors_measurement_read_state,c
  2357                           
  2358                           ;sensors.c: 81: sensors_i2c_async_rw_error = SENSORS_I2C_ASYNC_RW_ERROR_NO;
  2359  0077A2  6A1F               	clrf	_sensors_i2c_async_rw_state,c
  2360                           
  2361                           ;sensors.c: 85: TRISBbits.TRISB2 = 1;
  2362  0077A4  8493               	bsf	3987,2,c	;volatile
  2363                           
  2364                           ;sensors.c: 86: INTCON2bits.INTEDG2 = 1;
  2365  0077A6  88F1               	bsf	intcon2,4,c	;volatile
  2366                           
  2367                           ;sensors.c: 87: INTCON3bits.INT2IE = 0;
  2368  0077A8  98F0               	bcf	intcon3,4,c	;volatile
  2369                           
  2370                           ;sensors.c: 88: INTCON3bits.INT2IP = 1;
  2371  0077AA  8EF0               	bsf	intcon3,7,c	;volatile
  2372                           
  2373                           ;sensors.c: 89: INTCON3bits.INT2IF = 0;
  2374  0077AC  92F0               	bcf	intcon3,1,c	;volatile
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;sensors.c: 93: OpenI2C(0b00001000, 0b10000000);
  2378  0077AE  0E80               	movlw	128
  2379  0077B0  6FC7               	movwf	?_OpenI2C& (0+255),b
  2380  0077B2  0E08               	movlw	8
  2381  0077B4  ECBB  F030         	call	_OpenI2C
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;sensors.c: 94: SSPADD = 0x78;
  2385  0077B8  0E78               	movlw	120
  2386  0077BA  6EC8               	movwf	4040,c	;volatile
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;sensors.c: 96: _delay((unsigned long)((50)*(12000000/4000.0)));
  2390  0077BC  0EC3               	movlw	195
  2391  0077BE  6FD5               	movwf	??_sensors_init& (0+255),b
  2392  0077C0  0ECD               	movlw	205
  2393  0077C2                     u3927:
  2394  0077C2  2EE8               	decfsz	wreg,f,c
  2395  0077C4  D7FE               	goto	u3927
  2396  0077C6  2FD5               	decfsz	??_sensors_init& (0+255),f,b
  2397  0077C8  D7FC               	goto	u3927
  2398                           
  2399                           ;sensors.c: 100: sensors_i2c_write_byte(0xD2, 0x6B, 0b10000000);
  2400  0077CA  0E6B               	movlw	107
  2401  0077CC  0100               	movlb	0	; () banked
  2402  0077CE  6FCD               	movwf	?_sensors_i2c_write_byte& (0+255),b
  2403  0077D0  0E80               	movlw	128
  2404  0077D2  6FCE               	movwf	(?_sensors_i2c_write_byte+1)& (0+255),b
  2405  0077D4  0ED2               	movlw	210
  2406  0077D6  EC8B  F030         	call	_sensors_i2c_write_byte
  2407                           
  2408                           ;sensors.c: 103: _delay((unsigned long)((50)*(12000000/4000.0)));
  2409  0077DA  0EC3               	movlw	195
  2410  0077DC  0100               	movlb	0	; () banked
  2411  0077DE  6FD5               	movwf	??_sensors_init& (0+255),b
  2412  0077E0  0ECD               	movlw	205
  2413  0077E2                     u3937:
  2414  0077E2  2EE8               	decfsz	wreg,f,c
  2415  0077E4  D7FE               	goto	u3937
  2416  0077E6  2FD5               	decfsz	??_sensors_init& (0+255),f,b
  2417  0077E8  D7FC               	goto	u3937
  2418                           
  2419                           ;sensors.c: 105: sensors_i2c_read_byte(0xD2, 0x75, &data);
  2420  0077EA  0E75               	movlw	117
  2421  0077EC  0100               	movlb	0	; () banked
  2422  0077EE  6FD2               	movwf	?_sensors_i2c_read_byte& (0+255),b
  2423  0077F0  0ED6               	movlw	low sensors_init@data
  2424  0077F2  6FD3               	movwf	(?_sensors_i2c_read_byte+1)& (0+255),b
  2425  0077F4  0ED2               	movlw	210
  2426  0077F6  EC96  F030         	call	_sensors_i2c_read_byte
  2427                           
  2428                           ;sensors.c: 106: if(data != 0x68)
  2429  0077FA  0100               	movlb	0	; () banked
  2430  0077FC  51D6               	movf	sensors_init@data& (0+255),w,b
  2431  0077FE  0A68               	xorlw	104
  2432  007800  E001 D091          	bnz	l734
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;sensors.c: 109: sensors_i2c_read_byte(0xC0, 0x0C, &data);
  2436  007804  0E0C               	movlw	12
  2437  007806  6FD2               	movwf	?_sensors_i2c_read_byte& (0+255),b
  2438  007808  0ED6               	movlw	low sensors_init@data
  2439  00780A  6FD3               	movwf	(?_sensors_i2c_read_byte+1)& (0+255),b
  2440  00780C  0EC0               	movlw	192
  2441  00780E  EC96  F030         	call	_sensors_i2c_read_byte
  2442                           
  2443                           ;sensors.c: 110: if(data != 0xC4)
  2444  007812  0100               	movlb	0	; () banked
  2445  007814  51D6               	movf	sensors_init@data& (0+255),w,b
  2446  007816  0AC4               	xorlw	196
  2447  007818  E001 D085          	bnz	l734
  2448                           
  2449                           ; BSR set to: 0
  2450                           ;sensors.c: 113: sensors_i2c_read_byte(0x1C, 0x0F, &data);
  2451  00781C  0E0F               	movlw	15
  2452  00781E  6FD2               	movwf	?_sensors_i2c_read_byte& (0+255),b
  2453  007820  0ED6               	movlw	low sensors_init@data
  2454  007822  6FD3               	movwf	(?_sensors_i2c_read_byte+1)& (0+255),b
  2455  007824  0E1C               	movlw	28
  2456  007826  EC96  F030         	call	_sensors_i2c_read_byte
  2457                           
  2458                           ;sensors.c: 114: if(data != 0x47)
  2459  00782A  0100               	movlb	0	; () banked
  2460  00782C  51D6               	movf	sensors_init@data& (0+255),w,b
  2461  00782E  0A47               	xorlw	71
  2462  007830  E17A               	bnz	l734
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;sensors.c: 119: sensors_i2c_write_byte(0xD2, 0x6B, 0b00000010);
  2466  007832  0E6B               	movlw	107
  2467  007834  6FCD               	movwf	?_sensors_i2c_write_byte& (0+255),b
  2468  007836  0E02               	movlw	2
  2469  007838  6FCE               	movwf	(?_sensors_i2c_write_byte+1)& (0+255),b
  2470  00783A  0ED2               	movlw	210
  2471  00783C  EC8B  F030         	call	_sensors_i2c_write_byte
  2472                           
  2473                           ;sensors.c: 122: sensors_i2c_write_byte(0xD2, 0x19, 9);
  2474  007840  0E19               	movlw	25
  2475  007842  0100               	movlb	0	; () banked
  2476  007844  6FCD               	movwf	?_sensors_i2c_write_byte& (0+255),b
  2477  007846  0E09               	movlw	9
  2478  007848  6FCE               	movwf	(?_sensors_i2c_write_byte+1)& (0+255),b
  2479  00784A  0ED2               	movlw	210
  2480  00784C  EC8B  F030         	call	_sensors_i2c_write_byte
  2481                           
  2482                           ;sensors.c: 125: sensors_i2c_write_byte(0xD2, 0x1A, 0b00000010);
  2483  007850  0E1A               	movlw	26
  2484  007852  0100               	movlb	0	; () banked
  2485  007854  6FCD               	movwf	?_sensors_i2c_write_byte& (0+255),b
  2486  007856  0E02               	movlw	2
  2487  007858  6FCE               	movwf	(?_sensors_i2c_write_byte+1)& (0+255),b
  2488  00785A  0ED2               	movlw	210
  2489  00785C  EC8B  F030         	call	_sensors_i2c_write_byte
  2490                           
  2491                           ;sensors.c: 128: sensors_i2c_write_byte(0xD2, 0x1B, 0b00001000);
  2492  007860  0E1B               	movlw	27
  2493  007862  0100               	movlb	0	; () banked
  2494  007864  6FCD               	movwf	?_sensors_i2c_write_byte& (0+255),b
  2495  007866  0E08               	movlw	8
  2496  007868  6FCE               	movwf	(?_sensors_i2c_write_byte+1)& (0+255),b
  2497  00786A  0ED2               	movlw	210
  2498  00786C  EC8B  F030         	call	_sensors_i2c_write_byte
  2499                           
  2500                           ;sensors.c: 131: sensors_i2c_write_byte(0xD2, 0x1C, 0b00001000);
  2501  007870  0E1C               	movlw	28
  2502  007872  0100               	movlb	0	; () banked
  2503  007874  6FCD               	movwf	?_sensors_i2c_write_byte& (0+255),b
  2504  007876  0E08               	movlw	8
  2505  007878  6FCE               	movwf	(?_sensors_i2c_write_byte+1)& (0+255),b
  2506  00787A  0ED2               	movlw	210
  2507  00787C  EC8B  F030         	call	_sensors_i2c_write_byte
  2508                           
  2509                           ;sensors.c: 134: sensors_i2c_write_byte(0xD2, 0x23, 0b00000000);
  2510  007880  0E23               	movlw	35
  2511  007882  0100               	movlb	0	; () banked
  2512  007884  6FCD               	movwf	?_sensors_i2c_write_byte& (0+255),b
  2513  007886  6BCE               	clrf	(?_sensors_i2c_write_byte+1)& (0+255),b
  2514  007888  0ED2               	movlw	210
  2515  00788A  EC8B  F030         	call	_sensors_i2c_write_byte
  2516                           
  2517                           ;sensors.c: 137: sensors_i2c_write_byte(0xD2, 0x6A, 0b00100000);
  2518  00788E  0E6A               	movlw	106
  2519  007890  0100               	movlb	0	; () banked
  2520  007892  6FCD               	movwf	?_sensors_i2c_write_byte& (0+255),b
  2521  007894  0E20               	movlw	32
  2522  007896  6FCE               	movwf	(?_sensors_i2c_write_byte+1)& (0+255),b
  2523  007898  0ED2               	movlw	210
  2524  00789A  EC8B  F030         	call	_sensors_i2c_write_byte
  2525                           
  2526                           ;sensors.c: 140: sensors_i2c_write_byte(0xD2, 0x37, 0b00110000);
  2527  00789E  0E37               	movlw	55
  2528  0078A0  0100               	movlb	0	; () banked
  2529  0078A2  6FCD               	movwf	?_sensors_i2c_write_byte& (0+255),b
  2530  0078A4  0E30               	movlw	48
  2531  0078A6  6FCE               	movwf	(?_sensors_i2c_write_byte+1)& (0+255),b
  2532  0078A8  0ED2               	movlw	210
  2533  0078AA  EC8B  F030         	call	_sensors_i2c_write_byte
  2534                           
  2535                           ;sensors.c: 143: sensors_i2c_write_byte(0xD2, 0x24, 0b11001101);
  2536  0078AE  0E24               	movlw	36
  2537  0078B0  0100               	movlb	0	; () banked
  2538  0078B2  6FCD               	movwf	?_sensors_i2c_write_byte& (0+255),b
  2539  0078B4  0ECD               	movlw	205
  2540  0078B6  6FCE               	movwf	(?_sensors_i2c_write_byte+1)& (0+255),b
  2541  0078B8  0ED2               	movlw	210
  2542  0078BA  EC8B  F030         	call	_sensors_i2c_write_byte
  2543                           
  2544                           ;sensors.c: 146: sensors_i2c_write_byte(0xD2, 0x67, 0b00000000);
  2545  0078BE  0E67               	movlw	103
  2546  0078C0  0100               	movlb	0	; () banked
  2547  0078C2  6FCD               	movwf	?_sensors_i2c_write_byte& (0+255),b
  2548  0078C4  6BCE               	clrf	(?_sensors_i2c_write_byte+1)& (0+255),b
  2549  0078C6  0ED2               	movlw	210
  2550  0078C8  EC8B  F030         	call	_sensors_i2c_write_byte
  2551                           
  2552                           ;sensors.c: 196: sensors_i2c_write_byte(0xC0, 0x26, 0b00000010);
  2553  0078CC  0E26               	movlw	38
  2554  0078CE  0100               	movlb	0	; () banked
  2555  0078D0  6FCD               	movwf	?_sensors_i2c_write_byte& (0+255),b
  2556  0078D2  0E02               	movlw	2
  2557  0078D4  6FCE               	movwf	(?_sensors_i2c_write_byte+1)& (0+255),b
  2558  0078D6  0EC0               	movlw	192
  2559  0078D8  EC8B  F030         	call	_sensors_i2c_write_byte
  2560                           
  2561                           ;sensors.c: 199: sensors_i2c_write_byte(0x1C, 0x1B, 0b10000010);
  2562  0078DC  0E1B               	movlw	27
  2563  0078DE  0100               	movlb	0	; () banked
  2564  0078E0  6FCD               	movwf	?_sensors_i2c_write_byte& (0+255),b
  2565  0078E2  0E82               	movlw	130
  2566  0078E4  6FCE               	movwf	(?_sensors_i2c_write_byte+1)& (0+255),b
  2567  0078E6  0E1C               	movlw	28
  2568  0078E8  EC8B  F030         	call	_sensors_i2c_write_byte
  2569                           
  2570                           ;sensors.c: 202: sensors_i2c_write_byte(0x1C, 0x1D, 0b01000000);
  2571  0078EC  0E1D               	movlw	29
  2572  0078EE  0100               	movlb	0	; () banked
  2573  0078F0  6FCD               	movwf	?_sensors_i2c_write_byte& (0+255),b
  2574  0078F2  0E40               	movlw	64
  2575  0078F4  6FCE               	movwf	(?_sensors_i2c_write_byte+1)& (0+255),b
  2576  0078F6  0E1C               	movlw	28
  2577  0078F8  EC8B  F030         	call	_sensors_i2c_write_byte
  2578                           
  2579                           ;sensors.c: 205: sensors_i2c_write_byte(0xD2, 0x37, 0b00010000);
  2580  0078FC  0E37               	movlw	55
  2581  0078FE  0100               	movlb	0	; () banked
  2582  007900  6FCD               	movwf	?_sensors_i2c_write_byte& (0+255),b
  2583  007902  0E10               	movlw	16
  2584  007904  6FCE               	movwf	(?_sensors_i2c_write_byte+1)& (0+255),b
  2585  007906  0ED2               	movlw	210
  2586  007908  EC8B  F030         	call	_sensors_i2c_write_byte
  2587                           
  2588                           ;sensors.c: 210: sensors_i2c_write_byte(0xD2, 0x38, 0b00000001);
  2589  00790C  0E38               	movlw	56
  2590  00790E  0100               	movlb	0	; () banked
  2591  007910  6FCD               	movwf	?_sensors_i2c_write_byte& (0+255),b
  2592  007912  0E01               	movlw	1
  2593  007914  6FCE               	movwf	(?_sensors_i2c_write_byte+1)& (0+255),b
  2594  007916  0ED2               	movlw	210
  2595  007918  EC8B  F030         	call	_sensors_i2c_write_byte
  2596                           
  2597                           ;sensors.c: 212: PIE1bits.SSPIE = 1;
  2598  00791C  869D               	bsf	3997,3,c	;volatile
  2599                           
  2600                           ;sensors.c: 213: IPR1bits.SSPIP = 1;
  2601  00791E  869F               	bsf	3999,3,c	;volatile
  2602                           
  2603                           ;sensors.c: 215: INTCON3bits.INT2IE = 1;
  2604  007920  88F0               	bsf	intcon3,4,c	;volatile
  2605                           
  2606                           ;sensors.c: 216: INTCON3bits.INT2IF = 0;
  2607  007922  92F0               	bcf	intcon3,1,c	;volatile
  2608                           
  2609                           ;sensors.c: 218: leds_status_led_mode.sensors = 1;
  2610  007924  8218               	bsf	_leds_status_led_mode,1,c
  2611  007926                     l734:
  2612  007926  0012               	return	
  2613  007928                     __end_of_sensors_init:
  2614                           	opt stack 0
  2615                           tblptru	equ	0xFF8
  2616                           tblptrh	equ	0xFF7
  2617                           tblptrl	equ	0xFF6
  2618                           tablat	equ	0xFF5
  2619                           prodh	equ	0xFF4
  2620                           prodl	equ	0xFF3
  2621                           intcon	equ	0xFF2
  2622                           intcon2	equ	0xFF1
  2623                           intcon3	equ	0xFF0
  2624                           postinc0	equ	0xFEE
  2625                           wreg	equ	0xFE8
  2626                           indf1	equ	0xFE7
  2627                           fsr1h	equ	0xFE2
  2628                           fsr1l	equ	0xFE1
  2629                           indf2	equ	0xFDF
  2630                           postinc2	equ	0xFDE
  2631                           postdec2	equ	0xFDD
  2632                           plusw2	equ	0xFDB
  2633                           fsr2h	equ	0xFDA
  2634                           fsr2l	equ	0xFD9
  2635                           status	equ	0xFD8
  2636                           
  2637 ;; *************** function _sensors_i2c_read_byte *****************
  2638 ;; Defined at:
  2639 ;;		line 360 in file "/Users/zangel/microchip/mla/v2014_07_22/framework/usb/sensors.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;  da              1    wreg     unsigned char 
  2642 ;;  ra              1   25[BANK0 ] unsigned char 
  2643 ;;  data            1   26[BANK0 ] PTR unsigned char 
  2644 ;;		 -> sensors_init@data(1), 
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;  da              1   27[BANK0 ] unsigned char 
  2647 ;; Return value:  Size  Location     Type
  2648 ;;		None               void
  2649 ;; Registers used:
  2650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2651 ;; Tracked objects:
  2652 ;;		On entry : F/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2656 ;;      Params:         0       2       0       0       0       0       0       0       0
  2657 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2658 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2659 ;;      Totals:         0       3       0       0       0       0       0       0       0
  2660 ;;Total ram usage:        3 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; Hardware stack levels required when called:   16
  2663 ;; This function calls:
  2664 ;;		_sensors_i2c_read_bytes
  2665 ;; This function is called by:
  2666 ;;		_sensors_init
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           	psect	text11
  2671  00612C                     __ptext11:
  2672                           	opt stack 0
  2673  00612C                     _sensors_i2c_read_byte:
  2674                           	opt stack 12
  2675                           
  2676                           ;incstack = 0
  2677                           ;incstack = 0
  2678                           ;sensors_i2c_read_byte@da stored from wreg
  2679  00612C  CFE8 F0D4          	movff	wreg,sensors_i2c_read_byte@da
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;sensors.c: 361: sensors_i2c_read_bytes(da, ra, 1, data);
  2683  006130  C0D2  F0C8         	movff	sensors_i2c_read_byte@ra,?_sensors_i2c_read_bytes
  2684  006134  0E01               	movlw	1
  2685  006136  6FC9               	movwf	(?_sensors_i2c_read_bytes+1)& (0+255),b
  2686  006138  C0D3  F0CA         	movff	sensors_i2c_read_byte@data,?_sensors_i2c_read_bytes+2
  2687  00613C  51D4               	movf	sensors_i2c_read_byte@da& (0+255),w,b
  2688  00613E  EF71  F036         	goto	_sensors_i2c_read_bytes
  2689  006142                     __end_of_sensors_i2c_read_byte:
  2690                           	opt stack 0
  2691                           tblptru	equ	0xFF8
  2692                           tblptrh	equ	0xFF7
  2693                           tblptrl	equ	0xFF6
  2694                           tablat	equ	0xFF5
  2695                           prodh	equ	0xFF4
  2696                           prodl	equ	0xFF3
  2697                           intcon	equ	0xFF2
  2698                           intcon2	equ	0xFF1
  2699                           intcon3	equ	0xFF0
  2700                           postinc0	equ	0xFEE
  2701                           wreg	equ	0xFE8
  2702                           indf1	equ	0xFE7
  2703                           fsr1h	equ	0xFE2
  2704                           fsr1l	equ	0xFE1
  2705                           indf2	equ	0xFDF
  2706                           postinc2	equ	0xFDE
  2707                           postdec2	equ	0xFDD
  2708                           plusw2	equ	0xFDB
  2709                           fsr2h	equ	0xFDA
  2710                           fsr2l	equ	0xFD9
  2711                           status	equ	0xFD8
  2712                           
  2713 ;; *************** function _sensors_i2c_read_bytes *****************
  2714 ;; Defined at:
  2715 ;;		line 331 in file "/Users/zangel/microchip/mla/v2014_07_22/framework/usb/sensors.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  da              1    wreg     unsigned char 
  2718 ;;  ra              1   15[BANK0 ] unsigned char 
  2719 ;;  len             1   16[BANK0 ] unsigned char 
  2720 ;;  data            1   17[BANK0 ] PTR unsigned char 
  2721 ;;		 -> sensors_init@data(1), 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;  da              1   24[BANK0 ] unsigned char 
  2724 ;;  i               1   23[BANK0 ] unsigned char 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;		None               void
  2727 ;; Registers used:
  2728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2729 ;; Tracked objects:
  2730 ;;		On entry : F/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2734 ;;      Params:         0       3       0       0       0       0       0       0       0
  2735 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2736 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2737 ;;      Totals:         0      10       0       0       0       0       0       0       0
  2738 ;;Total ram usage:       10 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; Hardware stack levels required when called:   15
  2741 ;; This function calls:
  2742 ;;		_IdleI2C
  2743 ;;		_WriteI2C
  2744 ;;		_ReadI2C
  2745 ;; This function is called by:
  2746 ;;		_sensors_i2c_read_byte
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text12
  2751  006CE2                     __ptext12:
  2752                           	opt stack 0
  2753  006CE2                     _sensors_i2c_read_bytes:
  2754                           	opt stack 12
  2755                           
  2756                           ;incstack = 0
  2757                           ;incstack = 0
  2758                           ;sensors_i2c_read_bytes@da stored from wreg
  2759  006CE2  CFE8 F0D1          	movff	wreg,sensors_i2c_read_bytes@da
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;sensors.c: 332: uint8_t i;
  2763                           ;sensors.c: 333: IdleI2C();
  2764  006CE6  EC62  F030         	call	_IdleI2C	;wreg free
  2765                           
  2766                           ;sensors.c: 334: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  2767  006CEA  80C5               	bsf	4037,0,c	;volatile
  2768  006CEC                     l786:
  2769  006CEC  B0C5               	btfsc	4037,0,c	;volatile
  2770  006CEE  D7FE               	goto	l786
  2771                           
  2772                           ;sensors.c: 335: IdleI2C();
  2773  006CF0  EC62  F030         	call	_IdleI2C	;wreg free
  2774                           
  2775                           ;sensors.c: 336: WriteI2C(da & 0xFE);
  2776  006CF4  0100               	movlb	0	; () banked
  2777  006CF6  51D1               	movf	sensors_i2c_read_bytes@da& (0+255),w,b
  2778  006CF8  0BFE               	andlw	254
  2779  006CFA  EC41  F032         	call	_WriteI2C
  2780                           
  2781                           ;sensors.c: 337: IdleI2C();
  2782  006CFE  EC62  F030         	call	_IdleI2C	;wreg free
  2783                           
  2784                           ;sensors.c: 338: WriteI2C(ra);
  2785  006D02  0100               	movlb	0	; () banked
  2786  006D04  51C8               	movf	sensors_i2c_read_bytes@ra& (0+255),w,b
  2787  006D06  EC41  F032         	call	_WriteI2C
  2788                           
  2789                           ;sensors.c: 339: IdleI2C();
  2790  006D0A  EC62  F030         	call	_IdleI2C	;wreg free
  2791                           
  2792                           ;sensors.c: 340: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  2793  006D0E  82C5               	bsf	4037,1,c	;volatile
  2794  006D10                     l789:
  2795  006D10  B2C5               	btfsc	4037,1,c	;volatile
  2796  006D12  D7FE               	goto	l789
  2797                           
  2798                           ;sensors.c: 341: IdleI2C();
  2799  006D14  EC62  F030         	call	_IdleI2C	;wreg free
  2800                           
  2801                           ;sensors.c: 342: WriteI2C(da | 0x01);
  2802  006D18  0100               	movlb	0	; () banked
  2803  006D1A  51D1               	movf	sensors_i2c_read_bytes@da& (0+255),w,b
  2804  006D1C  0901               	iorlw	1
  2805  006D1E  EC41  F032         	call	_WriteI2C
  2806                           
  2807                           ;sensors.c: 344: for(i = 0; i < (len - 1); ++i)
  2808  006D22  0100               	movlb	0	; () banked
  2809  006D24  6BD0               	clrf	sensors_i2c_read_bytes@i& (0+255),b
  2810  006D26  D012               	goto	l4607
  2811  006D28                     l4593:
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;sensors.c: 345: {
  2815                           ;sensors.c: 346: IdleI2C();
  2816  006D28  EC62  F030         	call	_IdleI2C	;wreg free
  2817                           
  2818                           ;sensors.c: 347: *data++ = ReadI2C();
  2819  006D2C  0100               	movlb	0	; () banked
  2820  006D2E  51CA               	movf	sensors_i2c_read_bytes@data& (0+255),w,b
  2821  006D30  6ED9               	movwf	fsr2l,c
  2822  006D32  6ADA               	clrf	fsr2h,c
  2823  006D34  ECAE  F030         	call	_ReadI2C	;wreg free
  2824  006D38  6EDF               	movwf	indf2,c
  2825                           
  2826                           ; BSR set to: 0
  2827  006D3A  2BCA               	incf	sensors_i2c_read_bytes@data& (0+255),f,b
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;sensors.c: 348: IdleI2C();
  2831  006D3C  EC62  F030         	call	_IdleI2C	;wreg free
  2832                           
  2833                           ;sensors.c: 349: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2834  006D40  9AC5               	bcf	4037,5,c	;volatile
  2835  006D42  88C5               	bsf	4037,4,c	;volatile
  2836  006D44                     l794:
  2837  006D44  B8C5               	btfsc	4037,4,c	;volatile
  2838  006D46  D7FE               	goto	l794
  2839  006D48  0100               	movlb	0	; () banked
  2840  006D4A  2BD0               	incf	sensors_i2c_read_bytes@i& (0+255),f,b
  2841  006D4C                     l4607:
  2842                           
  2843                           ; BSR set to: 0
  2844  006D4C  0EFF               	movlw	255
  2845  006D4E  25C9               	addwf	sensors_i2c_read_bytes@len& (0+255),w,b
  2846  006D50  6FCB               	movwf	??_sensors_i2c_read_bytes& (0+255),b
  2847  006D52  6BCC               	clrf	(??_sensors_i2c_read_bytes+1)& (0+255),b
  2848  006D54  0EFF               	movlw	255
  2849  006D56  23CC               	addwfc	(??_sensors_i2c_read_bytes+1)& (0+255),f,b
  2850  006D58  51D0               	movf	sensors_i2c_read_bytes@i& (0+255),w,b
  2851  006D5A  6FCD               	movwf	(??_sensors_i2c_read_bytes+2)& (0+255),b
  2852  006D5C  6BCE               	clrf	(??_sensors_i2c_read_bytes+3)& (0+255),b
  2853  006D5E  51CE               	movf	(??_sensors_i2c_read_bytes+3)& (0+255),w,b
  2854  006D60  0A80               	xorlw	128
  2855  006D62  6FCF               	movwf	(??_sensors_i2c_read_bytes+4)& (0+255),b
  2856  006D64  51CB               	movf	??_sensors_i2c_read_bytes& (0+255),w,b
  2857  006D66  5DCD               	subwf	(??_sensors_i2c_read_bytes+2)& (0+255),w,b
  2858  006D68  51CC               	movf	(??_sensors_i2c_read_bytes+1)& (0+255),w,b
  2859  006D6A  0A80               	xorlw	128
  2860  006D6C  59CF               	subwfb	(??_sensors_i2c_read_bytes+4)& (0+255),w,b
  2861  006D6E  E3DC               	bnc	l4593
  2862                           
  2863                           ; BSR set to: 0
  2864                           ;sensors.c: 350: }
  2865                           ;sensors.c: 351: IdleI2C();
  2866  006D70  EC62  F030         	call	_IdleI2C	;wreg free
  2867                           
  2868                           ;sensors.c: 352: *data = ReadI2C();
  2869  006D74  0100               	movlb	0	; () banked
  2870  006D76  51CA               	movf	sensors_i2c_read_bytes@data& (0+255),w,b
  2871  006D78  6ED9               	movwf	fsr2l,c
  2872  006D7A  6ADA               	clrf	fsr2h,c
  2873  006D7C  ECAE  F030         	call	_ReadI2C	;wreg free
  2874  006D80  6EDF               	movwf	indf2,c
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;sensors.c: 353: IdleI2C();
  2878  006D82  EC62  F030         	call	_IdleI2C	;wreg free
  2879                           
  2880                           ;sensors.c: 354: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2881  006D86  8AC5               	bsf	4037,5,c	;volatile
  2882  006D88  88C5               	bsf	4037,4,c	;volatile
  2883  006D8A                     l798:
  2884  006D8A  B8C5               	btfsc	4037,4,c	;volatile
  2885  006D8C  D7FE               	goto	l798
  2886                           
  2887                           ;sensors.c: 355: IdleI2C();
  2888  006D8E  EC62  F030         	call	_IdleI2C	;wreg free
  2889                           
  2890                           ;sensors.c: 356: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2891  006D92  84C5               	bsf	4037,2,c	;volatile
  2892  006D94                     l801:
  2893  006D94  A4C5               	btfss	4037,2,c	;volatile
  2894  006D96  0012               	return	
  2895  006D98  D7FD               	goto	l801
  2896  006D9A                     __end_of_sensors_i2c_read_bytes:
  2897                           	opt stack 0
  2898                           tblptru	equ	0xFF8
  2899                           tblptrh	equ	0xFF7
  2900                           tblptrl	equ	0xFF6
  2901                           tablat	equ	0xFF5
  2902                           prodh	equ	0xFF4
  2903                           prodl	equ	0xFF3
  2904                           intcon	equ	0xFF2
  2905                           intcon2	equ	0xFF1
  2906                           intcon3	equ	0xFF0
  2907                           postinc0	equ	0xFEE
  2908                           wreg	equ	0xFE8
  2909                           indf1	equ	0xFE7
  2910                           fsr1h	equ	0xFE2
  2911                           fsr1l	equ	0xFE1
  2912                           indf2	equ	0xFDF
  2913                           postinc2	equ	0xFDE
  2914                           postdec2	equ	0xFDD
  2915                           plusw2	equ	0xFDB
  2916                           fsr2h	equ	0xFDA
  2917                           fsr2l	equ	0xFD9
  2918                           status	equ	0xFD8
  2919                           
  2920 ;; *************** function _ReadI2C *****************
  2921 ;; Defined at:
  2922 ;;		line 12 in file "/Applications/microchip/xc8/v1.21/sources/pic18/plib/i2c/i2c_read.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;		None
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      unsigned char 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0
  2931 ;; Tracked objects:
  2932 ;;		On entry : F/0
  2933 ;;		On exit  : F/0
  2934 ;;		Unchanged: F/0
  2935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2936 ;;      Params:         0       0       0       0       0       0       0       0       0
  2937 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2939 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2940 ;;Total ram usage:        0 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:   13
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_sensors_i2c_read_bytes
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text13
  2951  00615C                     __ptext13:
  2952                           	opt stack 0
  2953  00615C                     _ReadI2C:
  2954                           	opt stack 13
  2955                           
  2956                           ; BSR set to: 0
  2957                           
  2958                           ;incstack = 0
  2959                           ;incstack = 0
  2960  00615C  50C6               	movf	4038,w,c	;volatile
  2961  00615E  0B0F               	andlw	15
  2962  006160  0A08               	xorlw	8
  2963  006162  E004               	bz	l907
  2964                           
  2965                           ; BSR set to: 0
  2966  006164  50C6               	movf	4038,w,c	;volatile
  2967  006166  0B0F               	andlw	15
  2968  006168  0A0B               	xorlw	11
  2969  00616A  B4D8               	btfsc	status,2,c
  2970  00616C                     l907:
  2971                           
  2972                           ; BSR set to: 0
  2973  00616C  86C5               	bsf	4037,3,c	;volatile
  2974  00616E                     l908:
  2975                           
  2976                           ; BSR set to: 0
  2977  00616E  A0C7               	btfss	4039,0,c	;volatile
  2978  006170  D7FE               	goto	l908
  2979                           
  2980                           ; BSR set to: 0
  2981  006172  50C9               	movf	4041,w,c	;volatile
  2982                           
  2983                           ; BSR set to: 0
  2984  006174  0012               	return	
  2985  006176                     __end_of_ReadI2C:
  2986                           	opt stack 0
  2987                           tblptru	equ	0xFF8
  2988                           tblptrh	equ	0xFF7
  2989                           tblptrl	equ	0xFF6
  2990                           tablat	equ	0xFF5
  2991                           prodh	equ	0xFF4
  2992                           prodl	equ	0xFF3
  2993                           intcon	equ	0xFF2
  2994                           intcon2	equ	0xFF1
  2995                           intcon3	equ	0xFF0
  2996                           postinc0	equ	0xFEE
  2997                           wreg	equ	0xFE8
  2998                           indf1	equ	0xFE7
  2999                           fsr1h	equ	0xFE2
  3000                           fsr1l	equ	0xFE1
  3001                           indf2	equ	0xFDF
  3002                           postinc2	equ	0xFDE
  3003                           postdec2	equ	0xFDD
  3004                           plusw2	equ	0xFDB
  3005                           fsr2h	equ	0xFDA
  3006                           fsr2l	equ	0xFD9
  3007                           status	equ	0xFD8
  3008                           
  3009 ;; *************** function _sensors_i2c_write_byte *****************
  3010 ;; Defined at:
  3011 ;;		line 326 in file "/Users/zangel/microchip/mla/v2014_07_22/framework/usb/sensors.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  da              1    wreg     unsigned char 
  3014 ;;  ra              1   20[BANK0 ] unsigned char 
  3015 ;;  data            1   21[BANK0 ] unsigned char 
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  da              1   22[BANK0 ] unsigned char 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;		None               void
  3020 ;; Registers used:
  3021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : F/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3027 ;;      Params:         0       2       0       0       0       0       0       0       0
  3028 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3029 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3030 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3031 ;;Total ram usage:        3 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:   16
  3034 ;; This function calls:
  3035 ;;		_sensors_i2c_write_bytes
  3036 ;; This function is called by:
  3037 ;;		_sensors_init
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           	psect	text14
  3042  006116                     __ptext14:
  3043                           	opt stack 0
  3044  006116                     _sensors_i2c_write_byte:
  3045                           	opt stack 12
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;incstack = 0
  3049                           ;incstack = 0
  3050                           ;sensors_i2c_write_byte@da stored from wreg
  3051  006116  CFE8 F0CF          	movff	wreg,sensors_i2c_write_byte@da
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;sensors.c: 327: sensors_i2c_write_bytes(da, ra, 1, &data);
  3055  00611A  C0CD  F0C8         	movff	sensors_i2c_write_byte@ra,?_sensors_i2c_write_bytes
  3056  00611E  0E01               	movlw	1
  3057  006120  6FC9               	movwf	(?_sensors_i2c_write_bytes+1)& (0+255),b
  3058  006122  0ECE               	movlw	low sensors_i2c_write_byte@data
  3059  006124  6FCA               	movwf	(?_sensors_i2c_write_bytes+2)& (0+255),b
  3060  006126  51CF               	movf	sensors_i2c_write_byte@da& (0+255),w,b
  3061  006128  EFFF  F032         	goto	_sensors_i2c_write_bytes
  3062  00612C                     __end_of_sensors_i2c_write_byte:
  3063                           	opt stack 0
  3064                           tblptru	equ	0xFF8
  3065                           tblptrh	equ	0xFF7
  3066                           tblptrl	equ	0xFF6
  3067                           tablat	equ	0xFF5
  3068                           prodh	equ	0xFF4
  3069                           prodl	equ	0xFF3
  3070                           intcon	equ	0xFF2
  3071                           intcon2	equ	0xFF1
  3072                           intcon3	equ	0xFF0
  3073                           postinc0	equ	0xFEE
  3074                           wreg	equ	0xFE8
  3075                           indf1	equ	0xFE7
  3076                           fsr1h	equ	0xFE2
  3077                           fsr1l	equ	0xFE1
  3078                           indf2	equ	0xFDF
  3079                           postinc2	equ	0xFDE
  3080                           postdec2	equ	0xFDD
  3081                           plusw2	equ	0xFDB
  3082                           fsr2h	equ	0xFDA
  3083                           fsr2l	equ	0xFD9
  3084                           status	equ	0xFD8
  3085                           
  3086 ;; *************** function _sensors_i2c_write_bytes *****************
  3087 ;; Defined at:
  3088 ;;		line 308 in file "/Users/zangel/microchip/mla/v2014_07_22/framework/usb/sensors.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  da              1    wreg     unsigned char 
  3091 ;;  ra              1   15[BANK0 ] unsigned char 
  3092 ;;  len             1   16[BANK0 ] unsigned char 
  3093 ;;  data            1   17[BANK0 ] PTR const unsigned char 
  3094 ;;		 -> sensors_i2c_write_byte@data(1), 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;  da              1   18[BANK0 ] unsigned char 
  3097 ;;  i               1   19[BANK0 ] unsigned char 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;		None               void
  3100 ;; Registers used:
  3101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : F/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3107 ;;      Params:         0       3       0       0       0       0       0       0       0
  3108 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3110 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3111 ;;Total ram usage:        5 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; Hardware stack levels required when called:   15
  3114 ;; This function calls:
  3115 ;;		_IdleI2C
  3116 ;;		_WriteI2C
  3117 ;; This function is called by:
  3118 ;;		_sensors_i2c_write_byte
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text15
  3123  0065FE                     __ptext15:
  3124                           	opt stack 0
  3125  0065FE                     _sensors_i2c_write_bytes:
  3126                           	opt stack 12
  3127                           
  3128                           ;incstack = 0
  3129                           ;incstack = 0
  3130                           ;sensors_i2c_write_bytes@da stored from wreg
  3131  0065FE  CFE8 F0CB          	movff	wreg,sensors_i2c_write_bytes@da
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;sensors.c: 309: uint8_t i;
  3135                           ;sensors.c: 310: IdleI2C();
  3136  006602  EC62  F030         	call	_IdleI2C	;wreg free
  3137                           
  3138                           ;sensors.c: 311: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  3139  006606  80C5               	bsf	4037,0,c	;volatile
  3140  006608                     l771:
  3141  006608  B0C5               	btfsc	4037,0,c	;volatile
  3142  00660A  D7FE               	goto	l771
  3143                           
  3144                           ;sensors.c: 312: IdleI2C();
  3145  00660C  EC62  F030         	call	_IdleI2C	;wreg free
  3146                           
  3147                           ;sensors.c: 313: WriteI2C(da & 0xFE);
  3148  006610  0100               	movlb	0	; () banked
  3149  006612  51CB               	movf	sensors_i2c_write_bytes@da& (0+255),w,b
  3150  006614  0BFE               	andlw	254
  3151  006616  EC41  F032         	call	_WriteI2C
  3152                           
  3153                           ;sensors.c: 314: IdleI2C();
  3154  00661A  EC62  F030         	call	_IdleI2C	;wreg free
  3155                           
  3156                           ;sensors.c: 315: WriteI2C(ra);
  3157  00661E  0100               	movlb	0	; () banked
  3158  006620  51C8               	movf	sensors_i2c_write_bytes@ra& (0+255),w,b
  3159  006622  EC41  F032         	call	_WriteI2C
  3160                           
  3161                           ;sensors.c: 316: for(i = 0; i < len; ++i)
  3162  006626  0100               	movlb	0	; () banked
  3163  006628  6BCC               	clrf	sensors_i2c_write_bytes@i& (0+255),b
  3164  00662A  D00C               	goto	l4537
  3165  00662C                     l4531:
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;sensors.c: 317: {
  3169                           ;sensors.c: 318: IdleI2C();
  3170  00662C  EC62  F030         	call	_IdleI2C	;wreg free
  3171                           
  3172                           ;sensors.c: 319: WriteI2C(data[i]);
  3173  006630  0100               	movlb	0	; () banked
  3174  006632  51CA               	movf	sensors_i2c_write_bytes@data& (0+255),w,b
  3175  006634  25CC               	addwf	sensors_i2c_write_bytes@i& (0+255),w,b
  3176  006636  6ED9               	movwf	fsr2l,c
  3177  006638  6ADA               	clrf	fsr2h,c
  3178  00663A  50DF               	movf	indf2,w,c
  3179  00663C  EC41  F032         	call	_WriteI2C
  3180  006640  0100               	movlb	0	; () banked
  3181  006642  2BCC               	incf	sensors_i2c_write_bytes@i& (0+255),f,b
  3182  006644                     l4537:
  3183                           
  3184                           ; BSR set to: 0
  3185  006644  51C9               	movf	sensors_i2c_write_bytes@len& (0+255),w,b
  3186  006646  5DCC               	subwf	sensors_i2c_write_bytes@i& (0+255),w,b
  3187  006648  E3F1               	bnc	l4531
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;sensors.c: 320: }
  3191                           ;sensors.c: 321: IdleI2C();
  3192  00664A  EC62  F030         	call	_IdleI2C	;wreg free
  3193                           
  3194                           ;sensors.c: 322: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  3195  00664E  84C5               	bsf	4037,2,c	;volatile
  3196  006650                     l777:
  3197  006650  A4C5               	btfss	4037,2,c	;volatile
  3198  006652  0012               	return	
  3199  006654  D7FD               	goto	l777
  3200  006656                     __end_of_sensors_i2c_write_bytes:
  3201                           	opt stack 0
  3202                           tblptru	equ	0xFF8
  3203                           tblptrh	equ	0xFF7
  3204                           tblptrl	equ	0xFF6
  3205                           tablat	equ	0xFF5
  3206                           prodh	equ	0xFF4
  3207                           prodl	equ	0xFF3
  3208                           intcon	equ	0xFF2
  3209                           intcon2	equ	0xFF1
  3210                           intcon3	equ	0xFF0
  3211                           postinc0	equ	0xFEE
  3212                           wreg	equ	0xFE8
  3213                           indf1	equ	0xFE7
  3214                           fsr1h	equ	0xFE2
  3215                           fsr1l	equ	0xFE1
  3216                           indf2	equ	0xFDF
  3217                           postinc2	equ	0xFDE
  3218                           postdec2	equ	0xFDD
  3219                           plusw2	equ	0xFDB
  3220                           fsr2h	equ	0xFDA
  3221                           fsr2l	equ	0xFD9
  3222                           status	equ	0xFD8
  3223                           
  3224 ;; *************** function _WriteI2C *****************
  3225 ;; Defined at:
  3226 ;;		line 13 in file "/Applications/microchip/xc8/v1.21/sources/pic18/plib/i2c/i2c_writ.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  data_out        1    wreg     unsigned char 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  data_out        1   14[BANK0 ] unsigned char 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      char 
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : F/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3240 ;;      Params:         0       0       0       0       0       0       0       0       0
  3241 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3243 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3244 ;;Total ram usage:        1 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:   14
  3247 ;; This function calls:
  3248 ;;		_IdleI2C
  3249 ;; This function is called by:
  3250 ;;		_sensors_i2c_write_bytes
  3251 ;;		_sensors_i2c_read_bytes
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text16
  3256  006482                     __ptext16:
  3257                           	opt stack 0
  3258  006482                     _WriteI2C:
  3259                           	opt stack 12
  3260                           
  3261                           ;incstack = 0
  3262                           ;incstack = 0
  3263                           ;WriteI2C@data_out stored from wreg
  3264  006482  CFE8 F0C7          	movff	wreg,WriteI2C@data_out
  3265                           
  3266                           ; BSR set to: 0
  3267  006486  C0C7  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  3268                           
  3269                           ; BSR set to: 0
  3270  00648A  BEC6               	btfsc	4038,7,c	;volatile
  3271  00648C  D01B               	goto	l929
  3272                           
  3273                           ; BSR set to: 0
  3274  00648E  50C6               	movf	4038,w,c	;volatile
  3275  006490  0B0F               	andlw	15
  3276  006492  0A08               	xorlw	8
  3277  006494  E00A               	bz	l4569
  3278                           
  3279                           ; BSR set to: 0
  3280  006496  50C6               	movf	4038,w,c	;volatile
  3281  006498  0B0F               	andlw	15
  3282  00649A  0A0B               	xorlw	11
  3283  00649C  E006               	bz	l4569
  3284                           
  3285                           ; BSR set to: 0
  3286  00649E  88C6               	bsf	4038,4,c	;volatile
  3287  0064A0                     l932:
  3288                           
  3289                           ; BSR set to: 0
  3290  0064A0  A69E               	btfss	3998,3,c	;volatile
  3291  0064A2  D7FE               	goto	l932
  3292                           
  3293                           ; BSR set to: 0
  3294  0064A4  A4C7               	btfss	4039,2,c	;volatile
  3295                           
  3296                           ; BSR set to: 0
  3297  0064A6  50C7               	movf	4039,w,c	;volatile
  3298  0064A8  D00D               	goto	l929
  3299  0064AA                     l4569:
  3300                           
  3301                           ; BSR set to: 0
  3302  0064AA  50C6               	movf	4038,w,c	;volatile
  3303  0064AC  0B0F               	andlw	15
  3304  0064AE  0A08               	xorlw	8
  3305  0064B0  E004               	bz	l941
  3306                           
  3307                           ; BSR set to: 0
  3308  0064B2  50C6               	movf	4038,w,c	;volatile
  3309  0064B4  0B0F               	andlw	15
  3310  0064B6  0A0B               	xorlw	11
  3311  0064B8  E105               	bnz	l929
  3312  0064BA                     l941:
  3313                           
  3314                           ; BSR set to: 0
  3315  0064BA  B0C7               	btfsc	4039,0,c	;volatile
  3316  0064BC  D7FE               	goto	l941
  3317                           
  3318                           ; BSR set to: 0
  3319  0064BE  EC62  F030         	call	_IdleI2C	;wreg free
  3320  0064C2  50C5               	movf	4037,w,c	;volatile
  3321  0064C4                     l929:
  3322  0064C4  0012               	return	
  3323  0064C6                     __end_of_WriteI2C:
  3324                           	opt stack 0
  3325                           tblptru	equ	0xFF8
  3326                           tblptrh	equ	0xFF7
  3327                           tblptrl	equ	0xFF6
  3328                           tablat	equ	0xFF5
  3329                           prodh	equ	0xFF4
  3330                           prodl	equ	0xFF3
  3331                           intcon	equ	0xFF2
  3332                           intcon2	equ	0xFF1
  3333                           intcon3	equ	0xFF0
  3334                           postinc0	equ	0xFEE
  3335                           wreg	equ	0xFE8
  3336                           indf1	equ	0xFE7
  3337                           fsr1h	equ	0xFE2
  3338                           fsr1l	equ	0xFE1
  3339                           indf2	equ	0xFDF
  3340                           postinc2	equ	0xFDE
  3341                           postdec2	equ	0xFDD
  3342                           plusw2	equ	0xFDB
  3343                           fsr2h	equ	0xFDA
  3344                           fsr2l	equ	0xFD9
  3345                           status	equ	0xFD8
  3346                           
  3347 ;; *************** function _IdleI2C *****************
  3348 ;; Defined at:
  3349 ;;		line 25 in file "/Applications/microchip/xc8/v1.21/sources/pic18/plib/i2c/i2c_idle.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;		None
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;		None
  3354 ;; Return value:  Size  Location     Type
  3355 ;;		None               void
  3356 ;; Registers used:
  3357 ;;		wreg, status,2, status,0
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3363 ;;      Params:         0       0       0       0       0       0       0       0       0
  3364 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3365 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3366 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3367 ;;Total ram usage:        0 bytes
  3368 ;; Hardware stack levels used:    1
  3369 ;; Hardware stack levels required when called:   13
  3370 ;; This function calls:
  3371 ;;		Nothing
  3372 ;; This function is called by:
  3373 ;;		_sensors_i2c_write_bytes
  3374 ;;		_sensors_i2c_read_bytes
  3375 ;;		_WriteI2C
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text17
  3380  0060C4                     __ptext17:
  3381                           	opt stack 0
  3382  0060C4                     _IdleI2C:
  3383                           	opt stack 12
  3384  0060C4                     l4545:
  3385  0060C4  50C5               	movf	4037,w,c	;volatile
  3386  0060C6  0B1F               	andlw	31
  3387  0060C8  B4D8               	btfsc	status,2,c
  3388  0060CA  B4C7               	btfsc	4039,2,c	;volatile
  3389  0060CC  D7FB               	goto	l4545
  3390  0060CE  0012               	return	
  3391  0060D0                     __end_of_IdleI2C:
  3392                           	opt stack 0
  3393                           tblptru	equ	0xFF8
  3394                           tblptrh	equ	0xFF7
  3395                           tblptrl	equ	0xFF6
  3396                           tablat	equ	0xFF5
  3397                           prodh	equ	0xFF4
  3398                           prodl	equ	0xFF3
  3399                           intcon	equ	0xFF2
  3400                           intcon2	equ	0xFF1
  3401                           intcon3	equ	0xFF0
  3402                           postinc0	equ	0xFEE
  3403                           wreg	equ	0xFE8
  3404                           indf1	equ	0xFE7
  3405                           fsr1h	equ	0xFE2
  3406                           fsr1l	equ	0xFE1
  3407                           indf2	equ	0xFDF
  3408                           postinc2	equ	0xFDE
  3409                           postdec2	equ	0xFDD
  3410                           plusw2	equ	0xFDB
  3411                           fsr2h	equ	0xFDA
  3412                           fsr2l	equ	0xFD9
  3413                           status	equ	0xFD8
  3414                           
  3415 ;; *************** function _OpenI2C *****************
  3416 ;; Defined at:
  3417 ;;		line 15 in file "/Applications/microchip/xc8/v1.21/sources/pic18/plib/i2c/i2c_open.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;  sync_mode       1    wreg     unsigned char 
  3420 ;;  slew            1   14[BANK0 ] unsigned char 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;  sync_mode       1   15[BANK0 ] unsigned char 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;		None               void
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0
  3427 ;; Tracked objects:
  3428 ;;		On entry : F/0
  3429 ;;		On exit  : F/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3432 ;;      Params:         0       1       0       0       0       0       0       0       0
  3433 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3435 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3436 ;;Total ram usage:        2 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:   13
  3439 ;; This function calls:
  3440 ;;		Nothing
  3441 ;; This function is called by:
  3442 ;;		_sensors_init
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text18
  3447  006176                     __ptext18:
  3448                           	opt stack 0
  3449  006176                     _OpenI2C:
  3450                           	opt stack 15
  3451                           
  3452                           ;incstack = 0
  3453                           ;incstack = 0
  3454                           ;OpenI2C@sync_mode stored from wreg
  3455  006176  CFE8 F0C8          	movff	wreg,OpenI2C@sync_mode
  3456                           
  3457                           ; BSR set to: 0
  3458  00617A  0E3F               	movlw	63
  3459  00617C  16C7               	andwf	4039,f,c	;volatile
  3460                           
  3461                           ; BSR set to: 0
  3462  00617E  6AC6               	clrf	4038,c	;volatile
  3463                           
  3464                           ; BSR set to: 0
  3465  006180  6AC5               	clrf	4037,c	;volatile
  3466  006182  51C8               	movf	OpenI2C@sync_mode& (0+255),w,b
  3467  006184  12C6               	iorwf	4038,f,c	;volatile
  3468  006186  51C7               	movf	OpenI2C@slew& (0+255),w,b
  3469  006188  12C7               	iorwf	4039,f,c	;volatile
  3470                           
  3471                           ; BSR set to: 0
  3472  00618A  8293               	bsf	3987,1,c	;volatile
  3473                           
  3474                           ; BSR set to: 0
  3475  00618C  8093               	bsf	3987,0,c	;volatile
  3476                           
  3477                           ; BSR set to: 0
  3478  00618E  8AC6               	bsf	4038,5,c	;volatile
  3479                           
  3480                           ; BSR set to: 0
  3481  006190  0012               	return	
  3482  006192                     __end_of_OpenI2C:
  3483                           	opt stack 0
  3484                           tblptru	equ	0xFF8
  3485                           tblptrh	equ	0xFF7
  3486                           tblptrl	equ	0xFF6
  3487                           tablat	equ	0xFF5
  3488                           prodh	equ	0xFF4
  3489                           prodl	equ	0xFF3
  3490                           intcon	equ	0xFF2
  3491                           intcon2	equ	0xFF1
  3492                           intcon3	equ	0xFF0
  3493                           postinc0	equ	0xFEE
  3494                           wreg	equ	0xFE8
  3495                           indf1	equ	0xFE7
  3496                           fsr1h	equ	0xFE2
  3497                           fsr1l	equ	0xFE1
  3498                           indf2	equ	0xFDF
  3499                           postinc2	equ	0xFDE
  3500                           postdec2	equ	0xFDD
  3501                           plusw2	equ	0xFDB
  3502                           fsr2h	equ	0xFDA
  3503                           fsr2l	equ	0xFD9
  3504                           status	equ	0xFD8
  3505                           
  3506 ;; *************** function _motors_init *****************
  3507 ;; Defined at:
  3508 ;;		line 55 in file "motors.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;		None
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;		None
  3513 ;; Return value:  Size  Location     Type
  3514 ;;		None               void
  3515 ;; Registers used:
  3516 ;;		wreg, status,2, status,0, cstack
  3517 ;; Tracked objects:
  3518 ;;		On entry : F/0
  3519 ;;		On exit  : F/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3522 ;;      Params:         0       0       0       0       0       0       0       0       0
  3523 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3524 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3525 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3526 ;;Total ram usage:        0 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:   14
  3529 ;; This function calls:
  3530 ;;		_motors_set_pwm
  3531 ;; This function is called by:
  3532 ;;		_app_init
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text19
  3537  00650C                     __ptext19:
  3538                           	opt stack 0
  3539  00650C                     _motors_init:
  3540                           	opt stack 15
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;motors.c: 57: TRISDbits.TRISD0 = 0;
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;incstack = 0
  3547                           ;incstack = 0
  3548  00650C  9095               	bcf	3989,0,c	;volatile
  3549                           
  3550                           ;motors.c: 58: TRISDbits.TRISD2 = 0;
  3551  00650E  9495               	bcf	3989,2,c	;volatile
  3552                           
  3553                           ;motors.c: 59: TRISDbits.TRISD4 = 0;
  3554  006510  9895               	bcf	3989,4,c	;volatile
  3555                           
  3556                           ;motors.c: 60: TRISDbits.TRISD6 = 0;
  3557  006512  9C95               	bcf	3989,6,c	;volatile
  3558                           
  3559                           ;motors.c: 62: LATDbits.LATD0 = 0;
  3560  006514  908C               	bcf	3980,0,c	;volatile
  3561                           
  3562                           ;motors.c: 63: LATDbits.LATD2 = 0;
  3563  006516  948C               	bcf	3980,2,c	;volatile
  3564                           
  3565                           ;motors.c: 64: LATDbits.LATD4 = 0;
  3566  006518  988C               	bcf	3980,4,c	;volatile
  3567                           
  3568                           ;motors.c: 65: LATDbits.LATD6 = 0;
  3569  00651A  9C8C               	bcf	3980,6,c	;volatile
  3570                           
  3571                           ;motors.c: 67: motors_current = 0;
  3572  00651C  6A27               	clrf	_motors_current,c
  3573                           
  3574                           ;motors.c: 69: motors_next_frame_wait_count = 0;
  3575  00651E  6A19               	clrf	_motors_current_off_duration,c
  3576                           
  3577                           ;motors.c: 71: motors_pwm_scale[0] = 255;
  3578  006520  6968               	setf	_motors_pwm_scale& (0+255),b	;volatile
  3579                           
  3580                           ;motors.c: 72: motors_pwm_scale[1] = 255;
  3581  006522  6969               	setf	(_motors_pwm_scale+1)& (0+255),b	;volatile
  3582                           
  3583                           ;motors.c: 73: motors_pwm_scale[2] = 255;
  3584  006524  696A               	setf	(_motors_pwm_scale+2)& (0+255),b	;volatile
  3585                           
  3586                           ;motors.c: 74: motors_pwm_scale[3] = 255;
  3587  006526  696B               	setf	(_motors_pwm_scale+3)& (0+255),b	;volatile
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;motors.c: 75: motors_pwm_on_bits = 0x55;
  3591  006528  0E55               	movlw	85
  3592  00652A  6E50               	movwf	_motors_pwm_on_bits,c	;volatile
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;motors.c: 77: motors_set_pwm(0,0,0,0);
  3596  00652C  0E00               	movlw	0
  3597  00652E  6BC7               	clrf	?_motors_set_pwm& (0+255),b
  3598  006530  6BC8               	clrf	(?_motors_set_pwm+1)& (0+255),b
  3599  006532  6BC9               	clrf	(?_motors_set_pwm+2)& (0+255),b
  3600  006534  ECDE  F031         	call	_motors_set_pwm
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;motors.c: 82: leds_status_led_mode.motors = 1;
  3604  006538  8018               	bsf	_leds_status_led_mode,0,c
  3605                           
  3606                           ; BSR set to: 0
  3607                           ;motors.c: 88: T0CONbits.TMR0ON = 0;
  3608  00653A  9ED5               	bcf	4053,7,c	;volatile
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;motors.c: 89: T0CONbits.T08BIT = 1;
  3612  00653C  8CD5               	bsf	4053,6,c	;volatile
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;motors.c: 90: T0CONbits.T0CS = 0;
  3616  00653E  9AD5               	bcf	4053,5,c	;volatile
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;motors.c: 91: T0CONbits.T0SE = 0;
  3620  006540  98D5               	bcf	4053,4,c	;volatile
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;motors.c: 92: T0CONbits.PSA = 0;
  3624  006542  96D5               	bcf	4053,3,c	;volatile
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;motors.c: 93: T0CONbits.T0PS = 0b110;
  3628  006544  50D5               	movf	4053,w,c	;volatile
  3629  006546  0BF8               	andlw	-8
  3630  006548  0906               	iorlw	6
  3631  00654A  6ED5               	movwf	4053,c	;volatile
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;motors.c: 95: INTCONbits.TMR0IF = 0;
  3635  00654C  94F2               	bcf	intcon,2,c	;volatile
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;motors.c: 96: INTCONbits.TMR0IE = 1;
  3639  00654E  8AF2               	bsf	intcon,5,c	;volatile
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;motors.c: 97: TMR0L = 0;
  3643  006550  6AD6               	clrf	4054,c	;volatile
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;motors.c: 98: T0CONbits.TMR0ON = 1;
  3647  006552  8ED5               	bsf	4053,7,c	;volatile
  3648                           
  3649                           ; BSR set to: 0
  3650  006554  0012               	return	
  3651  006556                     __end_of_motors_init:
  3652                           	opt stack 0
  3653                           tblptru	equ	0xFF8
  3654                           tblptrh	equ	0xFF7
  3655                           tblptrl	equ	0xFF6
  3656                           tablat	equ	0xFF5
  3657                           prodh	equ	0xFF4
  3658                           prodl	equ	0xFF3
  3659                           intcon	equ	0xFF2
  3660                           intcon2	equ	0xFF1
  3661                           intcon3	equ	0xFF0
  3662                           postinc0	equ	0xFEE
  3663                           wreg	equ	0xFE8
  3664                           indf1	equ	0xFE7
  3665                           fsr1h	equ	0xFE2
  3666                           fsr1l	equ	0xFE1
  3667                           indf2	equ	0xFDF
  3668                           postinc2	equ	0xFDE
  3669                           postdec2	equ	0xFDD
  3670                           plusw2	equ	0xFDB
  3671                           fsr2h	equ	0xFDA
  3672                           fsr2l	equ	0xFD9
  3673                           status	equ	0xFD8
  3674                           
  3675 ;; *************** function _motors_set_pwm *****************
  3676 ;; Defined at:
  3677 ;;		line 256 in file "motors.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  m0              1    wreg     unsigned char 
  3680 ;;  m1              1   14[BANK0 ] unsigned char 
  3681 ;;  m2              1   15[BANK0 ] unsigned char 
  3682 ;;  m3              1   16[BANK0 ] unsigned char 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  m0              1   17[BANK0 ] unsigned char 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;		None               void
  3687 ;; Registers used:
  3688 ;;		wreg, status,2, status,0
  3689 ;; Tracked objects:
  3690 ;;		On entry : A/5
  3691 ;;		On exit  : F/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3694 ;;      Params:         0       3       0       0       0       0       0       0       0
  3695 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3696 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3697 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3698 ;;Total ram usage:        4 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:   13
  3701 ;; This function calls:
  3702 ;;		Nothing
  3703 ;; This function is called by:
  3704 ;;		_comm_process
  3705 ;;		_motors_init
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           	psect	text20
  3710  0063BC                     __ptext20:
  3711                           	opt stack 0
  3712  0063BC                     _motors_set_pwm:
  3713                           	opt stack 15
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;incstack = 0
  3717                           ;incstack = 0
  3718                           ;motors_set_pwm@m0 stored from wreg
  3719  0063BC  CFE8 F0CA          	movff	wreg,motors_set_pwm@m0
  3720                           
  3721                           ;motors.c: 257: if(m0 > 0)
  3722  0063C0  0100               	movlb	0	; () banked
  3723  0063C2  51CA               	movf	motors_set_pwm@m0& (0+255),w,b
  3724  0063C4  E002               	bz	l4153
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;motors.c: 258: motors_pwm_on_bits |= 0x01;
  3728  0063C6  8050               	bsf	_motors_pwm_on_bits,0,c	;volatile
  3729  0063C8  D001               	goto	l4155
  3730  0063CA                     l4153:
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;motors.c: 259: else
  3734                           ;motors.c: 260: motors_pwm_on_bits &= ~0x01;
  3735  0063CA  9050               	bcf	_motors_pwm_on_bits,0,c	;volatile
  3736  0063CC                     l4155:
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;motors.c: 261: motors_pwm[0] = m0;
  3740  0063CC  C0CA  F001         	movff	motors_set_pwm@m0,_motors_pwm	;volatile
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;motors.c: 263: if(m1 > 0)
  3744  0063D0  51C7               	movf	motors_set_pwm@m1& (0+255),w,b
  3745  0063D2  E002               	bz	l4161
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;motors.c: 264: motors_pwm_on_bits |= 0x04;
  3749  0063D4  8450               	bsf	_motors_pwm_on_bits,2,c	;volatile
  3750  0063D6  D001               	goto	l4163
  3751  0063D8                     l4161:
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;motors.c: 265: else
  3755                           ;motors.c: 266: motors_pwm_on_bits &= ~0x04;
  3756  0063D8  9450               	bcf	_motors_pwm_on_bits,2,c	;volatile
  3757  0063DA                     l4163:
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;motors.c: 267: motors_pwm[1] = m1;
  3761  0063DA  C0C7  F002         	movff	motors_set_pwm@m1,_motors_pwm+1	;volatile
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;motors.c: 269: if(m2 > 0)
  3765  0063DE  51C8               	movf	motors_set_pwm@m2& (0+255),w,b
  3766  0063E0  E002               	bz	l4169
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;motors.c: 270: motors_pwm_on_bits |= 0x10;
  3770  0063E2  8850               	bsf	_motors_pwm_on_bits,4,c	;volatile
  3771  0063E4  D001               	goto	l4171
  3772  0063E6                     l4169:
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;motors.c: 271: else
  3776                           ;motors.c: 272: motors_pwm_on_bits &= ~0x10;
  3777  0063E6  9850               	bcf	_motors_pwm_on_bits,4,c	;volatile
  3778  0063E8                     l4171:
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;motors.c: 273: motors_pwm[2] = m2;
  3782  0063E8  C0C8  F003         	movff	motors_set_pwm@m2,_motors_pwm+2	;volatile
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;motors.c: 275: if(m3 > 0)
  3786  0063EC  51C9               	movf	motors_set_pwm@m3& (0+255),w,b
  3787  0063EE  E002               	bz	l4177
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;motors.c: 276: motors_pwm_on_bits |= 0x40;
  3791  0063F0  8C50               	bsf	_motors_pwm_on_bits,6,c	;volatile
  3792  0063F2  D001               	goto	l4179
  3793  0063F4                     l4177:
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;motors.c: 277: else
  3797                           ;motors.c: 278: motors_pwm_on_bits &= ~0x40;
  3798  0063F4  9C50               	bcf	_motors_pwm_on_bits,6,c	;volatile
  3799  0063F6                     l4179:
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;motors.c: 279: motors_pwm[3] = m3;
  3803  0063F6  C0C9  F004         	movff	motors_set_pwm@m3,_motors_pwm+3	;volatile
  3804                           
  3805                           ; BSR set to: 0
  3806  0063FA  0012               	return	
  3807  0063FC                     __end_of_motors_set_pwm:
  3808                           	opt stack 0
  3809                           tblptru	equ	0xFF8
  3810                           tblptrh	equ	0xFF7
  3811                           tblptrl	equ	0xFF6
  3812                           tablat	equ	0xFF5
  3813                           prodh	equ	0xFF4
  3814                           prodl	equ	0xFF3
  3815                           intcon	equ	0xFF2
  3816                           intcon2	equ	0xFF1
  3817                           intcon3	equ	0xFF0
  3818                           postinc0	equ	0xFEE
  3819                           wreg	equ	0xFE8
  3820                           indf1	equ	0xFE7
  3821                           fsr1h	equ	0xFE2
  3822                           fsr1l	equ	0xFE1
  3823                           indf2	equ	0xFDF
  3824                           postinc2	equ	0xFDE
  3825                           postdec2	equ	0xFDD
  3826                           plusw2	equ	0xFDB
  3827                           fsr2h	equ	0xFDA
  3828                           fsr2l	equ	0xFD9
  3829                           status	equ	0xFD8
  3830                           
  3831 ;; *************** function _leds_init *****************
  3832 ;; Defined at:
  3833 ;;		line 58 in file "leds.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;		None
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;		None
  3838 ;; Return value:  Size  Location     Type
  3839 ;;		None               void
  3840 ;; Registers used:
  3841 ;;		wreg, status,2
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : F/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3847 ;;      Params:         0       0       0       0       0       0       0       0       0
  3848 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3849 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3850 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3851 ;;Total ram usage:        0 bytes
  3852 ;; Hardware stack levels used:    1
  3853 ;; Hardware stack levels required when called:   13
  3854 ;; This function calls:
  3855 ;;		Nothing
  3856 ;; This function is called by:
  3857 ;;		_app_init
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           	psect	text21
  3862  0063FC                     __ptext21:
  3863                           	opt stack 0
  3864  0063FC                     _leds_init:
  3865                           	opt stack 16
  3866                           
  3867                           ;leds.c: 59: leds_status_led_mode.mode = LEDS_MODE_0;
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;incstack = 0
  3871                           ;incstack = 0
  3872  0063FC  6A18               	clrf	_leds_status_led_mode,c
  3873                           
  3874                           ;leds.c: 61: leds_led0_mode = LEDS_MODE_BOOT_0;
  3875  0063FE  0E08               	movlw	8
  3876  006400  6E4E               	movwf	_leds_led0_mode,c
  3877                           
  3878                           ;leds.c: 62: leds_led1_mode = LEDS_MODE_BOOT_1;
  3879  006402  0E09               	movlw	9
  3880  006404  6E4F               	movwf	_leds_led1_mode,c
  3881                           
  3882                           ;leds.c: 63: leds_led2_mode = LEDS_MODE_BOOT_2;
  3883  006406  0E0A               	movlw	10
  3884  006408  0100               	movlb	0	; () banked
  3885  00640A  6FD7               	movwf	_leds_led2_mode& (0+255),b
  3886                           
  3887                           ;leds.c: 64: leds_led3_mode = LEDS_MODE_BOOT_3;
  3888  00640C  0E0B               	movlw	11
  3889  00640E  6FD8               	movwf	_leds_led3_mode& (0+255),b
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;leds.c: 67: leds_counter = 0;
  3893  006410  6A17               	clrf	_leds_counter,c
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;leds.c: 69: TRISEbits.RE0 = 0;
  3897  006412  9096               	bcf	3990,0,c	;volatile
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;leds.c: 70: LATEbits.LATE0 = 0;
  3901  006414  908D               	bcf	3981,0,c	;volatile
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;leds.c: 72: TRISDbits.TRISD3 = 0;
  3905  006416  9695               	bcf	3989,3,c	;volatile
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;leds.c: 73: TRISDbits.TRISD5 = 0;
  3909  006418  9A95               	bcf	3989,5,c	;volatile
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;leds.c: 74: TRISDbits.TRISD7 = 0;
  3913  00641A  9E95               	bcf	3989,7,c	;volatile
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;leds.c: 75: TRISDbits.TRISD1 = 0;
  3917  00641C  9295               	bcf	3989,1,c	;volatile
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;leds.c: 77: LATDbits.LATD3 = 0;
  3921  00641E  968C               	bcf	3980,3,c	;volatile
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;leds.c: 78: LATDbits.LATD5 = 0;
  3925  006420  9A8C               	bcf	3980,5,c	;volatile
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;leds.c: 79: LATDbits.LATD7 = 0;
  3929  006422  9E8C               	bcf	3980,7,c	;volatile
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;leds.c: 80: LATDbits.LATD1 = 0;
  3933  006424  928C               	bcf	3980,1,c	;volatile
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;leds.c: 82: PIE1bits.TMR1IE = 0;
  3937  006426  909D               	bcf	3997,0,c	;volatile
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;leds.c: 84: T1CONbits.TMR1ON = 0;
  3941  006428  90CD               	bcf	4045,0,c	;volatile
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;leds.c: 85: T1CONbits.TMR1CS = 0;
  3945  00642A  92CD               	bcf	4045,1,c	;volatile
  3946                           
  3947                           ;leds.c: 86: T1CONbits.T1CKPS = 0b11;
  3948  00642C  0E30               	movlw	48
  3949  00642E  12CD               	iorwf	4045,f,c	;volatile
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;leds.c: 87: T1CONbits.RD16 = 1;
  3953  006430  8ECD               	bsf	4045,7,c	;volatile
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;leds.c: 89: TMR1 = 0;
  3957  006432  6ACE               	clrf	4046,c	;volatile
  3958  006434  6ACF               	clrf	4047,c	;volatile
  3959                           
  3960                           ; BSR set to: 0
  3961                           ;leds.c: 90: PIR1bits.TMR1IF = 0;
  3962  006436  909E               	bcf	3998,0,c	;volatile
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;leds.c: 91: PIE1bits.TMR1IE = 1;
  3966  006438  809D               	bsf	3997,0,c	;volatile
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;leds.c: 92: T1CONbits.TMR1ON = 1;
  3970  00643A  80CD               	bsf	4045,0,c	;volatile
  3971                           
  3972                           ; BSR set to: 0
  3973  00643C  0012               	return	
  3974  00643E                     __end_of_leds_init:
  3975                           	opt stack 0
  3976                           tblptru	equ	0xFF8
  3977                           tblptrh	equ	0xFF7
  3978                           tblptrl	equ	0xFF6
  3979                           tablat	equ	0xFF5
  3980                           prodh	equ	0xFF4
  3981                           prodl	equ	0xFF3
  3982                           intcon	equ	0xFF2
  3983                           intcon2	equ	0xFF1
  3984                           intcon3	equ	0xFF0
  3985                           postinc0	equ	0xFEE
  3986                           wreg	equ	0xFE8
  3987                           indf1	equ	0xFE7
  3988                           fsr1h	equ	0xFE2
  3989                           fsr1l	equ	0xFE1
  3990                           indf2	equ	0xFDF
  3991                           postinc2	equ	0xFDE
  3992                           postdec2	equ	0xFDD
  3993                           plusw2	equ	0xFDB
  3994                           fsr2h	equ	0xFDA
  3995                           fsr2l	equ	0xFD9
  3996                           status	equ	0xFD8
  3997                           
  3998 ;; *************** function _comm_init *****************
  3999 ;; Defined at:
  4000 ;;		line 20 in file "comm.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;		None
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;		None
  4005 ;; Return value:  Size  Location     Type
  4006 ;;		None               void
  4007 ;; Registers used:
  4008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : F/4
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4014 ;;      Params:         0       0       0       0       0       0       0       0       0
  4015 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4017 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4018 ;;Total ram usage:        0 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:   15
  4021 ;; This function calls:
  4022 ;;		_USBDeviceInit
  4023 ;;		_USBDeviceAttach
  4024 ;; This function is called by:
  4025 ;;		_app_init
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           	psect	text22
  4030  006100                     __ptext22:
  4031                           	opt stack 0
  4032  006100                     _comm_init:
  4033                           	opt stack 14
  4034                           
  4035                           ;comm.c: 21: comm_out_handle = 0;
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;incstack = 0
  4039                           ;incstack = 0
  4040  006100  0100               	movlb	0	; () banked
  4041  006102  6B76               	clrf	_comm_out_handle& (0+255),b
  4042  006104  6B77               	clrf	(_comm_out_handle+1)& (0+255),b
  4043                           
  4044                           ;comm.c: 22: comm_in_handle = 0;
  4045  006106  6B74               	clrf	_comm_in_handle& (0+255),b
  4046  006108  6B75               	clrf	(_comm_in_handle+1)& (0+255),b
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;comm.c: 24: USBDeviceInit();
  4050  00610A  ECEE  F037         	call	_USBDeviceInit	;wreg free
  4051                           
  4052                           ; BSR set to: 4
  4053                           ;comm.c: 25: USBDeviceAttach();
  4054  00610E  ECFF  F030         	call	_USBDeviceAttach	;wreg free
  4055                           
  4056                           ; BSR set to: 4
  4057                           ;comm.c: 26: leds_status_led_mode.comm = 1;
  4058  006112  8418               	bsf	_leds_status_led_mode,2,c
  4059                           
  4060                           ; BSR set to: 4
  4061  006114  0012               	return	
  4062  006116                     __end_of_comm_init:
  4063                           	opt stack 0
  4064                           tblptru	equ	0xFF8
  4065                           tblptrh	equ	0xFF7
  4066                           tblptrl	equ	0xFF6
  4067                           tablat	equ	0xFF5
  4068                           prodh	equ	0xFF4
  4069                           prodl	equ	0xFF3
  4070                           intcon	equ	0xFF2
  4071                           intcon2	equ	0xFF1
  4072                           intcon3	equ	0xFF0
  4073                           postinc0	equ	0xFEE
  4074                           wreg	equ	0xFE8
  4075                           indf1	equ	0xFE7
  4076                           fsr1h	equ	0xFE2
  4077                           fsr1l	equ	0xFE1
  4078                           indf2	equ	0xFDF
  4079                           postinc2	equ	0xFDE
  4080                           postdec2	equ	0xFDD
  4081                           plusw2	equ	0xFDB
  4082                           fsr2h	equ	0xFDA
  4083                           fsr2l	equ	0xFD9
  4084                           status	equ	0xFD8
  4085                           
  4086 ;; *************** function _USBDeviceAttach *****************
  4087 ;; Defined at:
  4088 ;;		line 1353 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_
      +device.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;		None
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;		None
  4093 ;; Return value:  Size  Location     Type
  4094 ;;		None               void
  4095 ;; Registers used:
  4096 ;;		wreg, status,2
  4097 ;; Tracked objects:
  4098 ;;		On entry : F/4
  4099 ;;		On exit  : F/4
  4100 ;;		Unchanged: F/0
  4101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4102 ;;      Params:         0       0       0       0       0       0       0       0       0
  4103 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4104 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4105 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4106 ;;Total ram usage:        0 bytes
  4107 ;; Hardware stack levels used:    1
  4108 ;; Hardware stack levels required when called:   13
  4109 ;; This function calls:
  4110 ;;		Nothing
  4111 ;; This function is called by:
  4112 ;;		_comm_init
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           	psect	text23
  4117  0061FE                     __ptext23:
  4118                           	opt stack 0
  4119  0061FE                     _USBDeviceAttach:
  4120                           	opt stack 15
  4121                           
  4122                           ; BSR set to: 4
  4123                           ;usb_device.c: 1356: {
  4124                           ;usb_device.c: 1357: if(1 == 1)
  4125                           
  4126                           ; BSR set to: 4
  4127                           ;incstack = 0
  4128                           ;incstack = 0
  4129  0061FE  6612               	tstfsz	_USBDeviceState,c	;volatile
  4130  006200  D012               	goto	l196
  4131                           
  4132                           ; BSR set to: 4
  4133                           ;usb_device.c: 1358: {
  4134                           ;usb_device.c: 1360: UCON = 0;
  4135  006202  6A6D               	clrf	3949,c	;volatile
  4136                           
  4137                           ;usb_device.c: 1363: UIE = 0;
  4138  006204  6A69               	clrf	3945,c	;volatile
  4139                           
  4140                           ; BSR set to: 4
  4141                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  4142  006206  0E16               	movlw	22
  4143  006208  6E6F               	movwf	3951,c	;volatile
  4144  00620A  0E9F               	movlw	159
  4145  00620C  6E6B               	movwf	3947,c	;volatile
  4146  00620E  0E7B               	movlw	123
  4147  006210  6E69               	movwf	3945,c	;volatile
  4148                           
  4149                           ; BSR set to: 4
  4150                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  4151  006212  8ED0               	bsf	4048,7,c	;volatile
  4152                           
  4153                           ; BSR set to: 4
  4154  006214  8AA2               	bsf	4002,5,c	;volatile
  4155                           
  4156                           ; BSR set to: 4
  4157  006216  8AA0               	bsf	4000,5,c	;volatile
  4158                           
  4159                           ; BSR set to: 4
  4160  006218  8EF2               	bsf	intcon,7,c	;volatile
  4161                           
  4162                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  4163  00621A  D001               	goto	l193
  4164  00621C                     l194:
  4165                           
  4166                           ; BSR set to: 4
  4167  00621C  866D               	bsf	3949,3,c	;volatile
  4168  00621E                     l193:
  4169                           
  4170                           ; BSR set to: 4
  4171  00621E  A66D               	btfss	3949,3,c	;volatile
  4172  006220  D7FD               	goto	l194
  4173                           
  4174                           ; BSR set to: 4
  4175                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  4176  006222  0E01               	movlw	1
  4177  006224  6E12               	movwf	_USBDeviceState,c	;volatile
  4178  006226                     l196:
  4179                           
  4180                           ; BSR set to: 4
  4181  006226  0012               	return	
  4182  006228                     __end_of_USBDeviceAttach:
  4183                           	opt stack 0
  4184                           tblptru	equ	0xFF8
  4185                           tblptrh	equ	0xFF7
  4186                           tblptrl	equ	0xFF6
  4187                           tablat	equ	0xFF5
  4188                           prodh	equ	0xFF4
  4189                           prodl	equ	0xFF3
  4190                           intcon	equ	0xFF2
  4191                           intcon2	equ	0xFF1
  4192                           intcon3	equ	0xFF0
  4193                           postinc0	equ	0xFEE
  4194                           wreg	equ	0xFE8
  4195                           indf1	equ	0xFE7
  4196                           fsr1h	equ	0xFE2
  4197                           fsr1l	equ	0xFE1
  4198                           indf2	equ	0xFDF
  4199                           postinc2	equ	0xFDE
  4200                           postdec2	equ	0xFDD
  4201                           plusw2	equ	0xFDB
  4202                           fsr2h	equ	0xFDA
  4203                           fsr2l	equ	0xFD9
  4204                           status	equ	0xFD8
  4205                           
  4206 ;; *************** function _USBDeviceInit *****************
  4207 ;; Defined at:
  4208 ;;		line 299 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;		None
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  i               1   22[BANK0 ] unsigned char 
  4213 ;; Return value:  Size  Location     Type
  4214 ;;		None               void
  4215 ;; Registers used:
  4216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4217 ;; Tracked objects:
  4218 ;;		On entry : F/0
  4219 ;;		On exit  : F/4
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4222 ;;      Params:         0       0       0       0       0       0       0       0       0
  4223 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4224 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4225 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4226 ;;Total ram usage:        1 bytes
  4227 ;; Hardware stack levels used:    1
  4228 ;; Hardware stack levels required when called:   14
  4229 ;; This function calls:
  4230 ;;		_memset
  4231 ;; This function is called by:
  4232 ;;		_comm_init
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           	psect	text24
  4237  006FDC                     __ptext24:
  4238                           	opt stack 0
  4239  006FDC                     _USBDeviceInit:
  4240                           	opt stack 14
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;usb_device.c: 300: uint8_t i;
  4244                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
  4245                           
  4246                           ; BSR set to: 4
  4247                           ;incstack = 0
  4248                           ;incstack = 0
  4249  006FDC  9AA0               	bcf	4000,5,c	;volatile
  4250                           
  4251                           ;usb_device.c: 305: {UEIR = 0;};
  4252  006FDE  6A6A               	clrf	3946,c	;volatile
  4253                           
  4254                           ;usb_device.c: 308: {UIR = 0;};
  4255  006FE0  6A68               	clrf	3944,c	;volatile
  4256                           
  4257                           ;usb_device.c: 311: UEP0 = 0;
  4258  006FE2  6A70               	clrf	3952,c	;volatile
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(1));;
  4262  006FE4  0E0F               	movlw	15	;volatile
  4263  006FE6  6FC8               	movwf	(?_memset+1)& (0+255),b
  4264  006FE8  0E71               	movlw	113	;volatile
  4265  006FEA  6FC7               	movwf	?_memset& (0+255),b
  4266  006FEC  6BCA               	clrf	(?_memset+3)& (0+255),b
  4267  006FEE  6BC9               	clrf	(?_memset+2)& (0+255),b
  4268  006FF0  6BCC               	clrf	(?_memset+5)& (0+255),b
  4269  006FF2  0E01               	movlw	1
  4270  006FF4  6FCB               	movwf	(?_memset+4)& (0+255),b
  4271  006FF6  EC40  F031         	call	_memset	;wreg free
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  4275  006FFA  0E16               	movlw	22
  4276  006FFC  6E6F               	movwf	3951,c	;volatile
  4277                           
  4278                           ; BSR set to: 0
  4279  006FFE  0E9F               	movlw	159
  4280  007000  6E6B               	movwf	3947,c	;volatile
  4281                           
  4282                           ; BSR set to: 0
  4283  007002  0E7B               	movlw	123
  4284  007004  6E69               	movwf	3945,c	;volatile
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;usb_device.c: 318: ;
  4288                           ;usb_device.c: 321: ;
  4289                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  4290  007006  6BCF               	clrf	USBDeviceInit@i& (0+255),b
  4291  007008                     l3265:
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;usb_device.c: 325: {
  4295                           ;usb_device.c: 326: BDT[i].Val = 0x00;
  4296  007008  51CF               	movf	USBDeviceInit@i& (0+255),w,b
  4297  00700A  0D04               	mullw	4
  4298  00700C  0E00               	movlw	0	;volatile
  4299  00700E  24F3               	addwf	prodl,w,c
  4300  007010  6ED9               	movwf	fsr2l,c
  4301  007012  0E04               	movlw	4	;volatile
  4302  007014  20F4               	addwfc	prodh,w,c
  4303  007016  6EDA               	movwf	fsr2h,c
  4304  007018  6ADE               	clrf	postinc2,c
  4305  00701A  6ADE               	clrf	postinc2,c
  4306  00701C  6ADE               	clrf	postinc2,c
  4307  00701E  6ADD               	clrf	postdec2,c
  4308                           
  4309                           ; BSR set to: 4
  4310  007020  0100               	movlb	0	; () banked
  4311  007022  2BCF               	incf	USBDeviceInit@i& (0+255),f,b
  4312                           
  4313                           ; BSR set to: 0
  4314  007024  0E07               	movlw	7
  4315  007026  65CF               	cpfsgt	USBDeviceInit@i& (0+255),b
  4316  007028  D7EF               	goto	l3265
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;usb_device.c: 327: }
  4320                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
  4321  00702A  8C6D               	bsf	3949,6,c	;volatile
  4322                           
  4323                           ;usb_device.c: 333: UADDR = 0x00;
  4324  00702C  6A6E               	clrf	3950,c	;volatile
  4325                           
  4326                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
  4327  00702E  986D               	bcf	3949,4,c	;volatile
  4328                           
  4329                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
  4330  007030  9C6D               	bcf	3949,6,c	;volatile
  4331                           
  4332                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
  4333  007032  D005               	goto	l3279
  4334  007034                     l3271:
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;usb_device.c: 343: {
  4338                           ;usb_device.c: 344: (UIR &= 0xF7);
  4339  007034  9668               	bcf	3944,3,c	;volatile
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
  4343  007036  6BB6               	clrf	(_inPipes+3)& (0+255),b	;volatile
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
  4347  007038  6B63               	clrf	(_outPipes+3)& (0+255),b	;volatile
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
  4351  00703A  6B64               	clrf	(_outPipes+4)& (0+255),b	;volatile
  4352  00703C  6B65               	clrf	(_outPipes+5)& (0+255),b	;volatile
  4353  00703E                     l3279:
  4354                           
  4355                           ; BSR set to: 0
  4356  00703E  B668               	btfsc	3944,3,c	;volatile
  4357  007040  D7F9               	goto	l3271
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;usb_device.c: 349: }
  4361                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
  4362  007042  0E01               	movlw	1
  4363  007044  6F7D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  4364                           
  4365                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
  4366  007046  6F7E               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
  4370  007048  6A0F               	clrf	_USBDeferINDataStagePackets,c	;volatile
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
  4374  00704A  6A10               	clrf	_USBDeferOUTDataStagePackets,c	;volatile
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;usb_device.c: 358: USBBusIsSuspended = 0;
  4378  00704C  6B7C               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(1+1u); i++)
  4382  00704E  6BCF               	clrf	USBDeviceInit@i& (0+255),b
  4383  007050                     l3295:
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;usb_device.c: 363: {
  4387                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
  4388  007050  51CF               	movf	USBDeviceInit@i& (0+255),w,b
  4389  007052  0D02               	mullw	2
  4390  007054  50F3               	movf	prodl,w,c
  4391  007056  0F6C               	addlw	low _pBDTEntryIn
  4392  007058  6ED9               	movwf	fsr2l,c
  4393  00705A  6ADA               	clrf	fsr2h,c
  4394  00705C  6ADE               	clrf	postinc2,c
  4395  00705E  6ADD               	clrf	postdec2,c
  4396                           
  4397                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
  4398  007060  51CF               	movf	USBDeviceInit@i& (0+255),w,b
  4399  007062  0D02               	mullw	2
  4400  007064  50F3               	movf	prodl,w,c
  4401  007066  0F70               	addlw	low _pBDTEntryOut
  4402  007068  6ED9               	movwf	fsr2l,c
  4403  00706A  6ADA               	clrf	fsr2h,c
  4404  00706C  6ADE               	clrf	postinc2,c
  4405  00706E  6ADD               	clrf	postdec2,c
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
  4409  007070  51CF               	movf	USBDeviceInit@i& (0+255),w,b
  4410  007072  0F78               	addlw	low _ep_data_in	;volatile
  4411  007074  6ED9               	movwf	fsr2l,c
  4412  007076  6ADA               	clrf	fsr2h,c
  4413  007078  6ADF               	clrf	indf2,c
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
  4417  00707A  51CF               	movf	USBDeviceInit@i& (0+255),w,b
  4418  00707C  0F7A               	addlw	low _ep_data_out	;volatile
  4419  00707E  6ED9               	movwf	fsr2l,c
  4420  007080  6ADA               	clrf	fsr2h,c
  4421  007082  6ADF               	clrf	indf2,c
  4422                           
  4423                           ; BSR set to: 0
  4424  007084  2BCF               	incf	USBDeviceInit@i& (0+255),f,b
  4425                           
  4426                           ; BSR set to: 0
  4427  007086  0E01               	movlw	1
  4428  007088  65CF               	cpfsgt	USBDeviceInit@i& (0+255),b
  4429  00708A  D7E2               	goto	l3295
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;usb_device.c: 368: }
  4433                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4434  00708C  0E04               	movlw	4	;volatile
  4435  00708E  0100               	movlb	0	; () banked
  4436  007090  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
  4437  007092  0E08               	movlw	8	;volatile
  4438  007094  6F6C               	movwf	_pBDTEntryIn& (0+255),b
  4439                           
  4440                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
  4441  007096  0E16               	movlw	22
  4442  007098  6E70               	movwf	3952,c	;volatile
  4443                           
  4444                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  4445  00709A  0E04               	movlw	4
  4446  00709C  0104               	movlb	4	; () banked
  4447  00709E  6F03               	movwf	3,b	;volatile
  4448  0070A0  0E20               	movlw	32
  4449  0070A2  6F02               	movwf	2,b	;volatile
  4450                           
  4451                           ;usb_device.c: 376: BDT[0].CNT = 8;
  4452  0070A4  0E08               	movlw	8
  4453  0070A6  6F01               	movwf	1,b	;volatile
  4454                           
  4455                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
  4456  0070A8  0E04               	movlw	4
  4457  0070AA  6F00               	movwf	0,b	;volatile
  4458                           
  4459                           ; BSR set to: 4
  4460                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
  4461  0070AC  8F00               	bsf	0,7,b	;volatile
  4462                           
  4463                           ; BSR set to: 4
  4464                           ;usb_device.c: 381: USBActiveConfiguration = 0;
  4465  0070AE  6A24               	clrf	_USBActiveConfiguration,c	;volatile
  4466                           
  4467                           ; BSR set to: 4
  4468                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
  4469  0070B0  6A12               	clrf	_USBDeviceState,c	;volatile
  4470                           
  4471                           ; BSR set to: 4
  4472  0070B2  0012               	return	
  4473  0070B4                     __end_of_USBDeviceInit:
  4474                           	opt stack 0
  4475                           tblptru	equ	0xFF8
  4476                           tblptrh	equ	0xFF7
  4477                           tblptrl	equ	0xFF6
  4478                           tablat	equ	0xFF5
  4479                           prodh	equ	0xFF4
  4480                           prodl	equ	0xFF3
  4481                           intcon	equ	0xFF2
  4482                           intcon2	equ	0xFF1
  4483                           intcon3	equ	0xFF0
  4484                           postinc0	equ	0xFEE
  4485                           wreg	equ	0xFE8
  4486                           indf1	equ	0xFE7
  4487                           fsr1h	equ	0xFE2
  4488                           fsr1l	equ	0xFE1
  4489                           indf2	equ	0xFDF
  4490                           postinc2	equ	0xFDE
  4491                           postdec2	equ	0xFDD
  4492                           plusw2	equ	0xFDB
  4493                           fsr2h	equ	0xFDA
  4494                           fsr2l	equ	0xFD9
  4495                           status	equ	0xFD8
  4496                           
  4497 ;; *************** function _memset *****************
  4498 ;; Defined at:
  4499 ;;		line 10 in file "/Applications/microchip/xc8/v1.21/sources/common/memset.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  p1              2   14[BANK0 ] PTR void 
  4502 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
  4503 ;;  c               2   16[BANK0 ] int 
  4504 ;;  n               2   18[BANK0 ] unsigned int 
  4505 ;; Auto vars:     Size  Location     Type
  4506 ;;  p               2   20[BANK0 ] PTR unsigned char 
  4507 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  2   14[BANK0 ] PTR void 
  4510 ;; Registers used:
  4511 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4512 ;; Tracked objects:
  4513 ;;		On entry : F/0
  4514 ;;		On exit  : F/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4517 ;;      Params:         0       6       0       0       0       0       0       0       0
  4518 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4520 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4521 ;;Total ram usage:        8 bytes
  4522 ;; Hardware stack levels used:    1
  4523 ;; Hardware stack levels required when called:   13
  4524 ;; This function calls:
  4525 ;;		Nothing
  4526 ;; This function is called by:
  4527 ;;		_USBDeviceInit
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531                           	psect	text25
  4532  006280                     __ptext25:
  4533                           	opt stack 0
  4534  006280                     _memset:
  4535                           	opt stack 14
  4536                           
  4537                           ; BSR set to: 0
  4538                           
  4539                           ; BSR set to: 4
  4540                           ;incstack = 0
  4541                           ;incstack = 0
  4542  006280  C0C7  F0CD         	movff	memset@p1,memset@p
  4543  006284  C0C8  F0CE         	movff	memset@p1+1,memset@p+1
  4544  006288  D008               	goto	l3319
  4545  00628A                     l3315:
  4546                           
  4547                           ; BSR set to: 0
  4548  00628A  C0CD  FFD9         	movff	memset@p,fsr2l
  4549  00628E  C0CE  FFDA         	movff	memset@p+1,fsr2h
  4550  006292  C0C9  FFDF         	movff	memset@c,indf2
  4551                           
  4552                           ; BSR set to: 0
  4553  006296  4BCD               	infsnz	memset@p& (0+255),f,b
  4554  006298  2BCE               	incf	(memset@p+1)& (0+255),f,b
  4555  00629A                     l3319:
  4556                           
  4557                           ; BSR set to: 0
  4558  00629A  07CB               	decf	memset@n& (0+255),f,b
  4559  00629C  A0D8               	btfss	status,0,c
  4560  00629E  07CC               	decf	(memset@n+1)& (0+255),f,b
  4561  0062A0  0100               	movlb	0	; () banked
  4562  0062A2  29CB               	incf	memset@n& (0+255),w,b
  4563  0062A4  B4D8               	btfsc	status,2,c
  4564  0062A6  29CC               	incf	(memset@n+1)& (0+255),w,b
  4565  0062A8  B4D8               	btfsc	status,2,c
  4566                           
  4567                           ; BSR set to: 0
  4568  0062AA  0012               	return	
  4569  0062AC  D7EE               	goto	l3315
  4570  0062AE                     __end_of_memset:
  4571                           	opt stack 0
  4572                           tblptru	equ	0xFF8
  4573                           tblptrh	equ	0xFF7
  4574                           tblptrl	equ	0xFF6
  4575                           tablat	equ	0xFF5
  4576                           prodh	equ	0xFF4
  4577                           prodl	equ	0xFF3
  4578                           intcon	equ	0xFF2
  4579                           intcon2	equ	0xFF1
  4580                           intcon3	equ	0xFF0
  4581                           postinc0	equ	0xFEE
  4582                           wreg	equ	0xFE8
  4583                           indf1	equ	0xFE7
  4584                           fsr1h	equ	0xFE2
  4585                           fsr1l	equ	0xFE1
  4586                           indf2	equ	0xFDF
  4587                           postinc2	equ	0xFDE
  4588                           postdec2	equ	0xFDD
  4589                           plusw2	equ	0xFDB
  4590                           fsr2h	equ	0xFDA
  4591                           fsr2l	equ	0xFD9
  4592                           status	equ	0xFD8
  4593                           
  4594 ;; *************** function _interrupt_low *****************
  4595 ;; Defined at:
  4596 ;;		line 24 in file "main.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;		None
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;		None
  4601 ;; Return value:  Size  Location     Type
  4602 ;;		None               void
  4603 ;; Registers used:
  4604 ;;		None
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4610 ;;      Params:         0       0       0       0       0       0       0       0       0
  4611 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4612 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4613 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4614 ;;Total ram usage:        1 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:   12
  4617 ;; This function calls:
  4618 ;;		Nothing
  4619 ;; This function is called by:
  4620 ;;		Interrupt level 1
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	intcodelo
  4625  001018                     __pintcodelo:
  4626                           	opt stack 0
  4627  001018                     _interrupt_low:
  4628                           	opt stack 12
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;incstack = 0
  4632  001018  CFE0 F028          	movff	bsr,??_interrupt_low
  4633  00101C  C028  FFE0         	movff	??_interrupt_low,bsr
  4634  001020  0010               	retfie	
  4635  001022                     __end_of_interrupt_low:
  4636                           	opt stack 0
  4637                           tblptru	equ	0xFF8
  4638                           tblptrh	equ	0xFF7
  4639                           tblptrl	equ	0xFF6
  4640                           tablat	equ	0xFF5
  4641                           prodh	equ	0xFF4
  4642                           prodl	equ	0xFF3
  4643                           intcon	equ	0xFF2
  4644                           intcon2	equ	0xFF1
  4645                           intcon3	equ	0xFF0
  4646                           postinc0	equ	0xFEE
  4647                           wreg	equ	0xFE8
  4648                           indf1	equ	0xFE7
  4649                           fsr1h	equ	0xFE2
  4650                           fsr1l	equ	0xFE1
  4651                           bsr	equ	0xFE0
  4652                           indf2	equ	0xFDF
  4653                           postinc2	equ	0xFDE
  4654                           postdec2	equ	0xFDD
  4655                           plusw2	equ	0xFDB
  4656                           fsr2h	equ	0xFDA
  4657                           fsr2l	equ	0xFD9
  4658                           status	equ	0xFD8
  4659                           
  4660 ;; *************** function _interrupt_high *****************
  4661 ;; Defined at:
  4662 ;;		line 19 in file "main.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;		None
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;		None
  4667 ;; Return value:  Size  Location     Type
  4668 ;;		None               void
  4669 ;; Registers used:
  4670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4676 ;;      Params:         0       0       0       0       0       0       0       0       0
  4677 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4678 ;;      Temps:          0      14       0       0       0       0       0       0       0
  4679 ;;      Totals:         0      14       0       0       0       0       0       0       0
  4680 ;;Total ram usage:       14 bytes
  4681 ;; Hardware stack levels used:    1
  4682 ;; Hardware stack levels required when called:   11
  4683 ;; This function calls:
  4684 ;;		_app_isr
  4685 ;; This function is called by:
  4686 ;;		Interrupt level 2
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	intcode
  4691  001008                     __pintcode:
  4692                           	opt stack 0
  4693  001008                     _interrupt_high:
  4694                           	opt stack 12
  4695                           
  4696                           ;incstack = 0
  4697  001008  CFFA F0B9          	movff	pclath,??_interrupt_high
  4698  00100C  CFFB F0BA          	movff	pclatu,??_interrupt_high+1
  4699  001010  ED5C  F033         	call	int_func,f	;refresh shadow registers
  4700                           pclatu	equ	0xFFB
  4701                           pclath	equ	0xFFA
  4702                           tblptru	equ	0xFF8
  4703                           tblptrh	equ	0xFF7
  4704                           tblptrl	equ	0xFF6
  4705                           tablat	equ	0xFF5
  4706                           prodh	equ	0xFF4
  4707                           prodl	equ	0xFF3
  4708                           intcon	equ	0xFF2
  4709                           intcon2	equ	0xFF1
  4710                           intcon3	equ	0xFF0
  4711                           postinc0	equ	0xFEE
  4712                           wreg	equ	0xFE8
  4713                           indf1	equ	0xFE7
  4714                           fsr1h	equ	0xFE2
  4715                           fsr1l	equ	0xFE1
  4716                           bsr	equ	0xFE0
  4717                           indf2	equ	0xFDF
  4718                           postinc2	equ	0xFDE
  4719                           postdec2	equ	0xFDD
  4720                           plusw2	equ	0xFDB
  4721                           fsr2h	equ	0xFDA
  4722                           fsr2l	equ	0xFD9
  4723                           status	equ	0xFD8
  4724                           
  4725                           	psect	intcode_body
  4726  0066B8                     __pintcode_body:
  4727                           	opt stack 12
  4728  0066B8                     int_func:
  4729                           	opt stack 12
  4730  0066B8  0006               	pop		; remove dummy address from shadow register refresh
  4731  0066BA  CFE9 F0BB          	movff	fsr0l,??_interrupt_high+2
  4732  0066BE  CFEA F0BC          	movff	fsr0h,??_interrupt_high+3
  4733  0066C2  CFE1 F0BD          	movff	fsr1l,??_interrupt_high+4
  4734  0066C6  CFE2 F0BE          	movff	fsr1h,??_interrupt_high+5
  4735  0066CA  CFD9 F0BF          	movff	fsr2l,??_interrupt_high+6
  4736  0066CE  CFDA F0C0          	movff	fsr2h,??_interrupt_high+7
  4737  0066D2  CFF3 F0C1          	movff	prodl,??_interrupt_high+8
  4738  0066D6  CFF4 F0C2          	movff	prodh,??_interrupt_high+9
  4739  0066DA  CFF6 F0C3          	movff	tblptrl,??_interrupt_high+10
  4740  0066DE  CFF7 F0C4          	movff	tblptrh,??_interrupt_high+11
  4741  0066E2  CFF8 F0C5          	movff	tblptru,??_interrupt_high+12
  4742  0066E6  CFF5 F0C6          	movff	tablat,??_interrupt_high+13
  4743  0066EA                     
  4744                           ;main.c: 20: app_isr();
  4745  0066EA  EC68  F030         	call	_app_isr	;wreg free
  4746  0066EE  C0C6  FFF5         	movff	??_interrupt_high+13,tablat
  4747  0066F2  C0C5  FFF8         	movff	??_interrupt_high+12,tblptru
  4748  0066F6  C0C4  FFF7         	movff	??_interrupt_high+11,tblptrh
  4749  0066FA  C0C3  FFF6         	movff	??_interrupt_high+10,tblptrl
  4750  0066FE  C0C2  FFF4         	movff	??_interrupt_high+9,prodh
  4751  006702  C0C1  FFF3         	movff	??_interrupt_high+8,prodl
  4752  006706  C0C0  FFDA         	movff	??_interrupt_high+7,fsr2h
  4753  00670A  C0BF  FFD9         	movff	??_interrupt_high+6,fsr2l
  4754  00670E  C0BE  FFE2         	movff	??_interrupt_high+5,fsr1h
  4755  006712  C0BD  FFE1         	movff	??_interrupt_high+4,fsr1l
  4756  006716  C0BC  FFEA         	movff	??_interrupt_high+3,fsr0h
  4757  00671A  C0BB  FFE9         	movff	??_interrupt_high+2,fsr0l
  4758  00671E  C0BA  FFFB         	movff	??_interrupt_high+1,pclatu
  4759  006722  C0B9  FFFA         	movff	??_interrupt_high,pclath
  4760  006726  0011               	retfie		f
  4761  006728                     __end_of_interrupt_high:
  4762                           	opt stack 0
  4763                           pclatu	equ	0xFFB
  4764                           pclath	equ	0xFFA
  4765                           tblptru	equ	0xFF8
  4766                           tblptrh	equ	0xFF7
  4767                           tblptrl	equ	0xFF6
  4768                           tablat	equ	0xFF5
  4769                           prodh	equ	0xFF4
  4770                           prodl	equ	0xFF3
  4771                           intcon	equ	0xFF2
  4772                           intcon2	equ	0xFF1
  4773                           intcon3	equ	0xFF0
  4774                           postinc0	equ	0xFEE
  4775                           fsr0h	equ	0xFEA
  4776                           fsr0l	equ	0xFE9
  4777                           wreg	equ	0xFE8
  4778                           indf1	equ	0xFE7
  4779                           fsr1h	equ	0xFE2
  4780                           fsr1l	equ	0xFE1
  4781                           bsr	equ	0xFE0
  4782                           indf2	equ	0xFDF
  4783                           postinc2	equ	0xFDE
  4784                           postdec2	equ	0xFDD
  4785                           plusw2	equ	0xFDB
  4786                           fsr2h	equ	0xFDA
  4787                           fsr2l	equ	0xFD9
  4788                           status	equ	0xFD8
  4789                           
  4790 ;; *************** function _app_isr *****************
  4791 ;; Defined at:
  4792 ;;		line 42 in file "app.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;		None
  4797 ;; Return value:  Size  Location     Type
  4798 ;;		None               void
  4799 ;; Registers used:
  4800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4806 ;;      Params:         0       0       0       0       0       0       0       0       0
  4807 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4808 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4809 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4810 ;;Total ram usage:        0 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; Hardware stack levels required when called:   10
  4813 ;; This function calls:
  4814 ;;		_comm_isr
  4815 ;;		_leds_isr
  4816 ;;		_motors_isr
  4817 ;;		_sensors_isr
  4818 ;; This function is called by:
  4819 ;;		_interrupt_high
  4820 ;; This function uses a non-reentrant model
  4821 ;;
  4822                           
  4823                           	psect	text28
  4824  0060D0                     __ptext28:
  4825                           	opt stack 0
  4826  0060D0                     _app_isr:
  4827                           	opt stack 12
  4828                           
  4829                           ;app.c: 43: leds_isr();
  4830                           
  4831                           ;incstack = 0
  4832                           ;incstack = 0
  4833  0060D0  EC94  F03C         	call	_leds_isr	;wreg free
  4834                           
  4835                           ;app.c: 44: motors_isr();
  4836  0060D4  ECD5  F032         	call	_motors_isr	;wreg free
  4837                           
  4838                           ;app.c: 45: sensors_isr();
  4839  0060D8  ECA1  F030         	call	_sensors_isr	;wreg free
  4840                           
  4841                           ;app.c: 46: comm_isr();
  4842  0060DC  EF55  F030         	goto	_comm_isr	;wreg free
  4843  0060E0                     __end_of_app_isr:
  4844                           	opt stack 0
  4845                           pclatu	equ	0xFFB
  4846                           pclath	equ	0xFFA
  4847                           tblptru	equ	0xFF8
  4848                           tblptrh	equ	0xFF7
  4849                           tblptrl	equ	0xFF6
  4850                           tablat	equ	0xFF5
  4851                           prodh	equ	0xFF4
  4852                           prodl	equ	0xFF3
  4853                           intcon	equ	0xFF2
  4854                           intcon2	equ	0xFF1
  4855                           intcon3	equ	0xFF0
  4856                           postinc0	equ	0xFEE
  4857                           fsr0h	equ	0xFEA
  4858                           fsr0l	equ	0xFE9
  4859                           wreg	equ	0xFE8
  4860                           indf1	equ	0xFE7
  4861                           fsr1h	equ	0xFE2
  4862                           fsr1l	equ	0xFE1
  4863                           bsr	equ	0xFE0
  4864                           indf2	equ	0xFDF
  4865                           postinc2	equ	0xFDE
  4866                           postdec2	equ	0xFDD
  4867                           plusw2	equ	0xFDB
  4868                           fsr2h	equ	0xFDA
  4869                           fsr2l	equ	0xFD9
  4870                           status	equ	0xFD8
  4871                           
  4872 ;; *************** function _sensors_isr *****************
  4873 ;; Defined at:
  4874 ;;		line 226 in file "/Users/zangel/microchip/mla/v2014_07_22/framework/usb/sensors.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;		None
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;		None
  4879 ;; Return value:  Size  Location     Type
  4880 ;;		None               void
  4881 ;; Registers used:
  4882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4888 ;;      Params:         0       0       0       0       0       0       0       0       0
  4889 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4890 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4891 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4892 ;;Total ram usage:        0 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:    3
  4895 ;; This function calls:
  4896 ;;		_sensors_measurement_tasks
  4897 ;;		_sensors_i2c_async_tasks
  4898 ;; This function is called by:
  4899 ;;		_app_isr
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903                           	psect	text29
  4904  006142                     __ptext29:
  4905                           	opt stack 0
  4906  006142                     _sensors_isr:
  4907                           	opt stack 18
  4908                           
  4909                           ;sensors.c: 227: if(INTCON3bits.INT2IF)
  4910                           
  4911                           ;incstack = 0
  4912                           ;incstack = 0
  4913  006142  A2F0               	btfss	intcon3,1,c	;volatile
  4914  006144  D005               	goto	i2l4389
  4915                           
  4916                           ;sensors.c: 228: {
  4917                           ;sensors.c: 229: INTCON3bits.INT2IF = 0;
  4918  006146  92F0               	bcf	intcon3,1,c	;volatile
  4919                           
  4920                           ;sensors.c: 230: if(sensors_measurement_started) sensors_measurement_tasks();
  4921  006148  5022               	movf	_sensors_measurement_started,w,c	;volatile
  4922  00614A  A4D8               	btfss	status,2,c
  4923  00614C  EC5C  F030         	call	_sensors_measurement_tasks	;wreg free
  4924  006150                     i2l4389:
  4925                           
  4926                           ;sensors.c: 231: }
  4927                           ;sensors.c: 233: if(PIR1bits.SSPIF)
  4928  006150  A69E               	btfss	3998,3,c	;volatile
  4929  006152  D003               	goto	i2l745
  4930                           
  4931                           ;sensors.c: 234: {
  4932                           ;sensors.c: 235: PIR1bits.SSPIF = 0;
  4933  006154  969E               	bcf	3998,3,c	;volatile
  4934                           
  4935                           ;sensors.c: 236: sensors_i2c_async_tasks();
  4936  006156  EC34  F039         	call	_sensors_i2c_async_tasks	;wreg free
  4937  00615A                     i2l745:
  4938  00615A  0012               	return	
  4939  00615C                     __end_of_sensors_isr:
  4940                           	opt stack 0
  4941                           pclatu	equ	0xFFB
  4942                           pclath	equ	0xFFA
  4943                           tblptru	equ	0xFF8
  4944                           tblptrh	equ	0xFF7
  4945                           tblptrl	equ	0xFF6
  4946                           tablat	equ	0xFF5
  4947                           prodh	equ	0xFF4
  4948                           prodl	equ	0xFF3
  4949                           intcon	equ	0xFF2
  4950                           intcon2	equ	0xFF1
  4951                           intcon3	equ	0xFF0
  4952                           postinc0	equ	0xFEE
  4953                           fsr0h	equ	0xFEA
  4954                           fsr0l	equ	0xFE9
  4955                           wreg	equ	0xFE8
  4956                           indf1	equ	0xFE7
  4957                           fsr1h	equ	0xFE2
  4958                           fsr1l	equ	0xFE1
  4959                           bsr	equ	0xFE0
  4960                           indf2	equ	0xFDF
  4961                           postinc2	equ	0xFDE
  4962                           postdec2	equ	0xFDD
  4963                           plusw2	equ	0xFDB
  4964                           fsr2h	equ	0xFDA
  4965                           fsr2l	equ	0xFD9
  4966                           status	equ	0xFD8
  4967                           
  4968 ;; *************** function _sensors_i2c_async_tasks *****************
  4969 ;; Defined at:
  4970 ;;		line 437 in file "/Users/zangel/microchip/mla/v2014_07_22/framework/usb/sensors.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;		None
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;		None
  4975 ;; Return value:  Size  Location     Type
  4976 ;;		None               void
  4977 ;; Registers used:
  4978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4984 ;;      Params:         0       0       0       0       0       0       0       0       0
  4985 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4986 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4987 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4988 ;;Total ram usage:        0 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; Hardware stack levels required when called:    2
  4991 ;; This function calls:
  4992 ;;		_sensors_i2c_async_rw_completed
  4993 ;; This function is called by:
  4994 ;;		_sensors_isr
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           	psect	text30
  4999  007268                     __ptext30:
  5000                           	opt stack 0
  5001  007268                     _sensors_i2c_async_tasks:
  5002                           	opt stack 18
  5003                           
  5004                           ;sensors.c: 438: if(PIR2bits.BCLIF)
  5005                           
  5006                           ;incstack = 0
  5007                           ;incstack = 0
  5008  007268  A6A1               	btfss	4001,3,c	;volatile
  5009  00726A  D067               	goto	i2l4491
  5010                           
  5011                           ;sensors.c: 439: {
  5012                           ;sensors.c: 440: PIR2bits.BCLIF = 0;
  5013  00726C  96A1               	bcf	4001,3,c	;volatile
  5014  00726E  D01F               	goto	i2l847
  5015  007270                     i2l839:
  5016                           
  5017                           ;sensors.c: 452: SSPCON1bits.WCOL = 0;
  5018  007270  9EC6               	bcf	4038,7,c	;volatile
  5019                           
  5020                           ;sensors.c: 453: SSPBUF = (sensors_i2c_async_rw_device_address & 0xFE);
  5021  007272  501C               	movf	_sensors_i2c_async_rw_device_address,w,c
  5022  007274  0BFE               	andlw	254
  5023  007276  6EC9               	movwf	4041,c	;volatile
  5024                           
  5025                           ;sensors.c: 454: if(SSPCON1bits.WCOL)
  5026  007278  AEC6               	btfss	4038,7,c	;volatile
  5027  00727A  D002               	goto	i2l4427
  5028  00727C                     i2l4425:
  5029                           
  5030                           ;sensors.c: 455: {
  5031                           ;sensors.c: 456: SSPCON1bits.WCOL = 0;
  5032  00727C  9EC6               	bcf	4038,7,c	;volatile
  5033  00727E  D017               	goto	i2l847
  5034  007280                     i2l4427:
  5035                           
  5036                           ;sensors.c: 461: else
  5037                           ;sensors.c: 462: {
  5038                           ;sensors.c: 463: sensors_i2c_async_rw_state = SENSORS_I2C_ASYNC_RW_DEVICE_ADDRESS_WRITEN;
  5039  007280  0E04               	movlw	4
  5040  007282  D041               	goto	L10
  5041  007284                     i2l842:
  5042                           
  5043                           ;sensors.c: 468: SSPCON1bits.WCOL = 0;
  5044  007284  9EC6               	bcf	4038,7,c	;volatile
  5045                           
  5046                           ;sensors.c: 469: SSPBUF = (sensors_i2c_async_rw_device_address | 0x01);
  5047  007286  501C               	movf	_sensors_i2c_async_rw_device_address,w,c
  5048  007288  0901               	iorlw	1
  5049  00728A  6EC9               	movwf	4041,c	;volatile
  5050                           
  5051                           ;sensors.c: 470: if(SSPCON1bits.WCOL)
  5052  00728C  BEC6               	btfsc	4038,7,c	;volatile
  5053  00728E  D7F6               	goto	i2l4425
  5054                           
  5055                           ;sensors.c: 477: else
  5056                           ;sensors.c: 478: {
  5057                           ;sensors.c: 479: sensors_i2c_async_rw_state = SENSORS_I2C_ASYNC_RW_READ_CYCLE;
  5058  007290  0E07               	movlw	7
  5059  007292  D039               	goto	L10
  5060  007294                     i2l845:
  5061                           
  5062                           ;sensors.c: 484: sensors_i2c_async_rw_state = SENSORS_I2C_ASYNC_RW_IDLE_STATE;
  5063  007294  6A1F               	clrf	_sensors_i2c_async_rw_state,c
  5064                           
  5065                           ;sensors.c: 485: sensors_i2c_async_rw_completed();
  5066  007296  EC94  F033         	call	_sensors_i2c_async_rw_completed	;wreg free
  5067                           
  5068                           ;sensors.c: 486: break;
  5069  00729A  D05F               	goto	i2l835
  5070  00729C                     i2l846:
  5071                           
  5072                           ;sensors.c: 489: if(!SSPCON2bits.ACKSTAT)
  5073  00729C  BCC5               	btfsc	4037,6,c	;volatile
  5074  00729E  D007               	goto	i2l847
  5075                           
  5076                           ;sensors.c: 490: {
  5077                           ;sensors.c: 491: SSPCON1bits.WCOL = 0;
  5078  0072A0  9EC6               	bcf	4038,7,c	;volatile
  5079                           
  5080                           ;sensors.c: 492: SSPBUF = sensors_i2c_async_rw_register_address;
  5081  0072A2  C01E  FFC9         	movff	_sensors_i2c_async_rw_register_address,4041	;volatile
  5082                           
  5083                           ;sensors.c: 493: if(SSPCON1bits.WCOL)
  5084  0072A6  BEC6               	btfsc	4038,7,c	;volatile
  5085  0072A8  D7E9               	goto	i2l4425
  5086                           
  5087                           ;sensors.c: 500: else
  5088                           ;sensors.c: 501: {
  5089                           ;sensors.c: 502: sensors_i2c_async_rw_state = SENSORS_I2C_ASYNC_RW_REGISTER_ADDRESS_WRIT
      +                          EN;
  5090  0072AA  0E05               	movlw	5
  5091  0072AC  D02C               	goto	L10
  5092  0072AE                     i2l847:
  5093                           
  5094                           ;sensors.c: 508: sensors_i2c_async_rw_state = SENSORS_I2C_ASYNC_RW_IDLE_STATE;
  5095  0072AE  6A1F               	clrf	_sensors_i2c_async_rw_state,c
  5096  0072B0  D054               	goto	i2l835
  5097  0072B2                     i2l851:
  5098                           
  5099                           ;sensors.c: 514: if(!SSPCON2bits.ACKSTAT)
  5100  0072B2  ACC5               	btfss	4037,6,c	;volatile
  5101  0072B4  D00F               	goto	i2l4457
  5102  0072B6  D7FB               	goto	i2l847
  5103  0072B8                     i2l854:
  5104                           
  5105                           ;sensors.c: 519: SSPCON2bits.RSEN = 1;
  5106  0072B8  82C5               	bsf	4037,1,c	;volatile
  5107                           
  5108                           ;sensors.c: 520: sensors_i2c_async_rw_state = SENSORS_I2C_ASYNC_RW_RESTART_SENT;
  5109  0072BA  0E02               	movlw	2
  5110  0072BC  D024               	goto	L10
  5111  0072BE                     i2l856:
  5112                           
  5113                           ;sensors.c: 524: SSPCON1bits.WCOL = 0;
  5114  0072BE  9EC6               	bcf	4038,7,c	;volatile
  5115                           
  5116                           ;sensors.c: 525: SSPBUF = sensors_i2c_async_rw_buffer[0];
  5117  0072C0  C00B  FFD9         	movff	_sensors_i2c_async_rw_buffer,fsr2l
  5118  0072C4  C00C  FFDA         	movff	_sensors_i2c_async_rw_buffer+1,fsr2h
  5119  0072C8  50DF               	movf	indf2,w,c
  5120  0072CA  6EC9               	movwf	4041,c	;volatile
  5121                           
  5122                           ;sensors.c: 526: if(SSPCON1bits.WCOL)
  5123  0072CC  BEC6               	btfsc	4038,7,c	;volatile
  5124  0072CE  D7D6               	goto	i2l4425
  5125                           
  5126                           ;sensors.c: 532: else
  5127                           ;sensors.c: 533: {
  5128                           ;sensors.c: 534: sensors_i2c_async_rw_state = SENSORS_I2C_ASYNC_RW_WRITE_CYCLE;
  5129  0072D0  0E06               	movlw	6
  5130  0072D2  D019               	goto	L10
  5131  0072D4                     i2l4457:
  5132  0072D4  501D               	movf	_sensors_i2c_async_rw_operation,w,c
  5133                           
  5134                           ; Switch size 1, requested type "speed"
  5135                           ; Number of cases is 2, Range of values is 0 to 1
  5136                           ; switch strategies available:
  5137                           ; Name         Instructions Cycles
  5138                           ; simple_byte            7     4 (average)
  5139                           ;	Chosen strategy is simple_byte
  5140  0072D6  E0F0               	bz	i2l854
  5141  0072D8  0A01               	xorlw	1	; case 1
  5142  0072DA  E0F1               	bz	i2l856
  5143  0072DC  D7E8               	goto	i2l847
  5144  0072DE                     i2l861:
  5145                           
  5146                           ;sensors.c: 553: if(!SSPCON2bits.ACKSTAT)
  5147  0072DE  BCC5               	btfsc	4037,6,c	;volatile
  5148  0072E0  D7E6               	goto	i2l847
  5149                           
  5150                           ;sensors.c: 554: {
  5151                           ;sensors.c: 555: sensors_i2c_async_rw_buffer_progress++;
  5152  0072E2  2A1A               	incf	_sensors_i2c_async_rw_buffer_progress,f,c
  5153                           
  5154                           ;sensors.c: 556: if(sensors_i2c_async_rw_buffer_progress < sensors_i2c_async_rw_buffer_s
      +                          ize)
  5155  0072E4  501B               	movf	_sensors_i2c_async_rw_buffer_size,w,c
  5156  0072E6  601A               	cpfslt	_sensors_i2c_async_rw_buffer_progress,c
  5157  0072E8  D00C               	goto	i2l863
  5158                           
  5159                           ;sensors.c: 557: {
  5160                           ;sensors.c: 558: SSPCON1bits.WCOL = 0;
  5161  0072EA  9EC6               	bcf	4038,7,c	;volatile
  5162                           
  5163                           ;sensors.c: 559: SSPBUF = sensors_i2c_async_rw_buffer[sensors_i2c_async_rw_buffer_progre
      +                          ss];
  5164  0072EC  501A               	movf	_sensors_i2c_async_rw_buffer_progress,w,c
  5165  0072EE  240B               	addwf	_sensors_i2c_async_rw_buffer,w,c
  5166  0072F0  6ED9               	movwf	fsr2l,c
  5167  0072F2  0E00               	movlw	0
  5168  0072F4  200C               	addwfc	_sensors_i2c_async_rw_buffer+1,w,c
  5169  0072F6  6EDA               	movwf	fsr2h,c
  5170  0072F8  50DF               	movf	indf2,w,c
  5171  0072FA  6EC9               	movwf	4041,c	;volatile
  5172                           
  5173                           ;sensors.c: 560: if(SSPCON1bits.WCOL)
  5174  0072FC  BEC6               	btfsc	4038,7,c	;volatile
  5175  0072FE  D7BE               	goto	i2l4425
  5176  007300  D02C               	goto	i2l835
  5177  007302                     i2l863:
  5178                           
  5179                           ;sensors.c: 567: else
  5180                           ;sensors.c: 568: {
  5181                           ;sensors.c: 569: SSPCON2bits.PEN = 1;
  5182  007302  84C5               	bsf	4037,2,c	;volatile
  5183                           
  5184                           ;sensors.c: 570: sensors_i2c_async_rw_state = SENSORS_I2C_ASYNC_RW_STOP_SENT;
  5185  007304  0E03               	movlw	3
  5186  007306                     L10:
  5187  007306  6E1F               	movwf	_sensors_i2c_async_rw_state,c
  5188  007308  D028               	goto	i2l835
  5189  00730A                     i2l867:
  5190                           
  5191                           ;sensors.c: 582: if(SSPSTATbits.BF)
  5192  00730A  A0C7               	btfss	4039,0,c	;volatile
  5193  00730C  D011               	goto	i2l4483
  5194                           
  5195                           ;sensors.c: 583: {
  5196                           ;sensors.c: 584: sensors_i2c_async_rw_buffer_progress++;
  5197  00730E  2A1A               	incf	_sensors_i2c_async_rw_buffer_progress,f,c
  5198                           
  5199                           ;sensors.c: 585: *sensors_i2c_async_rw_buffer++ = SSPBUF;
  5200  007310  C00B  FFD9         	movff	_sensors_i2c_async_rw_buffer,fsr2l
  5201  007314  C00C  FFDA         	movff	_sensors_i2c_async_rw_buffer+1,fsr2h
  5202  007318  CFC9 FFDF          	movff	4041,indf2	;volatile
  5203  00731C  4A0B               	infsnz	_sensors_i2c_async_rw_buffer,f,c
  5204  00731E  2A0C               	incf	_sensors_i2c_async_rw_buffer+1,f,c
  5205                           
  5206                           ;sensors.c: 586: if(sensors_i2c_async_rw_buffer_progress < sensors_i2c_async_rw_buffer_s
      +                          ize)
  5207  007320  501B               	movf	_sensors_i2c_async_rw_buffer_size,w,c
  5208  007322  601A               	cpfslt	_sensors_i2c_async_rw_buffer_progress,c
  5209  007324  D002               	goto	i2l869
  5210                           
  5211                           ;sensors.c: 587: {
  5212                           ;sensors.c: 588: SSPCON2bits.ACKDT = 0;
  5213  007326  9AC5               	bcf	4037,5,c	;volatile
  5214                           
  5215                           ;sensors.c: 589: }
  5216  007328  D001               	goto	i2l870
  5217  00732A                     i2l869:
  5218                           
  5219                           ;sensors.c: 590: else
  5220                           ;sensors.c: 591: {
  5221                           ;sensors.c: 592: SSPCON2bits.ACKDT = 1;
  5222  00732A  8AC5               	bsf	4037,5,c	;volatile
  5223  00732C                     i2l870:
  5224                           
  5225                           ;sensors.c: 593: }
  5226                           ;sensors.c: 594: SSPCON2bits.ACKEN = 1;
  5227  00732C  88C5               	bsf	4037,4,c	;volatile
  5228                           
  5229                           ;sensors.c: 595: }
  5230  00732E  D015               	goto	i2l835
  5231  007330                     i2l4483:
  5232                           
  5233                           ;sensors.c: 596: else
  5234                           ;sensors.c: 597: {
  5235                           ;sensors.c: 598: if(sensors_i2c_async_rw_buffer_progress < sensors_i2c_async_rw_buffer_s
      +                          ize)
  5236  007330  501B               	movf	_sensors_i2c_async_rw_buffer_size,w,c
  5237  007332  601A               	cpfslt	_sensors_i2c_async_rw_buffer_progress,c
  5238  007334  D7E6               	goto	i2l863
  5239                           
  5240                           ;sensors.c: 599: {
  5241                           ;sensors.c: 600: SSPCON2bits.RCEN = 1;
  5242  007336  86C5               	bsf	4037,3,c	;volatile
  5243                           
  5244                           ;sensors.c: 601: }
  5245  007338  D010               	goto	i2l835
  5246  00733A                     i2l4491:
  5247  00733A  501F               	movf	_sensors_i2c_async_rw_state,w,c
  5248                           
  5249                           ; Switch size 1, requested type "speed"
  5250                           ; Number of cases is 8, Range of values is 0 to 7
  5251                           ; switch strategies available:
  5252                           ; Name         Instructions Cycles
  5253                           ; simple_byte           25    13 (average)
  5254                           ;	Chosen strategy is simple_byte
  5255  00733C  E00E               	bz	i2l835
  5256  00733E  0A01               	xorlw	1	; case 1
  5257  007340  E097               	bz	i2l839
  5258  007342  0A03               	xorlw	3	; case 2
  5259  007344  E09F               	bz	i2l842
  5260  007346  0A01               	xorlw	1	; case 3
  5261  007348  E0A5               	bz	i2l845
  5262  00734A  0A07               	xorlw	7	; case 4
  5263  00734C  E0A7               	bz	i2l846
  5264  00734E  0A01               	xorlw	1	; case 5
  5265  007350  E0B0               	bz	i2l851
  5266  007352  0A03               	xorlw	3	; case 6
  5267  007354  E0C4               	bz	i2l861
  5268  007356  0A01               	xorlw	1	; case 7
  5269  007358  E0D8               	bz	i2l867
  5270  00735A                     i2l835:
  5271  00735A  0012               	return	
  5272  00735C                     __end_of_sensors_i2c_async_tasks:
  5273                           	opt stack 0
  5274                           pclatu	equ	0xFFB
  5275                           pclath	equ	0xFFA
  5276                           tblptru	equ	0xFF8
  5277                           tblptrh	equ	0xFF7
  5278                           tblptrl	equ	0xFF6
  5279                           tablat	equ	0xFF5
  5280                           prodh	equ	0xFF4
  5281                           prodl	equ	0xFF3
  5282                           intcon	equ	0xFF2
  5283                           intcon2	equ	0xFF1
  5284                           intcon3	equ	0xFF0
  5285                           postinc0	equ	0xFEE
  5286                           fsr0h	equ	0xFEA
  5287                           fsr0l	equ	0xFE9
  5288                           wreg	equ	0xFE8
  5289                           indf1	equ	0xFE7
  5290                           fsr1h	equ	0xFE2
  5291                           fsr1l	equ	0xFE1
  5292                           bsr	equ	0xFE0
  5293                           indf2	equ	0xFDF
  5294                           postinc2	equ	0xFDE
  5295                           postdec2	equ	0xFDD
  5296                           plusw2	equ	0xFDB
  5297                           fsr2h	equ	0xFDA
  5298                           fsr2l	equ	0xFD9
  5299                           status	equ	0xFD8
  5300                           
  5301 ;; *************** function _sensors_i2c_async_rw_completed *****************
  5302 ;; Defined at:
  5303 ;;		line 396 in file "/Users/zangel/microchip/mla/v2014_07_22/framework/usb/sensors.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;		None
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;		None
  5308 ;; Return value:  Size  Location     Type
  5309 ;;		None               void
  5310 ;; Registers used:
  5311 ;;		wreg, status,2, status,0, cstack
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5317 ;;      Params:         0       0       0       0       0       0       0       0       0
  5318 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5319 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5320 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5321 ;;Total ram usage:        0 bytes
  5322 ;; Hardware stack levels used:    1
  5323 ;; Hardware stack levels required when called:    1
  5324 ;; This function calls:
  5325 ;;		_sensors_i2c_async_read_bytes
  5326 ;;		_sensors_i2c_async_write_bytes
  5327 ;; This function is called by:
  5328 ;;		_sensors_i2c_async_tasks
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text31
  5333  006728                     __ptext31:
  5334                           	opt stack 0
  5335  006728                     _sensors_i2c_async_rw_completed:
  5336                           	opt stack 18
  5337                           
  5338                           ;sensors.c: 397: static uint8_t MPL3115A2_read_request = 0b00000010;
  5339                           ;sensors.c: 398: static uint8_t AMI304_read_request = 0b01000000;
  5340                           ;sensors.c: 399: switch(sensors_measurement_read_state)
  5341                           
  5342                           ;incstack = 0
  5343                           ;incstack = 0
  5344  006728  D03A               	goto	i2l4679
  5345  00672A                     i2l4655:
  5346                           
  5347                           ;sensors.c: 405: sensors_measurement_read_buffer+=14;
  5348  00672A  0E0E               	movlw	14
  5349  00672C  2620               	addwf	_sensors_measurement_read_buffer,f,c
  5350                           
  5351                           ;sensors.c: 406: sensors_measurement_read_state = SENSORS_MEASUEREMENT_MPL3115A2_READ;
  5352  00672E  0E02               	movlw	2
  5353  006730  6E21               	movwf	_sensors_measurement_read_state,c
  5354                           
  5355                           ;sensors.c: 407: sensors_i2c_async_read_bytes(0xC0, 0x01, 5, sensors_measurement_read_bu
      +                          ffer);
  5356  006732  0E01               	movlw	1
  5357  006734  6E29               	movwf	?_sensors_i2c_async_read_bytes,c
  5358  006736  0E05               	movlw	5
  5359  006738  6E2A               	movwf	?_sensors_i2c_async_read_bytes+1,c
  5360  00673A  C020  F02B         	movff	_sensors_measurement_read_buffer,?_sensors_i2c_async_read_bytes+2
  5361  00673E  0EC0               	movlw	192
  5362  006740  ECEB  F030         	call	_sensors_i2c_async_read_bytes
  5363                           
  5364                           ;sensors.c: 408: break;
  5365  006744  D038               	goto	i2l831
  5366  006746                     i2l4661:
  5367                           
  5368                           ;sensors.c: 411: sensors_measurement_read_buffer+=5;
  5369  006746  0E05               	movlw	5
  5370  006748  2620               	addwf	_sensors_measurement_read_buffer,f,c
  5371                           
  5372                           ;sensors.c: 412: sensors_measurement_read_state = SENSORS_MEASUEREMENT_AMI304_READ;
  5373  00674A  0E03               	movlw	3
  5374  00674C  6E21               	movwf	_sensors_measurement_read_state,c
  5375                           
  5376                           ;sensors.c: 413: sensors_i2c_async_read_bytes(0x1C, 0x10, 6, sensors_measurement_read_bu
      +                          ffer);
  5377  00674E  0E10               	movlw	16
  5378  006750  6E29               	movwf	?_sensors_i2c_async_read_bytes,c
  5379  006752  0E06               	movlw	6
  5380  006754  6E2A               	movwf	?_sensors_i2c_async_read_bytes+1,c
  5381  006756  C020  F02B         	movff	_sensors_measurement_read_buffer,?_sensors_i2c_async_read_bytes+2
  5382  00675A  0E1C               	movlw	28
  5383  00675C  ECEB  F030         	call	_sensors_i2c_async_read_bytes
  5384                           
  5385                           ;sensors.c: 414: break;
  5386  006760  D02A               	goto	i2l831
  5387  006762                     i2l827:
  5388                           
  5389                           ;sensors.c: 417: if(!sensors_measurement_buffers_ready)
  5390  006762  0100               	movlb	0	; () banked
  5391  006764  6780               	tstfsz	_sensors_measurement_buffers_ready& (0+255),b	;volatile
  5392  006766  D001               	goto	i2l4669
  5393                           
  5394                           ; BSR set to: 0
  5395                           ;sensors.c: 418: sensors_measurement_buffers_ready++;
  5396  006768  2B80               	incf	_sensors_measurement_buffers_ready& (0+255),f,b	;volatile
  5397  00676A                     i2l4669:
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;sensors.c: 421: sensors_measurement_read_state = SENSORS_MEASUEREMENT_MPL3115A2_REQUEST;
  5401  00676A  0E04               	movlw	4
  5402  00676C  6E21               	movwf	_sensors_measurement_read_state,c
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;sensors.c: 422: sensors_i2c_async_write_bytes(0xC0, 0x26, 1, &MPL3115A2_read_request);
  5406  00676E  0E26               	movlw	38
  5407  006770  6E29               	movwf	?_sensors_i2c_async_write_bytes,c
  5408  006772  0E01               	movlw	1
  5409  006774  6E2A               	movwf	?_sensors_i2c_async_write_bytes+1,c
  5410  006776  0E52               	movlw	low sensors_i2c_async_rw_completed@MPL3115A2_read_request
  5411  006778  6E2B               	movwf	?_sensors_i2c_async_write_bytes+2,c
  5412  00677A  0EC0               	movlw	192
  5413  00677C  EC70  F031         	call	_sensors_i2c_async_write_bytes
  5414                           
  5415                           ;sensors.c: 423: break;
  5416  006780  D01A               	goto	i2l831
  5417  006782                     i2l4673:
  5418                           
  5419                           ;sensors.c: 426: sensors_measurement_read_state = SENSORS_MEASUEREMENT_AMI304_REQUEST;
  5420  006782  0E05               	movlw	5
  5421  006784  6E21               	movwf	_sensors_measurement_read_state,c
  5422                           
  5423                           ;sensors.c: 427: sensors_i2c_async_write_bytes(0x1C, 0x1D, 1, &AMI304_read_request);
  5424  006786  0E1D               	movlw	29
  5425  006788  6E29               	movwf	?_sensors_i2c_async_write_bytes,c
  5426  00678A  0E01               	movlw	1
  5427  00678C  6E2A               	movwf	?_sensors_i2c_async_write_bytes+1,c
  5428  00678E  0E51               	movlw	low sensors_i2c_async_rw_completed@AMI304_read_request
  5429  006790  6E2B               	movwf	?_sensors_i2c_async_write_bytes+2,c
  5430  006792  0E1C               	movlw	28
  5431  006794  EC70  F031         	call	_sensors_i2c_async_write_bytes
  5432                           
  5433                           ;sensors.c: 428: break;
  5434  006798  D00E               	goto	i2l831
  5435  00679A                     i2l830:
  5436                           
  5437                           ;sensors.c: 431: sensors_measurement_read_state = SENSORS_MEASUEREMENT_IDLE;
  5438  00679A  6A21               	clrf	_sensors_measurement_read_state,c
  5439                           
  5440                           ;sensors.c: 432: break;
  5441  00679C  D00C               	goto	i2l831
  5442  00679E                     i2l4679:
  5443  00679E  5021               	movf	_sensors_measurement_read_state,w,c
  5444                           
  5445                           ; Switch size 1, requested type "speed"
  5446                           ; Number of cases is 6, Range of values is 0 to 5
  5447                           ; switch strategies available:
  5448                           ; Name         Instructions Cycles
  5449                           ; simple_byte           19    10 (average)
  5450                           ;	Chosen strategy is simple_byte
  5451  0067A0  E00A               	bz	i2l831
  5452  0067A2  0A01               	xorlw	1	; case 1
  5453  0067A4  E0C2               	bz	i2l4655
  5454  0067A6  0A03               	xorlw	3	; case 2
  5455  0067A8  E0CE               	bz	i2l4661
  5456  0067AA  0A01               	xorlw	1	; case 3
  5457  0067AC  E0DA               	bz	i2l827
  5458  0067AE  0A07               	xorlw	7	; case 4
  5459  0067B0  E0E8               	bz	i2l4673
  5460  0067B2  0A01               	xorlw	1	; case 5
  5461  0067B4  E0F2               	bz	i2l830
  5462  0067B6                     i2l831:
  5463  0067B6  0012               	return	
  5464  0067B8                     __end_of_sensors_i2c_async_rw_completed:
  5465                           	opt stack 0
  5466                           pclatu	equ	0xFFB
  5467                           pclath	equ	0xFFA
  5468                           tblptru	equ	0xFF8
  5469                           tblptrh	equ	0xFF7
  5470                           tblptrl	equ	0xFF6
  5471                           tablat	equ	0xFF5
  5472                           prodh	equ	0xFF4
  5473                           prodl	equ	0xFF3
  5474                           intcon	equ	0xFF2
  5475                           intcon2	equ	0xFF1
  5476                           intcon3	equ	0xFF0
  5477                           postinc0	equ	0xFEE
  5478                           fsr0h	equ	0xFEA
  5479                           fsr0l	equ	0xFE9
  5480                           wreg	equ	0xFE8
  5481                           indf1	equ	0xFE7
  5482                           fsr1h	equ	0xFE2
  5483                           fsr1l	equ	0xFE1
  5484                           bsr	equ	0xFE0
  5485                           indf2	equ	0xFDF
  5486                           postinc2	equ	0xFDE
  5487                           postdec2	equ	0xFDD
  5488                           plusw2	equ	0xFDB
  5489                           fsr2h	equ	0xFDA
  5490                           fsr2l	equ	0xFD9
  5491                           status	equ	0xFD8
  5492                           
  5493 ;; *************** function _sensors_i2c_async_write_bytes *****************
  5494 ;; Defined at:
  5495 ;;		line 380 in file "/Users/zangel/microchip/mla/v2014_07_22/framework/usb/sensors.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;  da              1    wreg     unsigned char 
  5498 ;;  ra              1    1[COMRAM] unsigned char 
  5499 ;;  len             1    2[COMRAM] unsigned char 
  5500 ;;  data            1    3[COMRAM] PTR const unsigned char 
  5501 ;;		 -> sensors_i2c_async_rw_completed@AMI304_read_request(1), sensors_i2c_async_rw_completed@MPL3115A2_read_request(1), 
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;  da              1    4[COMRAM] unsigned char 
  5504 ;; Return value:  Size  Location     Type
  5505 ;;		None               void
  5506 ;; Registers used:
  5507 ;;		wreg, status,2, status,0
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5513 ;;      Params:         3       0       0       0       0       0       0       0       0
  5514 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5515 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5516 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5517 ;;Total ram usage:        4 bytes
  5518 ;; Hardware stack levels used:    1
  5519 ;; This function calls:
  5520 ;;		Nothing
  5521 ;; This function is called by:
  5522 ;;		_sensors_i2c_async_rw_completed
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text32
  5527  0062E0                     __ptext32:
  5528                           	opt stack 0
  5529  0062E0                     _sensors_i2c_async_write_bytes:
  5530                           	opt stack 18
  5531                           
  5532                           ;incstack = 0
  5533                           ;incstack = 0
  5534                           ;sensors_i2c_async_write_bytes@da stored from wreg
  5535  0062E0  CFE8 F02C          	movff	wreg,sensors_i2c_async_write_bytes@da
  5536                           
  5537                           ;sensors.c: 381: if(sensors_i2c_async_rw_state) return;
  5538  0062E4  501F               	movf	_sensors_i2c_async_rw_state,w,c
  5539  0062E6  E114               	bnz	i2l815
  5540                           
  5541                           ;sensors.c: 382: sensors_i2c_async_rw_operation = SENSORS_I2C_ASYNC_RW_OP_WRITE;
  5542  0062E8  0E01               	movlw	1
  5543  0062EA  6E1D               	movwf	_sensors_i2c_async_rw_operation,c
  5544                           
  5545                           ;sensors.c: 383: sensors_i2c_async_rw_device_address = da;
  5546  0062EC  C02C  F01C         	movff	sensors_i2c_async_write_bytes@da,_sensors_i2c_async_rw_device_address
  5547                           
  5548                           ;sensors.c: 384: sensors_i2c_async_rw_register_address = ra;
  5549  0062F0  C029  F01E         	movff	sensors_i2c_async_write_bytes@ra,_sensors_i2c_async_rw_register_address
  5550                           
  5551                           ;sensors.c: 385: sensors_i2c_async_rw_buffer = (uint8_t*)data;
  5552  0062F4  C02B  F00B         	movff	sensors_i2c_async_write_bytes@data,_sensors_i2c_async_rw_buffer
  5553  0062F8  0E0F               	movlw	15
  5554  0062FA  6E0C               	movwf	_sensors_i2c_async_rw_buffer+1,c
  5555  0062FC  0E5F               	movlw	__accesstop+-1
  5556  0062FE  640B               	cpfsgt	_sensors_i2c_async_rw_buffer,c
  5557  006300  6A0C               	clrf	_sensors_i2c_async_rw_buffer+1,c
  5558                           
  5559                           ;sensors.c: 386: sensors_i2c_async_rw_buffer_size = len;
  5560  006302  C02A  F01B         	movff	sensors_i2c_async_write_bytes@len,_sensors_i2c_async_rw_buffer_size
  5561                           
  5562                           ;sensors.c: 388: sensors_i2c_async_rw_error = SENSORS_I2C_ASYNC_RW_ERROR_NO;
  5563  006306  6A1A               	clrf	_sensors_i2c_async_rw_buffer_progress,c
  5564                           
  5565                           ;sensors.c: 389: sensors_i2c_async_rw_state = SENSORS_I2C_ASYNC_RW_START_SENT;
  5566  006308  0E01               	movlw	1
  5567  00630A  6E1F               	movwf	_sensors_i2c_async_rw_state,c
  5568                           
  5569                           ;sensors.c: 390: SSPCON1bits.WCOL = 0;
  5570  00630C  9EC6               	bcf	4038,7,c	;volatile
  5571                           
  5572                           ;sensors.c: 391: SSPCON2bits.SEN = 1;
  5573  00630E  80C5               	bsf	4037,0,c	;volatile
  5574  006310                     i2l815:
  5575  006310  0012               	return	
  5576  006312                     __end_of_sensors_i2c_async_write_bytes:
  5577                           	opt stack 0
  5578                           pclatu	equ	0xFFB
  5579                           pclath	equ	0xFFA
  5580                           tblptru	equ	0xFF8
  5581                           tblptrh	equ	0xFF7
  5582                           tblptrl	equ	0xFF6
  5583                           tablat	equ	0xFF5
  5584                           prodh	equ	0xFF4
  5585                           prodl	equ	0xFF3
  5586                           intcon	equ	0xFF2
  5587                           intcon2	equ	0xFF1
  5588                           intcon3	equ	0xFF0
  5589                           postinc0	equ	0xFEE
  5590                           fsr0h	equ	0xFEA
  5591                           fsr0l	equ	0xFE9
  5592                           wreg	equ	0xFE8
  5593                           indf1	equ	0xFE7
  5594                           fsr1h	equ	0xFE2
  5595                           fsr1l	equ	0xFE1
  5596                           bsr	equ	0xFE0
  5597                           indf2	equ	0xFDF
  5598                           postinc2	equ	0xFDE
  5599                           postdec2	equ	0xFDD
  5600                           plusw2	equ	0xFDB
  5601                           fsr2h	equ	0xFDA
  5602                           fsr2l	equ	0xFD9
  5603                           status	equ	0xFD8
  5604                           
  5605 ;; *************** function _sensors_measurement_tasks *****************
  5606 ;; Defined at:
  5607 ;;		line 301 in file "/Users/zangel/microchip/mla/v2014_07_22/framework/usb/sensors.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;		None
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;		None
  5612 ;; Return value:  Size  Location     Type
  5613 ;;		None               void
  5614 ;; Registers used:
  5615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  5616 ;; Tracked objects:
  5617 ;;		On entry : 0/0
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5621 ;;      Params:         0       0       0       0       0       0       0       0       0
  5622 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5623 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5624 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5625 ;;Total ram usage:        0 bytes
  5626 ;; Hardware stack levels used:    1
  5627 ;; Hardware stack levels required when called:    2
  5628 ;; This function calls:
  5629 ;;		_sensors_measurement_read_async
  5630 ;; This function is called by:
  5631 ;;		_sensors_isr
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635                           	psect	text33
  5636  0060B8                     __ptext33:
  5637                           	opt stack 0
  5638  0060B8                     _sensors_measurement_tasks:
  5639                           	opt stack 18
  5640                           
  5641                           ;sensors.c: 302: if(!sensors_measurement_started) return;
  5642                           
  5643                           ;incstack = 0
  5644                           ;incstack = 0
  5645  0060B8  6622               	tstfsz	_sensors_measurement_started,c	;volatile
  5646  0060BA  D001               	goto	i2l4415
  5647  0060BC  D002               	goto	i2l768
  5648  0060BE                     i2l4415:
  5649                           
  5650                           ;sensors.c: 303: sensors_measurement_read_async();
  5651  0060BE  EC2A  F031         	call	_sensors_measurement_read_async	;wreg free
  5652  0060C2                     i2l768:
  5653  0060C2  0012               	return	
  5654  0060C4                     __end_of_sensors_measurement_tasks:
  5655                           	opt stack 0
  5656                           pclatu	equ	0xFFB
  5657                           pclath	equ	0xFFA
  5658                           tblptru	equ	0xFF8
  5659                           tblptrh	equ	0xFF7
  5660                           tblptrl	equ	0xFF6
  5661                           tablat	equ	0xFF5
  5662                           prodh	equ	0xFF4
  5663                           prodl	equ	0xFF3
  5664                           intcon	equ	0xFF2
  5665                           intcon2	equ	0xFF1
  5666                           intcon3	equ	0xFF0
  5667                           postinc0	equ	0xFEE
  5668                           fsr0h	equ	0xFEA
  5669                           fsr0l	equ	0xFE9
  5670                           wreg	equ	0xFE8
  5671                           indf1	equ	0xFE7
  5672                           fsr1h	equ	0xFE2
  5673                           fsr1l	equ	0xFE1
  5674                           bsr	equ	0xFE0
  5675                           indf2	equ	0xFDF
  5676                           postinc2	equ	0xFDE
  5677                           postdec2	equ	0xFDD
  5678                           plusw2	equ	0xFDB
  5679                           fsr2h	equ	0xFDA
  5680                           fsr2l	equ	0xFD9
  5681                           status	equ	0xFD8
  5682                           
  5683 ;; *************** function _sensors_measurement_read_async *****************
  5684 ;; Defined at:
  5685 ;;		line 290 in file "/Users/zangel/microchip/mla/v2014_07_22/framework/usb/sensors.c"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;		None
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;		None
  5690 ;; Return value:  Size  Location     Type
  5691 ;;		None               void
  5692 ;; Registers used:
  5693 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5699 ;;      Params:         0       0       0       0       0       0       0       0       0
  5700 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5701 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5702 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5703 ;;Total ram usage:        0 bytes
  5704 ;; Hardware stack levels used:    1
  5705 ;; Hardware stack levels required when called:    1
  5706 ;; This function calls:
  5707 ;;		_sensors_i2c_async_read_bytes
  5708 ;; This function is called by:
  5709 ;;		_sensors_measurement_tasks
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           
  5713                           	psect	text34
  5714  006254                     __ptext34:
  5715                           	opt stack 0
  5716  006254                     _sensors_measurement_read_async:
  5717                           	opt stack 18
  5718                           
  5719                           ;sensors.c: 291: if(sensors_measurement_buffers_ready)
  5720                           
  5721                           ;incstack = 0
  5722                           ;incstack = 0
  5723  006254  0100               	movlb	0	; () banked
  5724  006256  5180               	movf	_sensors_measurement_buffers_ready& (0+255),w,b	;volatile
  5725  006258  E003               	bz	i2l4497
  5726                           
  5727                           ; BSR set to: 0
  5728                           ;sensors.c: 292: sensors_measurement_read_buffer = sensors_measurement_buffers[(sensors_
      +                          measurement_buffers_current+1) & 0x01];
  5729  00625A  297F               	incf	_sensors_measurement_buffers_current& (0+255),w,b	;volatile
  5730  00625C  0B01               	andlw	1
  5731  00625E  D001               	goto	L11
  5732  006260                     i2l4497:
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;sensors.c: 293: else
  5736                           ;sensors.c: 294: sensors_measurement_read_buffer = sensors_measurement_buffers[sensors_m
      +                          easurement_buffers_current];
  5737  006260  517F               	movf	_sensors_measurement_buffers_current& (0+255),w,b
  5738  006262                     L11:
  5739  006262  0D19               	mullw	25
  5740  006264  50F3               	movf	prodl,w,c
  5741  006266  0F81               	addlw	low _sensors_measurement_buffers
  5742  006268  6E20               	movwf	_sensors_measurement_read_buffer,c
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;sensors.c: 296: sensors_measurement_read_state = SENSORS_MEASUEREMENT_MPU6K_READ;
  5746  00626A  0E01               	movlw	1
  5747  00626C  6E21               	movwf	_sensors_measurement_read_state,c
  5748                           
  5749                           ; BSR set to: 0
  5750                           ;sensors.c: 297: sensors_i2c_async_read_bytes(0xD2, 0x3B, 14, sensors_measurement_read_b
      +                          uffer);
  5751  00626E  0E3B               	movlw	59
  5752  006270  6E29               	movwf	?_sensors_i2c_async_read_bytes,c
  5753  006272  0E0E               	movlw	14
  5754  006274  6E2A               	movwf	?_sensors_i2c_async_read_bytes+1,c
  5755  006276  C020  F02B         	movff	_sensors_measurement_read_buffer,?_sensors_i2c_async_read_bytes+2
  5756  00627A  0ED2               	movlw	210
  5757  00627C  EFEB  F030         	goto	_sensors_i2c_async_read_bytes
  5758  006280                     __end_of_sensors_measurement_read_async:
  5759                           	opt stack 0
  5760                           pclatu	equ	0xFFB
  5761                           pclath	equ	0xFFA
  5762                           tblptru	equ	0xFF8
  5763                           tblptrh	equ	0xFF7
  5764                           tblptrl	equ	0xFF6
  5765                           tablat	equ	0xFF5
  5766                           prodh	equ	0xFF4
  5767                           prodl	equ	0xFF3
  5768                           intcon	equ	0xFF2
  5769                           intcon2	equ	0xFF1
  5770                           intcon3	equ	0xFF0
  5771                           postinc0	equ	0xFEE
  5772                           fsr0h	equ	0xFEA
  5773                           fsr0l	equ	0xFE9
  5774                           wreg	equ	0xFE8
  5775                           indf1	equ	0xFE7
  5776                           fsr1h	equ	0xFE2
  5777                           fsr1l	equ	0xFE1
  5778                           bsr	equ	0xFE0
  5779                           indf2	equ	0xFDF
  5780                           postinc2	equ	0xFDE
  5781                           postdec2	equ	0xFDD
  5782                           plusw2	equ	0xFDB
  5783                           fsr2h	equ	0xFDA
  5784                           fsr2l	equ	0xFD9
  5785                           status	equ	0xFD8
  5786                           
  5787 ;; *************** function _sensors_i2c_async_read_bytes *****************
  5788 ;; Defined at:
  5789 ;;		line 365 in file "/Users/zangel/microchip/mla/v2014_07_22/framework/usb/sensors.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;  da              1    wreg     unsigned char 
  5792 ;;  ra              1    1[COMRAM] unsigned char 
  5793 ;;  len             1    2[COMRAM] unsigned char 
  5794 ;;  data            1    3[COMRAM] PTR unsigned char 
  5795 ;;		 -> sensors_measurement_buffers(50), NULL(0), 
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;  da              1    4[COMRAM] unsigned char 
  5798 ;; Return value:  Size  Location     Type
  5799 ;;		None               void
  5800 ;; Registers used:
  5801 ;;		wreg, status,2
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5807 ;;      Params:         3       0       0       0       0       0       0       0       0
  5808 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5810 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5811 ;;Total ram usage:        4 bytes
  5812 ;; Hardware stack levels used:    1
  5813 ;; This function calls:
  5814 ;;		Nothing
  5815 ;; This function is called by:
  5816 ;;		_sensors_measurement_read_async
  5817 ;;		_sensors_i2c_async_rw_completed
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821                           	psect	text35
  5822  0061D6                     __ptext35:
  5823                           	opt stack 0
  5824  0061D6                     _sensors_i2c_async_read_bytes:
  5825                           	opt stack 18
  5826                           
  5827                           ;incstack = 0
  5828                           ;incstack = 0
  5829                           ;sensors_i2c_async_read_bytes@da stored from wreg
  5830  0061D6  CFE8 F02C          	movff	wreg,sensors_i2c_async_read_bytes@da
  5831                           
  5832                           ;sensors.c: 366: if(sensors_i2c_async_rw_state) return;
  5833  0061DA  501F               	movf	_sensors_i2c_async_rw_state,w,c
  5834  0061DC  E10F               	bnz	i2l811
  5835                           
  5836                           ;sensors.c: 367: sensors_i2c_async_rw_operation = SENSORS_I2C_ASYNC_RW_OP_READ;
  5837  0061DE  6A1D               	clrf	_sensors_i2c_async_rw_operation,c
  5838                           
  5839                           ;sensors.c: 368: sensors_i2c_async_rw_device_address = da;
  5840  0061E0  C02C  F01C         	movff	sensors_i2c_async_read_bytes@da,_sensors_i2c_async_rw_device_address
  5841                           
  5842                           ;sensors.c: 369: sensors_i2c_async_rw_register_address = ra;
  5843  0061E4  C029  F01E         	movff	sensors_i2c_async_read_bytes@ra,_sensors_i2c_async_rw_register_address
  5844                           
  5845                           ;sensors.c: 370: sensors_i2c_async_rw_buffer = data;
  5846  0061E8  C02B  F00B         	movff	sensors_i2c_async_read_bytes@data,_sensors_i2c_async_rw_buffer
  5847  0061EC  6A0C               	clrf	_sensors_i2c_async_rw_buffer+1,c
  5848                           
  5849                           ;sensors.c: 371: sensors_i2c_async_rw_buffer_size = len;
  5850  0061EE  C02A  F01B         	movff	sensors_i2c_async_read_bytes@len,_sensors_i2c_async_rw_buffer_size
  5851                           
  5852                           ;sensors.c: 373: sensors_i2c_async_rw_error = SENSORS_I2C_ASYNC_RW_ERROR_NO;
  5853  0061F2  6A1A               	clrf	_sensors_i2c_async_rw_buffer_progress,c
  5854                           
  5855                           ;sensors.c: 374: sensors_i2c_async_rw_state = SENSORS_I2C_ASYNC_RW_START_SENT;
  5856  0061F4  0E01               	movlw	1
  5857  0061F6  6E1F               	movwf	_sensors_i2c_async_rw_state,c
  5858                           
  5859                           ;sensors.c: 375: SSPCON1bits.WCOL = 0;
  5860  0061F8  9EC6               	bcf	4038,7,c	;volatile
  5861                           
  5862                           ;sensors.c: 376: SSPCON2bits.SEN = 1;
  5863  0061FA  80C5               	bsf	4037,0,c	;volatile
  5864  0061FC                     i2l811:
  5865  0061FC  0012               	return	
  5866  0061FE                     __end_of_sensors_i2c_async_read_bytes:
  5867                           	opt stack 0
  5868                           pclatu	equ	0xFFB
  5869                           pclath	equ	0xFFA
  5870                           tblptru	equ	0xFF8
  5871                           tblptrh	equ	0xFF7
  5872                           tblptrl	equ	0xFF6
  5873                           tablat	equ	0xFF5
  5874                           prodh	equ	0xFF4
  5875                           prodl	equ	0xFF3
  5876                           intcon	equ	0xFF2
  5877                           intcon2	equ	0xFF1
  5878                           intcon3	equ	0xFF0
  5879                           postinc0	equ	0xFEE
  5880                           fsr0h	equ	0xFEA
  5881                           fsr0l	equ	0xFE9
  5882                           wreg	equ	0xFE8
  5883                           indf1	equ	0xFE7
  5884                           fsr1h	equ	0xFE2
  5885                           fsr1l	equ	0xFE1
  5886                           bsr	equ	0xFE0
  5887                           indf2	equ	0xFDF
  5888                           postinc2	equ	0xFDE
  5889                           postdec2	equ	0xFDD
  5890                           plusw2	equ	0xFDB
  5891                           fsr2h	equ	0xFDA
  5892                           fsr2l	equ	0xFD9
  5893                           status	equ	0xFD8
  5894                           
  5895 ;; *************** function _motors_isr *****************
  5896 ;; Defined at:
  5897 ;;		line 226 in file "motors.c"
  5898 ;; Parameters:    Size  Location     Type
  5899 ;;		None
  5900 ;; Auto vars:     Size  Location     Type
  5901 ;;  motor_pwm_bi    1    3[COMRAM] unsigned char 
  5902 ;; Return value:  Size  Location     Type
  5903 ;;		None               void
  5904 ;; Registers used:
  5905 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5906 ;; Tracked objects:
  5907 ;;		On entry : 0/0
  5908 ;;		On exit  : 0/0
  5909 ;;		Unchanged: 0/0
  5910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5911 ;;      Params:         0       0       0       0       0       0       0       0       0
  5912 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5913 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5914 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5915 ;;Total ram usage:        3 bytes
  5916 ;; Hardware stack levels used:    1
  5917 ;; This function calls:
  5918 ;;		Nothing
  5919 ;; This function is called by:
  5920 ;;		_app_isr
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           	psect	text36
  5925  0065AA                     __ptext36:
  5926                           	opt stack 0
  5927  0065AA                     _motors_isr:
  5928                           	opt stack 21
  5929                           
  5930                           ;motors.c: 227: if(INTCONbits.TMR0IF)
  5931                           
  5932                           ;incstack = 0
  5933                           ;incstack = 0
  5934  0065AA  A4F2               	btfss	intcon,2,c	;volatile
  5935  0065AC  D027               	goto	i2l643
  5936                           
  5937                           ;motors.c: 228: {
  5938                           ;motors.c: 229: INTCONbits.TMR0IF = 0;
  5939  0065AE  94F2               	bcf	intcon,2,c	;volatile
  5940                           
  5941                           ;motors.c: 230: {
  5942                           ;motors.c: 231: uint8_t motor_pwm_bit = (1 << (motors_current << 1));
  5943  0065B0  90D8               	bcf	status,0,c
  5944  0065B2  3427               	rlcf	_motors_current,w,c
  5945  0065B4  6E29               	movwf	??_motors_isr& (0+255),c
  5946  0065B6  0E01               	movlw	1
  5947  0065B8  6E2A               	movwf	(??_motors_isr+1)& (0+255),c
  5948  0065BA  2A29               	incf	??_motors_isr,f,c
  5949  0065BC  D002               	goto	i2u142_44
  5950  0065BE                     i2u142_45:
  5951  0065BE  90D8               	bcf	status,0,c
  5952  0065C0  362A               	rlcf	??_motors_isr+1,f,c
  5953  0065C2                     i2u142_44:
  5954  0065C2  2E29               	decfsz	??_motors_isr,f,c
  5955  0065C4  D7FC               	goto	i2u142_45
  5956  0065C6  502A               	movf	??_motors_isr+1,w,c
  5957  0065C8  6E2B               	movwf	motors_isr@motor_pwm_bit,c
  5958                           
  5959                           ;motors.c: 233: if(motors_current_off_duration)
  5960  0065CA  5019               	movf	_motors_current_off_duration,w,c
  5961  0065CC  E009               	bz	i2l2703
  5962                           
  5963                           ;motors.c: 234: {
  5964                           ;motors.c: 235: LATD &= ~motor_pwm_bit;
  5965  0065CE  1C2B               	comf	motors_isr@motor_pwm_bit,w,c
  5966  0065D0  168C               	andwf	3980,f,c	;volatile
  5967                           
  5968                           ;motors.c: 237: TMR0L = motors_current_off_duration;
  5969  0065D2  C019  FFD6         	movff	_motors_current_off_duration,4054	;volatile
  5970                           
  5971                           ;motors.c: 238: motors_current_off_duration = 0;
  5972  0065D6  6A19               	clrf	_motors_current_off_duration,c
  5973                           
  5974                           ;motors.c: 240: motors_current ++;
  5975  0065D8  2A27               	incf	_motors_current,f,c
  5976                           
  5977                           ;motors.c: 241: motors_current &= 0x03;
  5978  0065DA  0E03               	movlw	3
  5979  0065DC  1627               	andwf	_motors_current,f,c
  5980                           
  5981                           ;motors.c: 242: }
  5982  0065DE  D00E               	goto	i2l643
  5983  0065E0                     i2l2703:
  5984                           
  5985                           ;motors.c: 243: else
  5986                           ;motors.c: 244: {
  5987                           ;motors.c: 245: LATD |= (motor_pwm_bit & motors_pwm_on_bits);
  5988  0065E0  502B               	movf	motors_isr@motor_pwm_bit,w,c
  5989  0065E2  1450               	andwf	_motors_pwm_on_bits,w,c	;volatile
  5990  0065E4  128C               	iorwf	3980,f,c	;volatile
  5991                           
  5992                           ;motors.c: 247: motors_current_off_duration = motors_pwm[motors_current];
  5993  0065E6  5027               	movf	_motors_current,w,c
  5994  0065E8  0F01               	addlw	low _motors_pwm	;volatile
  5995  0065EA  6ED9               	movwf	fsr2l,c
  5996  0065EC  6ADA               	clrf	fsr2h,c
  5997  0065EE  50DF               	movf	indf2,w,c
  5998  0065F0  6E19               	movwf	_motors_current_off_duration,c
  5999                           
  6000                           ;motors.c: 248: TMR0L = (255 - 94) - motors_current_off_duration;
  6001  0065F2  5019               	movf	_motors_current_off_duration,w,c
  6002  0065F4  08A1               	sublw	161
  6003  0065F6  6ED6               	movwf	4054,c	;volatile
  6004                           
  6005                           ;motors.c: 249: motors_current_off_duration = 255 - (94 - motors_current_off_duration);
  6006  0065F8  0EA1               	movlw	161
  6007  0065FA  2619               	addwf	_motors_current_off_duration,f,c
  6008  0065FC                     i2l643:
  6009  0065FC  0012               	return	
  6010  0065FE                     __end_of_motors_isr:
  6011                           	opt stack 0
  6012                           pclatu	equ	0xFFB
  6013                           pclath	equ	0xFFA
  6014                           tblptru	equ	0xFF8
  6015                           tblptrh	equ	0xFF7
  6016                           tblptrl	equ	0xFF6
  6017                           tablat	equ	0xFF5
  6018                           prodh	equ	0xFF4
  6019                           prodl	equ	0xFF3
  6020                           intcon	equ	0xFF2
  6021                           intcon2	equ	0xFF1
  6022                           intcon3	equ	0xFF0
  6023                           postinc0	equ	0xFEE
  6024                           fsr0h	equ	0xFEA
  6025                           fsr0l	equ	0xFE9
  6026                           wreg	equ	0xFE8
  6027                           indf1	equ	0xFE7
  6028                           fsr1h	equ	0xFE2
  6029                           fsr1l	equ	0xFE1
  6030                           bsr	equ	0xFE0
  6031                           indf2	equ	0xFDF
  6032                           postinc2	equ	0xFDE
  6033                           postdec2	equ	0xFDD
  6034                           plusw2	equ	0xFDB
  6035                           fsr2h	equ	0xFDA
  6036                           fsr2l	equ	0xFD9
  6037                           status	equ	0xFD8
  6038                           
  6039 ;; *************** function _leds_isr *****************
  6040 ;; Defined at:
  6041 ;;		line 101 in file "leds.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;		None
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;  pat_flag        4   10[COMRAM] unsigned long 
  6046 ;; Return value:  Size  Location     Type
  6047 ;;		None               void
  6048 ;; Registers used:
  6049 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6055 ;;      Params:         0       0       0       0       0       0       0       0       0
  6056 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6057 ;;      Temps:          9       0       0       0       0       0       0       0       0
  6058 ;;      Totals:        13       0       0       0       0       0       0       0       0
  6059 ;;Total ram usage:       13 bytes
  6060 ;; Hardware stack levels used:    1
  6061 ;; This function calls:
  6062 ;;		Nothing
  6063 ;; This function is called by:
  6064 ;;		_app_isr
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           	psect	text37
  6069  007928                     __ptext37:
  6070                           	opt stack 0
  6071  007928                     _leds_isr:
  6072                           	opt stack 21
  6073                           
  6074                           ;leds.c: 102: uint32_t pat_flag = 1;
  6075                           
  6076                           ;incstack = 0
  6077                           ;incstack = 0
  6078  007928  0E01               	movlw	1
  6079  00792A  6E32               	movwf	leds_isr@pat_flag,c
  6080  00792C  0E00               	movlw	0
  6081  00792E  6E33               	movwf	leds_isr@pat_flag+1,c
  6082  007930  6E34               	movwf	leds_isr@pat_flag+2,c
  6083  007932  6E35               	movwf	leds_isr@pat_flag+3,c
  6084                           
  6085                           ;leds.c: 103: if(PIR1bits.TMR1IF)
  6086  007934  A09E               	btfss	3998,0,c	;volatile
  6087  007936  D0DD               	goto	i2l603
  6088                           
  6089                           ;leds.c: 104: {
  6090                           ;leds.c: 105: PIR1bits.TMR1IF = 0;
  6091  007938  909E               	bcf	3998,0,c	;volatile
  6092                           
  6093                           ;leds.c: 107: leds_counter++;
  6094  00793A  2A17               	incf	_leds_counter,f,c
  6095                           
  6096                           ;leds.c: 109: pat_flag <<= (leds_counter & 0b00011111);
  6097  00793C  C017  F029         	movff	_leds_counter,??_leds_isr
  6098  007940  0E1F               	movlw	31
  6099  007942  1629               	andwf	??_leds_isr,f,c
  6100  007944  2829               	incf	??_leds_isr,w,c
  6101  007946  D005               	goto	i2u335_40
  6102  007948                     i2u335_45:
  6103  007948  90D8               	bcf	status,0,c
  6104  00794A  3632               	rlcf	leds_isr@pat_flag,f,c
  6105  00794C  3633               	rlcf	leds_isr@pat_flag+1,f,c
  6106  00794E  3634               	rlcf	leds_isr@pat_flag+2,f,c
  6107  007950  3635               	rlcf	leds_isr@pat_flag+3,f,c
  6108  007952                     i2u335_40:
  6109  007952  2EE8               	decfsz	wreg,f,c
  6110  007954  D7F9               	goto	i2u335_45
  6111                           
  6112                           ;leds.c: 111: if(leds_status_patterns[leds_status_led_mode.mode] & pat_flag)
  6113  007956  5018               	movf	_leds_status_led_mode,w,c
  6114  007958  0D04               	mullw	4
  6115  00795A  50F3               	movf	prodl,w,c
  6116  00795C  0F5A               	addlw	low _leds_status_patterns
  6117  00795E  6E29               	movwf	??_leds_isr& (0+255),c
  6118  007960  C029  FFF6         	movff	??_leds_isr,tblptrl
  6119  007964  0E10               	movlw	high __smallconst
  6120  007966  6EF7               	movwf	tblptrh,c
  6121  007968  0009               	tblrd		*+
  6122  00796A  CFF5 F02A          	movff	tablat,??_leds_isr+1
  6123  00796E  0009               	tblrd		*+
  6124  007970  CFF5 F02B          	movff	tablat,??_leds_isr+2
  6125  007974  0009               	tblrd		*+
  6126  007976  CFF5 F02C          	movff	tablat,??_leds_isr+3
  6127  00797A  0009               	tblrd		*+
  6128  00797C  CFF5 F02D          	movff	tablat,??_leds_isr+4
  6129  007980  5032               	movf	leds_isr@pat_flag,w,c
  6130  007982  142A               	andwf	??_leds_isr+1,w,c
  6131  007984  6E2E               	movwf	(??_leds_isr+5)& (0+255),c
  6132  007986  5033               	movf	leds_isr@pat_flag+1,w,c
  6133  007988  142B               	andwf	??_leds_isr+2,w,c
  6134  00798A  6E2F               	movwf	(??_leds_isr+6)& (0+255),c
  6135  00798C  5034               	movf	leds_isr@pat_flag+2,w,c
  6136  00798E  142C               	andwf	??_leds_isr+3,w,c
  6137  007990  6E30               	movwf	(??_leds_isr+7)& (0+255),c
  6138  007992  5035               	movf	leds_isr@pat_flag+3,w,c
  6139  007994  142D               	andwf	??_leds_isr+4,w,c
  6140  007996  6E31               	movwf	(??_leds_isr+8)& (0+255),c
  6141  007998  5031               	movf	??_leds_isr+8,w,c
  6142  00799A  102E               	iorwf	??_leds_isr+5,w,c
  6143  00799C  102F               	iorwf	??_leds_isr+6,w,c
  6144  00799E  1030               	iorwf	??_leds_isr+7,w,c
  6145  0079A0  E002               	bz	i2l593
  6146                           
  6147                           ;leds.c: 112: LATEbits.LATE0 = 1;
  6148  0079A2  808D               	bsf	3981,0,c	;volatile
  6149  0079A4  D001               	goto	i2l4365
  6150  0079A6                     i2l593:
  6151                           
  6152                           ;leds.c: 113: else
  6153                           ;leds.c: 114: LATEbits.LATE0 = 0;
  6154  0079A6  908D               	bcf	3981,0,c	;volatile
  6155  0079A8                     i2l4365:
  6156                           
  6157                           ;leds.c: 116: if(leds_quad_patterns[leds_led0_mode] & pat_flag)
  6158  0079A8  504E               	movf	_leds_led0_mode,w,c
  6159  0079AA  0D04               	mullw	4
  6160  0079AC  50F3               	movf	prodl,w,c
  6161  0079AE  0F26               	addlw	low _leds_quad_patterns
  6162  0079B0  6E29               	movwf	??_leds_isr& (0+255),c
  6163  0079B2  C029  FFF6         	movff	??_leds_isr,tblptrl
  6164  0079B6  0E10               	movlw	high __smallconst
  6165  0079B8  6EF7               	movwf	tblptrh,c
  6166  0079BA  0009               	tblrd		*+
  6167  0079BC  CFF5 F02A          	movff	tablat,??_leds_isr+1
  6168  0079C0  0009               	tblrd		*+
  6169  0079C2  CFF5 F02B          	movff	tablat,??_leds_isr+2
  6170  0079C6  0009               	tblrd		*+
  6171  0079C8  CFF5 F02C          	movff	tablat,??_leds_isr+3
  6172  0079CC  0009               	tblrd		*+
  6173  0079CE  CFF5 F02D          	movff	tablat,??_leds_isr+4
  6174  0079D2  5032               	movf	leds_isr@pat_flag,w,c
  6175  0079D4  142A               	andwf	??_leds_isr+1,w,c
  6176  0079D6  6E2E               	movwf	(??_leds_isr+5)& (0+255),c
  6177  0079D8  5033               	movf	leds_isr@pat_flag+1,w,c
  6178  0079DA  142B               	andwf	??_leds_isr+2,w,c
  6179  0079DC  6E2F               	movwf	(??_leds_isr+6)& (0+255),c
  6180  0079DE  5034               	movf	leds_isr@pat_flag+2,w,c
  6181  0079E0  142C               	andwf	??_leds_isr+3,w,c
  6182  0079E2  6E30               	movwf	(??_leds_isr+7)& (0+255),c
  6183  0079E4  5035               	movf	leds_isr@pat_flag+3,w,c
  6184  0079E6  142D               	andwf	??_leds_isr+4,w,c
  6185  0079E8  6E31               	movwf	(??_leds_isr+8)& (0+255),c
  6186  0079EA  5031               	movf	??_leds_isr+8,w,c
  6187  0079EC  102E               	iorwf	??_leds_isr+5,w,c
  6188  0079EE  102F               	iorwf	??_leds_isr+6,w,c
  6189  0079F0  1030               	iorwf	??_leds_isr+7,w,c
  6190  0079F2  E002               	bz	i2l595
  6191                           
  6192                           ;leds.c: 117: LATDbits.LATD3 = 1;
  6193  0079F4  868C               	bsf	3980,3,c	;volatile
  6194  0079F6  D001               	goto	i2l4369
  6195  0079F8                     i2l595:
  6196                           
  6197                           ;leds.c: 118: else
  6198                           ;leds.c: 119: LATDbits.LATD3 = 0;
  6199  0079F8  968C               	bcf	3980,3,c	;volatile
  6200  0079FA                     i2l4369:
  6201                           
  6202                           ;leds.c: 121: if(leds_quad_patterns[leds_led1_mode] & pat_flag)
  6203  0079FA  504F               	movf	_leds_led1_mode,w,c
  6204  0079FC  0D04               	mullw	4
  6205  0079FE  50F3               	movf	prodl,w,c
  6206  007A00  0F26               	addlw	low _leds_quad_patterns
  6207  007A02  6E29               	movwf	??_leds_isr& (0+255),c
  6208  007A04  C029  FFF6         	movff	??_leds_isr,tblptrl
  6209  007A08  0E10               	movlw	high __smallconst
  6210  007A0A  6EF7               	movwf	tblptrh,c
  6211  007A0C  0009               	tblrd		*+
  6212  007A0E  CFF5 F02A          	movff	tablat,??_leds_isr+1
  6213  007A12  0009               	tblrd		*+
  6214  007A14  CFF5 F02B          	movff	tablat,??_leds_isr+2
  6215  007A18  0009               	tblrd		*+
  6216  007A1A  CFF5 F02C          	movff	tablat,??_leds_isr+3
  6217  007A1E  0009               	tblrd		*+
  6218  007A20  CFF5 F02D          	movff	tablat,??_leds_isr+4
  6219  007A24  5032               	movf	leds_isr@pat_flag,w,c
  6220  007A26  142A               	andwf	??_leds_isr+1,w,c
  6221  007A28  6E2E               	movwf	(??_leds_isr+5)& (0+255),c
  6222  007A2A  5033               	movf	leds_isr@pat_flag+1,w,c
  6223  007A2C  142B               	andwf	??_leds_isr+2,w,c
  6224  007A2E  6E2F               	movwf	(??_leds_isr+6)& (0+255),c
  6225  007A30  5034               	movf	leds_isr@pat_flag+2,w,c
  6226  007A32  142C               	andwf	??_leds_isr+3,w,c
  6227  007A34  6E30               	movwf	(??_leds_isr+7)& (0+255),c
  6228  007A36  5035               	movf	leds_isr@pat_flag+3,w,c
  6229  007A38  142D               	andwf	??_leds_isr+4,w,c
  6230  007A3A  6E31               	movwf	(??_leds_isr+8)& (0+255),c
  6231  007A3C  5031               	movf	??_leds_isr+8,w,c
  6232  007A3E  102E               	iorwf	??_leds_isr+5,w,c
  6233  007A40  102F               	iorwf	??_leds_isr+6,w,c
  6234  007A42  1030               	iorwf	??_leds_isr+7,w,c
  6235  007A44  E002               	bz	i2l597
  6236                           
  6237                           ;leds.c: 122: LATDbits.LATD5 = 1;
  6238  007A46  8A8C               	bsf	3980,5,c	;volatile
  6239  007A48  D001               	goto	i2l4373
  6240  007A4A                     i2l597:
  6241                           
  6242                           ;leds.c: 123: else
  6243                           ;leds.c: 124: LATDbits.LATD5 = 0;
  6244  007A4A  9A8C               	bcf	3980,5,c	;volatile
  6245  007A4C                     i2l4373:
  6246                           
  6247                           ;leds.c: 126: if(leds_quad_patterns[leds_led2_mode] & pat_flag)
  6248  007A4C  0100               	movlb	0	; () banked
  6249  007A4E  51D7               	movf	_leds_led2_mode& (0+255),w,b
  6250  007A50  0D04               	mullw	4
  6251  007A52  50F3               	movf	prodl,w,c
  6252  007A54  0F26               	addlw	low _leds_quad_patterns
  6253  007A56  6E29               	movwf	??_leds_isr& (0+255),c
  6254  007A58  C029  FFF6         	movff	??_leds_isr,tblptrl
  6255  007A5C  0E10               	movlw	high __smallconst
  6256  007A5E  6EF7               	movwf	tblptrh,c
  6257  007A60  0009               	tblrd		*+
  6258  007A62  CFF5 F02A          	movff	tablat,??_leds_isr+1
  6259  007A66  0009               	tblrd		*+
  6260  007A68  CFF5 F02B          	movff	tablat,??_leds_isr+2
  6261  007A6C  0009               	tblrd		*+
  6262  007A6E  CFF5 F02C          	movff	tablat,??_leds_isr+3
  6263  007A72  0009               	tblrd		*+
  6264  007A74  CFF5 F02D          	movff	tablat,??_leds_isr+4
  6265  007A78  5032               	movf	leds_isr@pat_flag,w,c
  6266  007A7A  142A               	andwf	??_leds_isr+1,w,c
  6267  007A7C  6E2E               	movwf	(??_leds_isr+5)& (0+255),c
  6268  007A7E  5033               	movf	leds_isr@pat_flag+1,w,c
  6269  007A80  142B               	andwf	??_leds_isr+2,w,c
  6270  007A82  6E2F               	movwf	(??_leds_isr+6)& (0+255),c
  6271  007A84  5034               	movf	leds_isr@pat_flag+2,w,c
  6272  007A86  142C               	andwf	??_leds_isr+3,w,c
  6273  007A88  6E30               	movwf	(??_leds_isr+7)& (0+255),c
  6274  007A8A  5035               	movf	leds_isr@pat_flag+3,w,c
  6275  007A8C  142D               	andwf	??_leds_isr+4,w,c
  6276  007A8E  6E31               	movwf	(??_leds_isr+8)& (0+255),c
  6277  007A90  5031               	movf	??_leds_isr+8,w,c
  6278  007A92  102E               	iorwf	??_leds_isr+5,w,c
  6279  007A94  102F               	iorwf	??_leds_isr+6,w,c
  6280  007A96  1030               	iorwf	??_leds_isr+7,w,c
  6281  007A98  E002               	bz	i2l599
  6282                           
  6283                           ; BSR set to: 0
  6284                           ;leds.c: 127: LATDbits.LATD7 = 1;
  6285  007A9A  8E8C               	bsf	3980,7,c	;volatile
  6286  007A9C  D001               	goto	i2l4377
  6287  007A9E                     i2l599:
  6288                           
  6289                           ; BSR set to: 0
  6290                           ;leds.c: 128: else
  6291                           ;leds.c: 129: LATDbits.LATD7 = 0;
  6292  007A9E  9E8C               	bcf	3980,7,c	;volatile
  6293  007AA0                     i2l4377:
  6294                           
  6295                           ; BSR set to: 0
  6296                           ;leds.c: 131: if(leds_quad_patterns[leds_led3_mode] & pat_flag)
  6297  007AA0  51D8               	movf	_leds_led3_mode& (0+255),w,b
  6298  007AA2  0D04               	mullw	4
  6299  007AA4  50F3               	movf	prodl,w,c
  6300  007AA6  0F26               	addlw	low _leds_quad_patterns
  6301  007AA8  6E29               	movwf	??_leds_isr& (0+255),c
  6302  007AAA  C029  FFF6         	movff	??_leds_isr,tblptrl
  6303  007AAE  0E10               	movlw	high __smallconst
  6304  007AB0  6EF7               	movwf	tblptrh,c
  6305  007AB2  0009               	tblrd		*+
  6306  007AB4  CFF5 F02A          	movff	tablat,??_leds_isr+1
  6307  007AB8  0009               	tblrd		*+
  6308  007ABA  CFF5 F02B          	movff	tablat,??_leds_isr+2
  6309  007ABE  0009               	tblrd		*+
  6310  007AC0  CFF5 F02C          	movff	tablat,??_leds_isr+3
  6311  007AC4  0009               	tblrd		*+
  6312  007AC6  CFF5 F02D          	movff	tablat,??_leds_isr+4
  6313  007ACA  5032               	movf	leds_isr@pat_flag,w,c
  6314  007ACC  142A               	andwf	??_leds_isr+1,w,c
  6315  007ACE  6E2E               	movwf	(??_leds_isr+5)& (0+255),c
  6316  007AD0  5033               	movf	leds_isr@pat_flag+1,w,c
  6317  007AD2  142B               	andwf	??_leds_isr+2,w,c
  6318  007AD4  6E2F               	movwf	(??_leds_isr+6)& (0+255),c
  6319  007AD6  5034               	movf	leds_isr@pat_flag+2,w,c
  6320  007AD8  142C               	andwf	??_leds_isr+3,w,c
  6321  007ADA  6E30               	movwf	(??_leds_isr+7)& (0+255),c
  6322  007ADC  5035               	movf	leds_isr@pat_flag+3,w,c
  6323  007ADE  142D               	andwf	??_leds_isr+4,w,c
  6324  007AE0  6E31               	movwf	(??_leds_isr+8)& (0+255),c
  6325  007AE2  5031               	movf	??_leds_isr+8,w,c
  6326  007AE4  102E               	iorwf	??_leds_isr+5,w,c
  6327  007AE6  102F               	iorwf	??_leds_isr+6,w,c
  6328  007AE8  1030               	iorwf	??_leds_isr+7,w,c
  6329  007AEA  E002               	bz	i2l601
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;leds.c: 132: LATDbits.LATD1 = 1;
  6333  007AEC  828C               	bsf	3980,1,c	;volatile
  6334  007AEE  D001               	goto	i2l603
  6335  007AF0                     i2l601:
  6336                           
  6337                           ; BSR set to: 0
  6338                           ;leds.c: 133: else
  6339                           ;leds.c: 134: LATDbits.LATD1 = 0;
  6340  007AF0  928C               	bcf	3980,1,c	;volatile
  6341  007AF2                     i2l603:
  6342  007AF2  0012               	return	
  6343  007AF4                     __end_of_leds_isr:
  6344                           	opt stack 0
  6345                           pclatu	equ	0xFFB
  6346                           pclath	equ	0xFFA
  6347                           tblptru	equ	0xFF8
  6348                           tblptrh	equ	0xFF7
  6349                           tblptrl	equ	0xFF6
  6350                           tablat	equ	0xFF5
  6351                           prodh	equ	0xFF4
  6352                           prodl	equ	0xFF3
  6353                           intcon	equ	0xFF2
  6354                           intcon2	equ	0xFF1
  6355                           intcon3	equ	0xFF0
  6356                           postinc0	equ	0xFEE
  6357                           fsr0h	equ	0xFEA
  6358                           fsr0l	equ	0xFE9
  6359                           wreg	equ	0xFE8
  6360                           indf1	equ	0xFE7
  6361                           fsr1h	equ	0xFE2
  6362                           fsr1l	equ	0xFE1
  6363                           bsr	equ	0xFE0
  6364                           indf2	equ	0xFDF
  6365                           postinc2	equ	0xFDE
  6366                           postdec2	equ	0xFDD
  6367                           plusw2	equ	0xFDB
  6368                           fsr2h	equ	0xFDA
  6369                           fsr2l	equ	0xFD9
  6370                           status	equ	0xFD8
  6371                           
  6372 ;; *************** function _comm_isr *****************
  6373 ;; Defined at:
  6374 ;;		line 30 in file "comm.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;		None
  6377 ;; Auto vars:     Size  Location     Type
  6378 ;;		None
  6379 ;; Return value:  Size  Location     Type
  6380 ;;		None               void
  6381 ;; Registers used:
  6382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  6383 ;; Tracked objects:
  6384 ;;		On entry : 0/0
  6385 ;;		On exit  : 0/0
  6386 ;;		Unchanged: 0/0
  6387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6388 ;;      Params:         0       0       0       0       0       0       0       0       0
  6389 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6390 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6391 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6392 ;;Total ram usage:        0 bytes
  6393 ;; Hardware stack levels used:    1
  6394 ;; Hardware stack levels required when called:    9
  6395 ;; This function calls:
  6396 ;;		_USBDeviceTasks
  6397 ;; This function is called by:
  6398 ;;		_app_isr
  6399 ;; This function uses a non-reentrant model
  6400 ;;
  6401                           
  6402                           	psect	text38
  6403  0060AA                     __ptext38:
  6404                           	opt stack 0
  6405  0060AA                     _comm_isr:
  6406                           	opt stack 12
  6407                           
  6408                           ;comm.c: 31: USBDeviceTasks();
  6409                           
  6410                           ;incstack = 0
  6411                           ;incstack = 0
  6412  0060AA  EF40  F03B         	goto	_USBDeviceTasks	;wreg free
  6413  0060AE                     __end_of_comm_isr:
  6414                           	opt stack 0
  6415                           pclatu	equ	0xFFB
  6416                           pclath	equ	0xFFA
  6417                           tblptru	equ	0xFF8
  6418                           tblptrh	equ	0xFF7
  6419                           tblptrl	equ	0xFF6
  6420                           tablat	equ	0xFF5
  6421                           prodh	equ	0xFF4
  6422                           prodl	equ	0xFF3
  6423                           intcon	equ	0xFF2
  6424                           intcon2	equ	0xFF1
  6425                           intcon3	equ	0xFF0
  6426                           postinc0	equ	0xFEE
  6427                           fsr0h	equ	0xFEA
  6428                           fsr0l	equ	0xFE9
  6429                           wreg	equ	0xFE8
  6430                           indf1	equ	0xFE7
  6431                           fsr1h	equ	0xFE2
  6432                           fsr1l	equ	0xFE1
  6433                           bsr	equ	0xFE0
  6434                           indf2	equ	0xFDF
  6435                           postinc2	equ	0xFDE
  6436                           postdec2	equ	0xFDD
  6437                           plusw2	equ	0xFDB
  6438                           fsr2h	equ	0xFDA
  6439                           fsr2l	equ	0xFD9
  6440                           status	equ	0xFD8
  6441                           
  6442 ;; *************** function _USBDeviceTasks *****************
  6443 ;; Defined at:
  6444 ;;		line 490 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;		None
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  i               1   37[COMRAM] unsigned char 
  6449 ;; Return value:  Size  Location     Type
  6450 ;;		None               void
  6451 ;; Registers used:
  6452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6458 ;;      Params:         0       0       0       0       0       0       0       0       0
  6459 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6460 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6461 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6462 ;;Total ram usage:        2 bytes
  6463 ;; Hardware stack levels used:    1
  6464 ;; Hardware stack levels required when called:    8
  6465 ;; This function calls:
  6466 ;;		_USBWakeFromSuspend
  6467 ;;		_USBSuspend
  6468 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6469 ;;		_USBCtrlEPAllowStatusStage
  6470 ;;		_USBStallHandler
  6471 ;;		_USBCtrlEPService
  6472 ;;		i2_USBDeviceInit
  6473 ;; This function is called by:
  6474 ;;		_comm_isr
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477                           
  6478                           	psect	text39
  6479  007680                     __ptext39:
  6480                           	opt stack 0
  6481  007680                     _USBDeviceTasks:
  6482                           	opt stack 12
  6483                           
  6484                           ;usb_device.c: 491: uint8_t i;
  6485                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
  6486                           
  6487                           ;incstack = 0
  6488                           ;incstack = 0
  6489  007680  0412               	decf	_USBDeviceState,w,c	;volatile
  6490  007682  B4D8               	btfsc	status,2,c
  6491                           
  6492                           ;usb_device.c: 603: {
  6493                           ;usb_device.c: 613: if(!UCONbits.SE0)
  6494  007684  BA6D               	btfsc	3949,5,c	;volatile
  6495  007686  D005               	goto	i2l3329
  6496                           
  6497                           ;usb_device.c: 614: {
  6498                           ;usb_device.c: 615: {UIR = 0;};
  6499  007688  6A68               	clrf	3944,c	;volatile
  6500                           
  6501                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
  6502  00768A  8069               	bsf	3945,0,c	;volatile
  6503                           
  6504                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
  6505  00768C  8869               	bsf	3945,4,c	;volatile
  6506                           
  6507                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
  6508  00768E  0E02               	movlw	2
  6509  007690  6E12               	movwf	_USBDeviceState,c	;volatile
  6510  007692                     i2l3329:
  6511                           
  6512                           ;usb_device.c: 622: }
  6513                           ;usb_device.c: 623: }
  6514                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  6515  007692  B468               	btfsc	3944,2,c	;volatile
  6516  007694  A469               	btfss	3945,2,c	;volatile
  6517  007696  D003               	goto	i2l3337
  6518                           
  6519                           ;usb_device.c: 640: {
  6520                           ;usb_device.c: 641: (UIR &= 0xFB);
  6521  007698  9468               	bcf	3944,2,c	;volatile
  6522                           
  6523                           ;usb_device.c: 645: USBWakeFromSuspend();
  6524  00769A  ECD8  F030         	call	_USBWakeFromSuspend	;wreg free
  6525  00769E                     i2l3337:
  6526                           
  6527                           ;usb_device.c: 647: }
  6528                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
  6529  00769E  A26D               	btfss	3949,1,c	;volatile
  6530  0076A0  D002               	goto	i2l144
  6531  0076A2                     i2l3339:
  6532                           
  6533                           ;usb_device.c: 653: {
  6534                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
  6535  0076A2  9AA1               	bcf	4001,5,c	;volatile
  6536                           
  6537                           ;usb_device.c: 655: return;
  6538  0076A4  D079               	goto	i2l145
  6539  0076A6                     i2l144:
  6540                           
  6541                           ;usb_device.c: 656: }
  6542                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
  6543  0076A6  B068               	btfsc	3944,0,c	;volatile
  6544  0076A8  A069               	btfss	3945,0,c	;volatile
  6545  0076AA  D006               	goto	i2l3351
  6546                           
  6547                           ;usb_device.c: 669: {
  6548                           ;usb_device.c: 670: USBDeviceInit();
  6549  0076AC  ECC7  F038         	call	i2_USBDeviceInit	;wreg free
  6550                           
  6551                           ; BSR set to: 4
  6552                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
  6553  0076B0  8AA0               	bsf	4000,5,c	;volatile
  6554                           
  6555                           ; BSR set to: 4
  6556                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
  6557  0076B2  0E04               	movlw	4
  6558  0076B4  6E12               	movwf	_USBDeviceState,c	;volatile
  6559                           
  6560                           ; BSR set to: 4
  6561                           ;usb_device.c: 686: (UIR &= 0xFE);
  6562  0076B6  9068               	bcf	3944,0,c	;volatile
  6563  0076B8                     i2l3351:
  6564                           
  6565                           ;usb_device.c: 687: }
  6566                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  6567  0076B8  B868               	btfsc	3944,4,c	;volatile
  6568  0076BA  A869               	btfss	3945,4,c	;volatile
  6569  0076BC  D003               	goto	i2l3359
  6570                           
  6571                           ;usb_device.c: 693: {
  6572                           ;usb_device.c: 698: USBSuspend();
  6573  0076BE  ECC9  F030         	call	_USBSuspend	;wreg free
  6574                           
  6575                           ;usb_device.c: 701: (UIR &= 0xEF);
  6576  0076C2  9868               	bcf	3944,4,c	;volatile
  6577  0076C4                     i2l3359:
  6578                           
  6579                           ;usb_device.c: 702: }
  6580                           ;usb_device.c: 704: if(UIRbits.SOFIF)
  6581  0076C4  AC68               	btfss	3944,6,c	;volatile
  6582  0076C6  D014               	goto	i2l3375
  6583                           
  6584                           ;usb_device.c: 705: {
  6585                           ;usb_device.c: 706: if(UIEbits.SOFIE)
  6586  0076C8  AC69               	btfss	3945,6,c	;volatile
  6587  0076CA  D00A               	goto	i2l3365
  6588                           
  6589                           ;usb_device.c: 707: {
  6590                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  6591  0076CC  6A3A               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1,c
  6592  0076CE  0E73               	movlw	115
  6593  0076D0  6E39               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER,c
  6594  0076D2  6A3C               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3,c
  6595  0076D4  6A3B               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2,c
  6596  0076D6  6A3E               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+5,c
  6597  0076D8  0E01               	movlw	1
  6598  0076DA  6E3D               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4,c
  6599  0076DC  EC63  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6600  0076E0                     i2l3365:
  6601                           
  6602                           ;usb_device.c: 709: }
  6603                           ;usb_device.c: 710: (UIR &= 0xBF);
  6604  0076E0  9C68               	bcf	3944,6,c	;volatile
  6605                           
  6606                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  6607  0076E2  5013               	movf	_USBStatusStageTimeoutCounter,w,c
  6608  0076E4  A4D8               	btfss	status,2,c
  6609                           
  6610                           ;usb_device.c: 736: {
  6611                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  6612  0076E6  0613               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
  6613                           
  6614                           ;usb_device.c: 738: }
  6615                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  6616  0076E8  6613               	tstfsz	_USBStatusStageTimeoutCounter,c	;volatile
  6617  0076EA  D002               	goto	i2l3375
  6618                           
  6619                           ;usb_device.c: 745: {
  6620                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  6621  0076EC  ECBB  F035         	call	_USBCtrlEPAllowStatusStage	;wreg free
  6622  0076F0                     i2l3375:
  6623                           
  6624                           ;usb_device.c: 747: }
  6625                           ;usb_device.c: 749: }
  6626                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  6627  0076F0  BA68               	btfsc	3944,5,c	;volatile
  6628  0076F2  AA69               	btfss	3945,5,c	;volatile
  6629  0076F4  D002               	goto	i2l3381
  6630                           
  6631                           ;usb_device.c: 752: {
  6632                           ;usb_device.c: 753: USBStallHandler();
  6633  0076F6  ECBF  F031         	call	_USBStallHandler	;wreg free
  6634  0076FA                     i2l3381:
  6635                           
  6636                           ;usb_device.c: 754: }
  6637                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  6638  0076FA  B268               	btfsc	3944,1,c	;volatile
  6639  0076FC  A269               	btfss	3945,1,c	;volatile
  6640  0076FE  D00B               	goto	i2l3389
  6641                           
  6642                           ;usb_device.c: 757: {
  6643                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  6644  007700  0E7F               	movlw	127
  6645  007702  6E3A               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1,c
  6646  007704  6839               	setf	?_USER_USB_CALLBACK_EVENT_HANDLER,c
  6647  007706  6A3C               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3,c
  6648  007708  6A3B               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2,c
  6649  00770A  6A3E               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+5,c
  6650  00770C  0E01               	movlw	1
  6651  00770E  6E3D               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4,c
  6652  007710  EC63  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6653                           
  6654                           ;usb_device.c: 759: {UEIR = 0;};
  6655  007714  6A6A               	clrf	3946,c	;volatile
  6656  007716                     i2l3389:
  6657                           
  6658                           ;usb_device.c: 767: }
  6659                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  6660  007716  0E04               	movlw	4
  6661  007718  6012               	cpfslt	_USBDeviceState,c	;volatile
  6662  00771A  D001               	goto	i2l154
  6663  00771C  D7C2               	goto	i2l3339
  6664  00771E                     i2l154:
  6665                           
  6666                           ;usb_device.c: 778: }
  6667                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  6668  00771E  A669               	btfss	3945,3,c	;volatile
  6669  007720  D7C0               	goto	i2l3339
  6670                           
  6671                           ;usb_device.c: 784: {
  6672                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  6673  007722  6A4D               	clrf	USBDeviceTasks@i,c
  6674  007724                     i2l156:
  6675                           
  6676                           ;usb_device.c: 786: {
  6677                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  6678  007724  A668               	btfss	3944,3,c	;volatile
  6679  007726  D7BD               	goto	i2l3339
  6680                           
  6681                           ;usb_device.c: 788: {
  6682                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  6683  007728  CF6C F026          	movff	3948,_USTATcopy	;volatile
  6684                           
  6685                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  6686  00772C  3026               	rrcf	_USTATcopy,w,c	;volatile
  6687  00772E  32E8               	rrcf	wreg,f,c
  6688  007730  32E8               	rrcf	wreg,f,c
  6689  007732  0B0F               	andlw	15
  6690  007734  6E16               	movwf	_endpoint_number,c	;volatile
  6691                           
  6692                           ;usb_device.c: 793: (UIR &= 0xF7);
  6693  007736  9668               	bcf	3944,3,c	;volatile
  6694                           
  6695                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  6696  007738  B426               	btfsc	_USTATcopy,2,c	;volatile
  6697  00773A  D004               	goto	i2l3409
  6698                           
  6699                           ;usb_device.c: 799: {
  6700                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  6701  00773C  5016               	movf	_endpoint_number,w,c
  6702  00773E  0100               	movlb	0	; () banked
  6703  007740  0F7A               	addlw	low _ep_data_out	;volatile
  6704  007742  D003               	goto	L12
  6705  007744                     i2l3409:
  6706                           
  6707                           ;usb_device.c: 802: else
  6708                           ;usb_device.c: 803: {
  6709                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  6710  007744  5016               	movf	_endpoint_number,w,c
  6711  007746  0100               	movlb	0	; () banked
  6712  007748  0F78               	addlw	low _ep_data_in	;volatile
  6713  00774A                     L12:
  6714  00774A  6ED9               	movwf	fsr2l,c
  6715  00774C  6ADA               	clrf	fsr2h,c
  6716  00774E  50DF               	movf	223,w,c
  6717  007750  0B01               	andlw	1
  6718  007752  6E4C               	movwf	??_USBDeviceTasks& (0+255),c
  6719  007754  0E01               	movlw	1
  6720  007756  1A4C               	xorwf	??_USBDeviceTasks,f,c
  6721  007758  50DF               	movf	223,w,c
  6722  00775A  184C               	xorwf	??_USBDeviceTasks& (0+255),w,c
  6723  00775C  0BFE               	andlw	-2
  6724  00775E  184C               	xorwf	??_USBDeviceTasks& (0+255),w,c
  6725  007760  6EDF               	movwf	223,c
  6726                           
  6727                           ; BSR set to: 0
  6728                           ;usb_device.c: 805: }
  6729                           ;usb_device.c: 810: if(endpoint_number == 0)
  6730  007762  6616               	tstfsz	_endpoint_number,c	;volatile
  6731  007764  D003               	goto	i2l3415
  6732                           
  6733                           ; BSR set to: 0
  6734                           ;usb_device.c: 811: {
  6735                           ;usb_device.c: 812: USBCtrlEPService();
  6736  007766  EC61  F035         	call	_USBCtrlEPService	;wreg free
  6737                           
  6738                           ;usb_device.c: 813: }
  6739  00776A  D011               	goto	i2l3417
  6740  00776C                     i2l3415:
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;usb_device.c: 814: else
  6744                           ;usb_device.c: 815: {
  6745                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  6746  00776C  6A3A               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1,c
  6747  00776E  0E72               	movlw	114
  6748  007770  6E39               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER,c
  6749  007772  0E26               	movlw	low _USTATcopy	;volatile
  6750  007774  6E3B               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2,c
  6751  007776  0E00               	movlw	high _USTATcopy	;volatile
  6752  007778  6E3C               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3,c
  6753  00777A  0E0F               	movlw	15
  6754  00777C  6E3C               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3,c
  6755  00777E  0E5F               	movlw	__accesstop+-1
  6756  007780  643B               	cpfsgt	?_USER_USB_CALLBACK_EVENT_HANDLER+2,c
  6757  007782  6A3C               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3,c
  6758  007784  0E00               	movlw	0
  6759  007786  6A3E               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+5,c
  6760  007788  6A3D               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4,c
  6761  00778A  EC63  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6762  00778E                     i2l3417:
  6763  00778E  2A4D               	incf	USBDeviceTasks@i,f,c
  6764  007790  0E03               	movlw	3
  6765  007792  644D               	cpfsgt	USBDeviceTasks@i,c
  6766  007794  D7C7               	goto	i2l156
  6767  007796  D785               	goto	i2l3339
  6768  007798                     i2l145:
  6769  007798  0012               	return	
  6770  00779A                     __end_of_USBDeviceTasks:
  6771                           	opt stack 0
  6772                           pclatu	equ	0xFFB
  6773                           pclath	equ	0xFFA
  6774                           tblptru	equ	0xFF8
  6775                           tblptrh	equ	0xFF7
  6776                           tblptrl	equ	0xFF6
  6777                           tablat	equ	0xFF5
  6778                           prodh	equ	0xFF4
  6779                           prodl	equ	0xFF3
  6780                           intcon	equ	0xFF2
  6781                           intcon2	equ	0xFF1
  6782                           intcon3	equ	0xFF0
  6783                           postinc0	equ	0xFEE
  6784                           fsr0h	equ	0xFEA
  6785                           fsr0l	equ	0xFE9
  6786                           wreg	equ	0xFE8
  6787                           indf1	equ	0xFE7
  6788                           fsr1h	equ	0xFE2
  6789                           fsr1l	equ	0xFE1
  6790                           bsr	equ	0xFE0
  6791                           indf2	equ	0xFDF
  6792                           postinc2	equ	0xFDE
  6793                           postdec2	equ	0xFDD
  6794                           plusw2	equ	0xFDB
  6795                           fsr2h	equ	0xFDA
  6796                           fsr2l	equ	0xFD9
  6797                           status	equ	0xFD8
  6798                           
  6799 ;; *************** function i2_USBDeviceInit *****************
  6800 ;; Defined at:
  6801 ;;		line 299 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
  6802 ;; Parameters:    Size  Location     Type
  6803 ;;		None
  6804 ;; Auto vars:     Size  Location     Type
  6805 ;;  USBDeviceIni    1    9[COMRAM] unsigned char 
  6806 ;; Return value:  Size  Location     Type
  6807 ;;		None               void
  6808 ;; Registers used:
  6809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6810 ;; Tracked objects:
  6811 ;;		On entry : 0/0
  6812 ;;		On exit  : F/4
  6813 ;;		Unchanged: 0/0
  6814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6815 ;;      Params:         0       0       0       0       0       0       0       0       0
  6816 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6817 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6818 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6819 ;;Total ram usage:        1 bytes
  6820 ;; Hardware stack levels used:    1
  6821 ;; Hardware stack levels required when called:    1
  6822 ;; This function calls:
  6823 ;;		i2_memset
  6824 ;; This function is called by:
  6825 ;;		_USBDeviceTasks
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829                           	psect	text40
  6830  00718E                     __ptext40:
  6831                           	opt stack 0
  6832  00718E                     i2_USBDeviceInit:
  6833                           	opt stack 18
  6834                           
  6835                           ;usb_device.c: 300: uint8_t i;
  6836                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
  6837                           
  6838                           ;incstack = 0
  6839                           ;incstack = 0
  6840  00718E  9AA0               	bcf	4000,5,c	;volatile
  6841                           
  6842                           ;usb_device.c: 305: {UEIR = 0;};
  6843  007190  6A6A               	clrf	3946,c	;volatile
  6844                           
  6845                           ;usb_device.c: 308: {UIR = 0;};
  6846  007192  6A68               	clrf	3944,c	;volatile
  6847                           
  6848                           ;usb_device.c: 311: UEP0 = 0;
  6849  007194  6A70               	clrf	3952,c	;volatile
  6850                           
  6851                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(1));;
  6852  007196  0E0F               	movlw	15	;volatile
  6853  007198  6E2A               	movwf	?i2_memset+1,c
  6854  00719A  0E71               	movlw	113	;volatile
  6855  00719C  6E29               	movwf	?i2_memset,c
  6856  00719E  6A2C               	clrf	?i2_memset+3,c
  6857  0071A0  6A2B               	clrf	?i2_memset+2,c
  6858  0071A2  6A2E               	clrf	?i2_memset+5,c
  6859  0071A4  0E01               	movlw	1
  6860  0071A6  6E2D               	movwf	?i2_memset+4,c
  6861  0071A8  EC14  F031         	call	i2_memset	;wreg free
  6862                           
  6863                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  6864  0071AC  0E16               	movlw	22
  6865  0071AE  6E6F               	movwf	3951,c	;volatile
  6866  0071B0  0E9F               	movlw	159
  6867  0071B2  6E6B               	movwf	3947,c	;volatile
  6868  0071B4  0E7B               	movlw	123
  6869  0071B6  6E69               	movwf	3945,c	;volatile
  6870                           
  6871                           ;usb_device.c: 318: ;
  6872                           ;usb_device.c: 321: ;
  6873                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  6874  0071B8  6A31               	clrf	i2USBDeviceInit@i,c
  6875  0071BA                     i2l4697:
  6876                           
  6877                           ;usb_device.c: 325: {
  6878                           ;usb_device.c: 326: BDT[i].Val = 0x00;
  6879  0071BA  5031               	movf	i2USBDeviceInit@i,w,c
  6880  0071BC  0D04               	mullw	4
  6881  0071BE  0E00               	movlw	0	;volatile
  6882  0071C0  24F3               	addwf	prodl,w,c
  6883  0071C2  6ED9               	movwf	fsr2l,c
  6884  0071C4  0E04               	movlw	4	;volatile
  6885  0071C6  20F4               	addwfc	prodh,w,c
  6886  0071C8  6EDA               	movwf	fsr2h,c
  6887  0071CA  6ADE               	clrf	postinc2,c
  6888  0071CC  6ADE               	clrf	postinc2,c
  6889  0071CE  6ADE               	clrf	postinc2,c
  6890  0071D0  6ADD               	clrf	postdec2,c
  6891                           
  6892                           ; BSR set to: 4
  6893  0071D2  2A31               	incf	i2USBDeviceInit@i,f,c
  6894                           
  6895                           ; BSR set to: 4
  6896  0071D4  0E07               	movlw	7
  6897  0071D6  6431               	cpfsgt	i2USBDeviceInit@i,c
  6898  0071D8  D7F0               	goto	i2l4697
  6899                           
  6900                           ; BSR set to: 4
  6901                           ;usb_device.c: 327: }
  6902                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
  6903  0071DA  8C6D               	bsf	3949,6,c	;volatile
  6904                           
  6905                           ;usb_device.c: 333: UADDR = 0x00;
  6906  0071DC  6A6E               	clrf	3950,c	;volatile
  6907                           
  6908                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
  6909  0071DE  986D               	bcf	3949,4,c	;volatile
  6910                           
  6911                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
  6912  0071E0  9C6D               	bcf	3949,6,c	;volatile
  6913                           
  6914                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
  6915  0071E2  D006               	goto	i2l4711
  6916  0071E4                     i2l4703:
  6917                           
  6918                           ;usb_device.c: 343: {
  6919                           ;usb_device.c: 344: (UIR &= 0xF7);
  6920  0071E4  9668               	bcf	3944,3,c	;volatile
  6921                           
  6922                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
  6923  0071E6  0100               	movlb	0	; () banked
  6924  0071E8  6BB6               	clrf	(_inPipes+3)& (0+255),b	;volatile
  6925                           
  6926                           ; BSR set to: 0
  6927                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
  6928  0071EA  6B63               	clrf	(_outPipes+3)& (0+255),b	;volatile
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
  6932  0071EC  6B64               	clrf	(_outPipes+4)& (0+255),b	;volatile
  6933  0071EE  6B65               	clrf	(_outPipes+5)& (0+255),b	;volatile
  6934  0071F0                     i2l4711:
  6935  0071F0  B668               	btfsc	3944,3,c	;volatile
  6936  0071F2  D7F8               	goto	i2l4703
  6937                           
  6938                           ;usb_device.c: 349: }
  6939                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
  6940  0071F4  0E01               	movlw	1
  6941  0071F6  0100               	movlb	0	; () banked
  6942  0071F8  6F7D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  6943                           
  6944                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
  6945  0071FA  6F7E               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
  6949  0071FC  6A0F               	clrf	_USBDeferINDataStagePackets,c	;volatile
  6950                           
  6951                           ; BSR set to: 0
  6952                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
  6953  0071FE  6A10               	clrf	_USBDeferOUTDataStagePackets,c	;volatile
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;usb_device.c: 358: USBBusIsSuspended = 0;
  6957  007200  6B7C               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
  6958                           
  6959                           ; BSR set to: 0
  6960                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(1+1u); i++)
  6961  007202  6A31               	clrf	i2USBDeviceInit@i,c
  6962  007204                     i2l4727:
  6963                           
  6964                           ; BSR set to: 0
  6965                           ;usb_device.c: 363: {
  6966                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
  6967  007204  5031               	movf	i2USBDeviceInit@i,w,c
  6968  007206  0D02               	mullw	2
  6969  007208  50F3               	movf	prodl,w,c
  6970  00720A  0F6C               	addlw	low _pBDTEntryIn
  6971  00720C  6ED9               	movwf	fsr2l,c
  6972  00720E  6ADA               	clrf	fsr2h,c
  6973  007210  6ADE               	clrf	postinc2,c
  6974  007212  6ADD               	clrf	postdec2,c
  6975                           
  6976                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
  6977  007214  5031               	movf	i2USBDeviceInit@i,w,c
  6978  007216  0D02               	mullw	2
  6979  007218  50F3               	movf	prodl,w,c
  6980  00721A  0F70               	addlw	low _pBDTEntryOut
  6981  00721C  6ED9               	movwf	fsr2l,c
  6982  00721E  6ADA               	clrf	fsr2h,c
  6983  007220  6ADE               	clrf	postinc2,c
  6984  007222  6ADD               	clrf	postdec2,c
  6985                           
  6986                           ; BSR set to: 0
  6987                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
  6988  007224  5031               	movf	i2USBDeviceInit@i,w,c
  6989  007226  0F78               	addlw	low _ep_data_in	;volatile
  6990  007228  6ED9               	movwf	fsr2l,c
  6991  00722A  6ADA               	clrf	fsr2h,c
  6992  00722C  6ADF               	clrf	indf2,c
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
  6996  00722E  5031               	movf	i2USBDeviceInit@i,w,c
  6997  007230  0F7A               	addlw	low _ep_data_out	;volatile
  6998  007232  6ED9               	movwf	fsr2l,c
  6999  007234  6ADA               	clrf	fsr2h,c
  7000  007236  6ADF               	clrf	indf2,c
  7001                           
  7002                           ; BSR set to: 0
  7003  007238  2A31               	incf	i2USBDeviceInit@i,f,c
  7004                           
  7005                           ; BSR set to: 0
  7006  00723A  0E01               	movlw	1
  7007  00723C  6431               	cpfsgt	i2USBDeviceInit@i,c
  7008  00723E  D7E2               	goto	i2l4727
  7009                           
  7010                           ; BSR set to: 0
  7011                           ;usb_device.c: 368: }
  7012                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7013  007240  0E04               	movlw	4	;volatile
  7014  007242  0100               	movlb	0	; () banked
  7015  007244  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
  7016  007246  0E08               	movlw	8	;volatile
  7017  007248  6F6C               	movwf	_pBDTEntryIn& (0+255),b
  7018                           
  7019                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
  7020  00724A  0E16               	movlw	22
  7021  00724C  6E70               	movwf	3952,c	;volatile
  7022                           
  7023                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  7024  00724E  0E04               	movlw	4
  7025  007250  0104               	movlb	4	; () banked
  7026  007252  6F03               	movwf	3,b	;volatile
  7027  007254  0E20               	movlw	32
  7028  007256  6F02               	movwf	2,b	;volatile
  7029                           
  7030                           ;usb_device.c: 376: BDT[0].CNT = 8;
  7031  007258  0E08               	movlw	8
  7032  00725A  6F01               	movwf	1,b	;volatile
  7033                           
  7034                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
  7035  00725C  0E04               	movlw	4
  7036  00725E  6F00               	movwf	0,b	;volatile
  7037                           
  7038                           ; BSR set to: 4
  7039                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
  7040  007260  8F00               	bsf	0,7,b	;volatile
  7041                           
  7042                           ; BSR set to: 4
  7043                           ;usb_device.c: 381: USBActiveConfiguration = 0;
  7044  007262  6A24               	clrf	_USBActiveConfiguration,c	;volatile
  7045                           
  7046                           ; BSR set to: 4
  7047                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
  7048  007264  6A12               	clrf	_USBDeviceState,c	;volatile
  7049                           
  7050                           ; BSR set to: 4
  7051  007266  0012               	return	
  7052  007268                     __end_ofi2_USBDeviceInit:
  7053                           	opt stack 0
  7054                           pclatu	equ	0xFFB
  7055                           pclath	equ	0xFFA
  7056                           tblptru	equ	0xFF8
  7057                           tblptrh	equ	0xFF7
  7058                           tblptrl	equ	0xFF6
  7059                           tablat	equ	0xFF5
  7060                           prodh	equ	0xFF4
  7061                           prodl	equ	0xFF3
  7062                           intcon	equ	0xFF2
  7063                           intcon2	equ	0xFF1
  7064                           intcon3	equ	0xFF0
  7065                           postinc0	equ	0xFEE
  7066                           fsr0h	equ	0xFEA
  7067                           fsr0l	equ	0xFE9
  7068                           wreg	equ	0xFE8
  7069                           indf1	equ	0xFE7
  7070                           fsr1h	equ	0xFE2
  7071                           fsr1l	equ	0xFE1
  7072                           bsr	equ	0xFE0
  7073                           indf2	equ	0xFDF
  7074                           postinc2	equ	0xFDE
  7075                           postdec2	equ	0xFDD
  7076                           plusw2	equ	0xFDB
  7077                           fsr2h	equ	0xFDA
  7078                           fsr2l	equ	0xFD9
  7079                           status	equ	0xFD8
  7080                           
  7081 ;; *************** function _USBCtrlEPService *****************
  7082 ;; Defined at:
  7083 ;;		line 2370 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_
      +device.c"
  7084 ;; Parameters:    Size  Location     Type
  7085 ;;		None
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;  setup_cnt       1   35[COMRAM] unsigned char 
  7088 ;; Return value:  Size  Location     Type
  7089 ;;		None               void
  7090 ;; Registers used:
  7091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7092 ;; Tracked objects:
  7093 ;;		On entry : F/0
  7094 ;;		On exit  : B/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7097 ;;      Params:         0       0       0       0       0       0       0       0       0
  7098 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7099 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7100 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7101 ;;Total ram usage:        3 bytes
  7102 ;; Hardware stack levels used:    1
  7103 ;; Hardware stack levels required when called:    7
  7104 ;; This function calls:
  7105 ;;		_USBCtrlTrfSetupHandler
  7106 ;;		_USBCtrlTrfOutHandler
  7107 ;;		_USBCtrlTrfInHandler
  7108 ;; This function is called by:
  7109 ;;		_USBDeviceTasks
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113                           	psect	text41
  7114  006AC2                     __ptext41:
  7115                           	opt stack 0
  7116  006AC2                     _USBCtrlEPService:
  7117                           	opt stack 12
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
  7121                           
  7122                           ; BSR set to: 4
  7123                           ;incstack = 0
  7124                           ;incstack = 0
  7125  006AC2  0E2D               	movlw	45
  7126  006AC4  6E13               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
  7127                           
  7128                           ; BSR set to: 0
  7129                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
  7130  006AC6  5026               	movf	_USTATcopy,w,c	;volatile
  7131  006AC8  0BFD               	andlw	253
  7132  006ACA  E14E               	bnz	i2l3539
  7133                           
  7134                           ; BSR set to: 0
  7135                           ;usb_device.c: 2380: {
  7136                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  7137  006ACC  90D8               	bcf	status,0,c
  7138  006ACE  3026               	rrcf	_USTATcopy,w,c	;volatile
  7139  006AD0  0B3F               	andlw	63
  7140  006AD2  0D04               	mullw	4
  7141  006AD4  0104               	movlb	4	; () banked
  7142  006AD6  0E00               	movlw	0	;volatile
  7143  006AD8  24F3               	addwf	prodl,w,c
  7144  006ADA  6E05               	movwf	_pBDTEntryEP0OutCurrent,c
  7145  006ADC  0E04               	movlw	4	;volatile
  7146  006ADE  20F4               	addwfc	prodh,w,c
  7147  006AE0  6E06               	movwf	_pBDTEntryEP0OutCurrent+1,c
  7148                           
  7149                           ; BSR set to: 4
  7150                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  7151  006AE2  C005  F007         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  7152  006AE6  C006  F008         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  7153                           
  7154                           ; BSR set to: 4
  7155                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  7156  006AEA  0E04               	movlw	4
  7157  006AEC  1A07               	xorwf	_pBDTEntryEP0OutNext,f,c
  7158                           
  7159                           ; BSR set to: 4
  7160                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  7161  006AEE  C005  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7162  006AF2  C006  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7163  006AF6  30DF               	rrcf	indf2,w,c
  7164  006AF8  32E8               	rrcf	wreg,f,c
  7165  006AFA  0B0F               	andlw	15
  7166  006AFC  0A0D               	xorlw	13
  7167  006AFE  E131               	bnz	i2l3537
  7168                           
  7169                           ; BSR set to: 4
  7170                           ;usb_device.c: 2397: {
  7171                           ;usb_device.c: 2398: unsigned char setup_cnt;
  7172                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  7173  006B00  6A4B               	clrf	USBCtrlEPService@setup_cnt,c
  7174  006B02                     i2l3525:
  7175                           
  7176                           ; BSR set to: 4
  7177                           ;usb_device.c: 2405: {
  7178                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
  7179  006B02  EE20 F002          	lfsr	2,2
  7180  006B06  5005               	movf	_pBDTEntryEP0OutCurrent,w,c
  7181  006B08  26D9               	addwf	fsr2l,f,c
  7182  006B0A  5006               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  7183  006B0C  22DA               	addwfc	fsr2h,f,c
  7184  006B0E  CFDE F049          	movff	postinc2,??_USBCtrlEPService
  7185  006B12  CFDD F04A          	movff	postdec2,??_USBCtrlEPService+1
  7186  006B16  C049  FFD9         	movff	??_USBCtrlEPService,fsr2l
  7187  006B1A  C04A  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
  7188  006B1E  0E20               	movlw	32	;volatile
  7189  006B20  244B               	addwf	USBCtrlEPService@setup_cnt,w,c
  7190  006B22  6EE1               	movwf	fsr1l,c
  7191  006B24  6AE2               	clrf	fsr1h,c
  7192  006B26  0E04               	movlw	4	;volatile
  7193  006B28  22E2               	addwfc	fsr1h,f,c
  7194  006B2A  CFDF FFE7          	movff	indf2,indf1
  7195                           
  7196                           ; BSR set to: 4
  7197                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
  7198  006B2E  EE20 F002          	lfsr	2,2
  7199  006B32  5005               	movf	_pBDTEntryEP0OutCurrent,w,c
  7200  006B34  26D9               	addwf	fsr2l,f,c
  7201  006B36  5006               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  7202  006B38  22DA               	addwfc	fsr2h,f,c
  7203  006B3A  2ADE               	incf	postinc2,f,c
  7204  006B3C  0E00               	movlw	0
  7205  006B3E  22DD               	addwfc	postdec2,f,c
  7206                           
  7207                           ; BSR set to: 4
  7208  006B40  2A4B               	incf	USBCtrlEPService@setup_cnt,f,c
  7209                           
  7210                           ; BSR set to: 4
  7211  006B42  0E07               	movlw	7
  7212  006B44  644B               	cpfsgt	USBCtrlEPService@setup_cnt,c
  7213  006B46  D7DD               	goto	i2l3525
  7214                           
  7215                           ; BSR set to: 4
  7216                           ;usb_device.c: 2408: }
  7217                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
  7218  006B48  EE20 F002          	lfsr	2,2
  7219  006B4C  5005               	movf	_pBDTEntryEP0OutCurrent,w,c
  7220  006B4E  26D9               	addwf	fsr2l,f,c
  7221  006B50  5006               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  7222  006B52  22DA               	addwfc	fsr2h,f,c
  7223  006B54  0E20               	movlw	32
  7224  006B56  6EDE               	movwf	postinc2,c
  7225  006B58  0E04               	movlw	4
  7226  006B5A  6EDD               	movwf	postdec2,c
  7227                           
  7228                           ; BSR set to: 4
  7229                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
  7230  006B5C  EC2B  F033         	call	_USBCtrlTrfSetupHandler	;wreg free
  7231                           
  7232                           ;usb_device.c: 2413: }
  7233  006B60  D009               	goto	i2l315
  7234  006B62                     i2l3537:
  7235                           
  7236                           ; BSR set to: 4
  7237                           ;usb_device.c: 2414: else
  7238                           ;usb_device.c: 2415: {
  7239                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
  7240  006B62  ECAB  F032         	call	_USBCtrlTrfOutHandler	;wreg free
  7241  006B66  D006               	goto	i2l315
  7242  006B68                     i2l3539:
  7243                           
  7244                           ; BSR set to: 0
  7245                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
  7246  006B68  5026               	movf	_USTATcopy,w,c	;volatile
  7247  006B6A  0BFD               	andlw	253
  7248  006B6C  0A04               	xorlw	4
  7249  006B6E  B4D8               	btfsc	status,2,c
  7250                           
  7251                           ; BSR set to: 0
  7252                           ;usb_device.c: 2421: {
  7253                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
  7254  006B70  EC16  F036         	call	_USBCtrlTrfInHandler	;wreg free
  7255  006B74                     i2l315:
  7256  006B74  0012               	return	
  7257  006B76                     __end_of_USBCtrlEPService:
  7258                           	opt stack 0
  7259                           pclatu	equ	0xFFB
  7260                           pclath	equ	0xFFA
  7261                           tblptru	equ	0xFF8
  7262                           tblptrh	equ	0xFF7
  7263                           tblptrl	equ	0xFF6
  7264                           tablat	equ	0xFF5
  7265                           prodh	equ	0xFF4
  7266                           prodl	equ	0xFF3
  7267                           intcon	equ	0xFF2
  7268                           intcon2	equ	0xFF1
  7269                           intcon3	equ	0xFF0
  7270                           postinc0	equ	0xFEE
  7271                           fsr0h	equ	0xFEA
  7272                           fsr0l	equ	0xFE9
  7273                           wreg	equ	0xFE8
  7274                           indf1	equ	0xFE7
  7275                           fsr1h	equ	0xFE2
  7276                           fsr1l	equ	0xFE1
  7277                           bsr	equ	0xFE0
  7278                           indf2	equ	0xFDF
  7279                           postinc2	equ	0xFDE
  7280                           postdec2	equ	0xFDD
  7281                           plusw2	equ	0xFDB
  7282                           fsr2h	equ	0xFDA
  7283                           fsr2l	equ	0xFD9
  7284                           status	equ	0xFD8
  7285                           
  7286 ;; *************** function _USBCtrlTrfInHandler *****************
  7287 ;; Defined at:
  7288 ;;		line 2596 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_
      +device.c"
  7289 ;; Parameters:    Size  Location     Type
  7290 ;;		None
  7291 ;; Auto vars:     Size  Location     Type
  7292 ;;  lastDTS         1    2[COMRAM] unsigned char 
  7293 ;; Return value:  Size  Location     Type
  7294 ;;		None               void
  7295 ;; Registers used:
  7296 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
  7297 ;; Tracked objects:
  7298 ;;		On entry : F/0
  7299 ;;		On exit  : F/0
  7300 ;;		Unchanged: 0/0
  7301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7302 ;;      Params:         0       0       0       0       0       0       0       0       0
  7303 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7305 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7306 ;;Total ram usage:        1 bytes
  7307 ;; Hardware stack levels used:    1
  7308 ;; Hardware stack levels required when called:    1
  7309 ;; This function calls:
  7310 ;;		_USBCtrlTrfTxService
  7311 ;; This function is called by:
  7312 ;;		_USBCtrlEPService
  7313 ;; This function uses a non-reentrant model
  7314 ;;
  7315                           
  7316                           	psect	text42
  7317  006C2C                     __ptext42:
  7318                           	opt stack 0
  7319  006C2C                     _USBCtrlTrfInHandler:
  7320                           	opt stack 17
  7321                           
  7322                           ; BSR set to: 0
  7323                           ;usb_device.c: 2597: uint8_t lastDTS;
  7324                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  7325                           
  7326                           ;incstack = 0
  7327                           ;incstack = 0
  7328  006C2C  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
  7329  006C30  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7330  006C34  38DF               	swapf	223,w,c
  7331  006C36  32E8               	rrcf	wreg,f,c
  7332  006C38  32E8               	rrcf	wreg,f,c
  7333  006C3A  0B01               	andlw	1
  7334  006C3C  6E2A               	movwf	USBCtrlTrfInHandler@lastDTS,c
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  7338  006C3E  0E04               	movlw	4
  7339  006C40  1B6C               	xorwf	_pBDTEntryIn& (0+255),f,b
  7340                           
  7341                           ; BSR set to: 0
  7342                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
  7343  006C42  5012               	movf	_USBDeviceState,w,c	;volatile
  7344  006C44  0A08               	xorlw	8
  7345  006C46  E109               	bnz	i2l3913
  7346                           
  7347                           ; BSR set to: 0
  7348                           ;usb_device.c: 2608: {
  7349                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
  7350  006C48  0104               	movlb	4	; () banked
  7351  006C4A  5122               	movf	34,w,b	;volatile
  7352  006C4C  0B7F               	andlw	127
  7353  006C4E  6E6E               	movwf	3950,c	;volatile
  7354                           
  7355                           ; BSR set to: 4
  7356                           ;usb_device.c: 2610: if(UADDR != 0u)
  7357  006C50  506E               	movf	3950,w,c
  7358                           
  7359                           ; BSR set to: 4
  7360                           ;usb_device.c: 2611: {
  7361                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
  7362  006C52  0E10               	movlw	16
  7363  006C54  B4D8               	btfsc	status,2,c
  7364                           
  7365                           ; BSR set to: 4
  7366                           ;usb_device.c: 2614: else
  7367                           ;usb_device.c: 2615: {
  7368                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
  7369                           
  7370                           ;usb_device.c: 2613: }
  7371  006C56  0E04               	movlw	4
  7372  006C58  6E12               	movwf	_USBDeviceState,c	;volatile
  7373  006C5A                     i2l3913:
  7374                           
  7375                           ;usb_device.c: 2617: }
  7376                           ;usb_device.c: 2618: }
  7377                           ;usb_device.c: 2621: if(controlTransferState == 1)
  7378  006C5A  0415               	decf	_controlTransferState,w,c	;volatile
  7379  006C5C  E12B               	bnz	i2l331
  7380                           
  7381                           ;usb_device.c: 2622: {
  7382                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
  7383  006C5E  0100               	movlb	0	; () banked
  7384  006C60  EE20 F002          	lfsr	2,2
  7385  006C64  516C               	movf	_pBDTEntryIn& (0+255),w,b
  7386  006C66  26D9               	addwf	fsr2l,f,c
  7387  006C68  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  7388  006C6A  22DA               	addwfc	fsr2h,f,c
  7389  006C6C  0E28               	movlw	40
  7390  006C6E  6EDE               	movwf	postinc2,c
  7391  006C70  0E04               	movlw	4
  7392  006C72  6EDD               	movwf	postdec2,c
  7393                           
  7394                           ; BSR set to: 0
  7395                           ;usb_device.c: 2624: USBCtrlTrfTxService();
  7396  006C74  EC2B  F037         	call	_USBCtrlTrfTxService	;wreg free
  7397                           
  7398                           ; BSR set to: 0
  7399                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
  7400  006C78  5023               	movf	_shortPacketStatus,w,c	;volatile
  7401  006C7A  0A02               	xorlw	2
  7402  006C7C  E10D               	bnz	i2l332
  7403                           
  7404                           ; BSR set to: 0
  7405                           ;usb_device.c: 2631: {
  7406                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
  7407  006C7E  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
  7408  006C82  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7409  006C86  0E04               	movlw	4
  7410  006C88                     L14:
  7411  006C88  6EDF               	movwf	indf2,c
  7412                           
  7413                           ; BSR set to: 0
  7414                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7415  006C8A  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
  7416  006C8E  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7417  006C92  0E00               	movlw	0
  7418  006C94  8EDB               	bsf	plusw2,7,c
  7419                           
  7420                           ;usb_device.c: 2636: }
  7421  006C96  D024               	goto	i2l339
  7422  006C98                     i2l332:
  7423                           
  7424                           ; BSR set to: 0
  7425                           ;usb_device.c: 2637: else
  7426                           ;usb_device.c: 2638: {
  7427                           ;usb_device.c: 2639: if(lastDTS == 0)
  7428  006C98  662A               	tstfsz	USBCtrlTrfInHandler@lastDTS,c
  7429  006C9A  D006               	goto	i2l3929
  7430                           
  7431                           ; BSR set to: 0
  7432                           ;usb_device.c: 2640: {
  7433                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7434  006C9C  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
  7435  006CA0  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7436  006CA4  0E48               	movlw	72
  7437  006CA6  D7F0               	goto	L14
  7438  006CA8                     i2l3929:
  7439                           
  7440                           ; BSR set to: 0
  7441                           ;usb_device.c: 2644: else
  7442                           ;usb_device.c: 2645: {
  7443                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  7444  006CA8  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
  7445  006CAC  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7446  006CB0  0E08               	movlw	8
  7447  006CB2  D7EA               	goto	L14
  7448  006CB4                     i2l331:
  7449                           
  7450                           ;usb_device.c: 2651: else
  7451                           ;usb_device.c: 2652: {
  7452                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
  7453  006CB4  0100               	movlb	0	; () banked
  7454  006CB6  AF63               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
  7455  006CB8  D012               	goto	i2l3939
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;usb_device.c: 2657: {
  7459                           ;usb_device.c: 2658: if(outPipes[0].pFunc != (0))
  7460  006CBA  5167               	movf	(_outPipes+7)& (0+255),w,b	;volatile
  7461  006CBC  1166               	iorwf	(_outPipes+6)& (0+255),w,b	;volatile
  7462  006CBE  E00E               	bz	i2l3937
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;usb_device.c: 2659: {
  7466                           ;usb_device.c: 2660: outPipes[0].pFunc();
  7467  006CC0  EE20  F066         	lfsr	2,_outPipes+6	;volatile
  7468  006CC4  D801               	call	i2u294_48
  7469  006CC6  D00A               	goto	i2l3937
  7470  006CC8                     i2u294_48:
  7471  006CC8  0005               	push	
  7472  006CCA  6EFA               	movwf	pclath,c
  7473  006CCC  50DE               	movf	postinc2,w,c
  7474  006CCE  6EFD               	movwf	tosl,c
  7475  006CD0  50DE               	movf	postinc2,w,c
  7476  006CD2  6EFE               	movwf	tosh,c
  7477  006CD4  50F8               	movf	tblptru,w,c
  7478  006CD6  6EFF               	movwf	tosu,c
  7479  006CD8  50FA               	movf	pclath,w,c
  7480  006CDA  0012               	return		;indir
  7481  006CDC                     i2l3937:
  7482                           
  7483                           ; BSR set to: 0
  7484                           ;usb_device.c: 2661: }
  7485                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
  7486  006CDC  9F63               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
  7487  006CDE                     i2l3939:
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;usb_device.c: 2663: }
  7491                           ;usb_device.c: 2665: controlTransferState = 0;
  7492  006CDE  6A15               	clrf	_controlTransferState,c	;volatile
  7493  006CE0                     i2l339:
  7494                           
  7495                           ; BSR set to: 0
  7496  006CE0  0012               	return	
  7497  006CE2                     __end_of_USBCtrlTrfInHandler:
  7498                           	opt stack 0
  7499                           tosu	equ	0xFFF
  7500                           tosh	equ	0xFFE
  7501                           tosl	equ	0xFFD
  7502                           pclatu	equ	0xFFB
  7503                           pclath	equ	0xFFA
  7504                           tblptru	equ	0xFF8
  7505                           tblptrh	equ	0xFF7
  7506                           tblptrl	equ	0xFF6
  7507                           tablat	equ	0xFF5
  7508                           prodh	equ	0xFF4
  7509                           prodl	equ	0xFF3
  7510                           intcon	equ	0xFF2
  7511                           intcon2	equ	0xFF1
  7512                           intcon3	equ	0xFF0
  7513                           postinc0	equ	0xFEE
  7514                           fsr0h	equ	0xFEA
  7515                           fsr0l	equ	0xFE9
  7516                           wreg	equ	0xFE8
  7517                           indf1	equ	0xFE7
  7518                           fsr1h	equ	0xFE2
  7519                           fsr1l	equ	0xFE1
  7520                           bsr	equ	0xFE0
  7521                           indf2	equ	0xFDF
  7522                           postinc2	equ	0xFDE
  7523                           postdec2	equ	0xFDD
  7524                           plusw2	equ	0xFDB
  7525                           fsr2h	equ	0xFDA
  7526                           fsr2l	equ	0xFD9
  7527                           status	equ	0xFD8
  7528                           
  7529 ;; *************** function _USBCtrlTrfOutHandler *****************
  7530 ;; Defined at:
  7531 ;;		line 2542 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_
      +device.c"
  7532 ;; Parameters:    Size  Location     Type
  7533 ;;		None
  7534 ;; Auto vars:     Size  Location     Type
  7535 ;;		None
  7536 ;; Return value:  Size  Location     Type
  7537 ;;		None               void
  7538 ;; Registers used:
  7539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  7540 ;; Tracked objects:
  7541 ;;		On entry : F/4
  7542 ;;		On exit  : B/0
  7543 ;;		Unchanged: 0/0
  7544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7545 ;;      Params:         0       0       0       0       0       0       0       0       0
  7546 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7547 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7548 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7549 ;;Total ram usage:        0 bytes
  7550 ;; Hardware stack levels used:    1
  7551 ;; Hardware stack levels required when called:    2
  7552 ;; This function calls:
  7553 ;;		_USBCtrlTrfRxService
  7554 ;; This function is called by:
  7555 ;;		_USBCtrlEPService
  7556 ;; This function uses a non-reentrant model
  7557 ;;
  7558                           
  7559                           	psect	text43
  7560  006556                     __ptext43:
  7561                           	opt stack 0
  7562  006556                     _USBCtrlTrfOutHandler:
  7563                           	opt stack 16
  7564                           
  7565                           ; BSR set to: 4
  7566                           ;usb_device.c: 2543: if(controlTransferState == 2)
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;incstack = 0
  7570                           ;incstack = 0
  7571  006556  5015               	movf	_controlTransferState,w,c	;volatile
  7572  006558  0A02               	xorlw	2
  7573  00655A  E103               	bnz	i2l321
  7574                           
  7575                           ; BSR set to: 4
  7576                           ;usb_device.c: 2544: {
  7577                           ;usb_device.c: 2545: USBCtrlTrfRxService();
  7578  00655C  ECB3  F03A         	call	_USBCtrlTrfRxService	;wreg free
  7579                           
  7580                           ;usb_device.c: 2546: }
  7581  006560  D023               	goto	i2l325
  7582  006562                     i2l321:
  7583                           
  7584                           ; BSR set to: 4
  7585                           ;usb_device.c: 2547: else
  7586                           ;usb_device.c: 2548: {
  7587                           ;usb_device.c: 2551: controlTransferState = 0;
  7588  006562  6A15               	clrf	_controlTransferState,c	;volatile
  7589                           
  7590                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
  7591  006564  660D               	tstfsz	_BothEP0OutUOWNsSet,c	;volatile
  7592  006566  D01F               	goto	i2l323
  7593                           
  7594                           ; BSR set to: 4
  7595                           ;usb_device.c: 2559: {
  7596                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
  7597  006568  EE20 F001          	lfsr	2,1
  7598  00656C  5007               	movf	_pBDTEntryEP0OutNext,w,c
  7599  00656E  26D9               	addwf	fsr2l,f,c
  7600  006570  5008               	movf	_pBDTEntryEP0OutNext+1,w,c
  7601  006572  22DA               	addwfc	fsr2h,f,c
  7602  006574  0E08               	movlw	8
  7603  006576  6EDF               	movwf	indf2,c
  7604                           
  7605                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  7606  006578  EE20 F002          	lfsr	2,2
  7607  00657C  5007               	movf	_pBDTEntryEP0OutNext,w,c
  7608  00657E  26D9               	addwf	fsr2l,f,c
  7609  006580  5008               	movf	_pBDTEntryEP0OutNext+1,w,c
  7610  006582  22DA               	addwfc	fsr2h,f,c
  7611  006584  0E20               	movlw	32
  7612  006586  6EDE               	movwf	postinc2,c
  7613  006588  0E04               	movlw	4
  7614  00658A  6EDD               	movwf	postdec2,c
  7615                           
  7616                           ; BSR set to: 4
  7617                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7618  00658C  C007  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7619  006590  C008  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7620  006594  0E0C               	movlw	12
  7621  006596  6EDF               	movwf	indf2,c
  7622                           
  7623                           ; BSR set to: 4
  7624                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7625  006598  C007  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7626  00659C  C008  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7627  0065A0  0E00               	movlw	0
  7628  0065A2  8EDB               	bsf	plusw2,7,c
  7629                           
  7630                           ;usb_device.c: 2564: }
  7631  0065A4  D001               	goto	i2l325
  7632  0065A6                     i2l323:
  7633                           
  7634                           ; BSR set to: 4
  7635                           ;usb_device.c: 2565: else
  7636                           ;usb_device.c: 2566: {
  7637                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
  7638  0065A6  6A0D               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  7639  0065A8                     i2l325:
  7640  0065A8  0012               	return	
  7641  0065AA                     __end_of_USBCtrlTrfOutHandler:
  7642                           	opt stack 0
  7643                           tosu	equ	0xFFF
  7644                           tosh	equ	0xFFE
  7645                           tosl	equ	0xFFD
  7646                           pclatu	equ	0xFFB
  7647                           pclath	equ	0xFFA
  7648                           tblptru	equ	0xFF8
  7649                           tblptrh	equ	0xFF7
  7650                           tblptrl	equ	0xFF6
  7651                           tablat	equ	0xFF5
  7652                           prodh	equ	0xFF4
  7653                           prodl	equ	0xFF3
  7654                           intcon	equ	0xFF2
  7655                           intcon2	equ	0xFF1
  7656                           intcon3	equ	0xFF0
  7657                           postinc0	equ	0xFEE
  7658                           fsr0h	equ	0xFEA
  7659                           fsr0l	equ	0xFE9
  7660                           wreg	equ	0xFE8
  7661                           indf1	equ	0xFE7
  7662                           fsr1h	equ	0xFE2
  7663                           fsr1l	equ	0xFE1
  7664                           bsr	equ	0xFE0
  7665                           indf2	equ	0xFDF
  7666                           postinc2	equ	0xFDE
  7667                           postdec2	equ	0xFDD
  7668                           plusw2	equ	0xFDB
  7669                           fsr2h	equ	0xFDA
  7670                           fsr2l	equ	0xFD9
  7671                           status	equ	0xFD8
  7672                           
  7673 ;; *************** function _USBCtrlTrfRxService *****************
  7674 ;; Defined at:
  7675 ;;		line 1853 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_
      +device.c"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;		None
  7678 ;; Auto vars:     Size  Location     Type
  7679 ;;  byteToRead      1    3[COMRAM] unsigned char 
  7680 ;;  i               1    2[COMRAM] unsigned char 
  7681 ;; Return value:  Size  Location     Type
  7682 ;;		None               void
  7683 ;; Registers used:
  7684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  7685 ;; Tracked objects:
  7686 ;;		On entry : F/4
  7687 ;;		On exit  : F/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7690 ;;      Params:         0       0       0       0       0       0       0       0       0
  7691 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7692 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7693 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7694 ;;Total ram usage:        3 bytes
  7695 ;; Hardware stack levels used:    1
  7696 ;; Hardware stack levels required when called:    1
  7697 ;; This function calls:
  7698 ;;		_USBCtrlEPAllowStatusStage
  7699 ;; This function is called by:
  7700 ;;		_USBCtrlTrfOutHandler
  7701 ;; This function uses a non-reentrant model
  7702 ;;
  7703                           
  7704                           	psect	text44
  7705  007566                     __ptext44:
  7706                           	opt stack 0
  7707  007566                     _USBCtrlTrfRxService:
  7708                           	opt stack 16
  7709                           
  7710                           ; BSR set to: 4
  7711                           ;usb_device.c: 1854: uint8_t byteToRead;
  7712                           ;usb_device.c: 1855: uint8_t i;
  7713                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  7714                           
  7715                           ;incstack = 0
  7716                           ;incstack = 0
  7717  007566  EE20 F001          	lfsr	2,1
  7718  00756A  5005               	movf	_pBDTEntryEP0OutCurrent,w,c
  7719  00756C  26D9               	addwf	fsr2l,f,c
  7720  00756E  5006               	movf	_pBDTEntryEP0OutCurrent+1,w,c
  7721  007570  22DA               	addwfc	fsr2h,f,c
  7722  007572  50DF               	movf	indf2,w,c
  7723  007574  6E2B               	movwf	USBCtrlTrfRxService@byteToRead,c
  7724                           
  7725                           ; BSR set to: 4
  7726                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  7727  007576  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  7728  007578  0100               	movlb	0	; () banked
  7729  00757A  5D64               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
  7730  00757C  0E00               	movlw	0
  7731  00757E  5965               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
  7732  007580  A0D8               	btfss	status,0,c
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;usb_device.c: 1866: {
  7736                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  7737  007582  C064  F02B         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
  7738                           
  7739                           ; BSR set to: 0
  7740                           ;usb_device.c: 1868: }
  7741                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  7742  007586  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  7743  007588  5F64               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
  7744  00758A  0E00               	movlw	0
  7745  00758C  5B65               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
  7746                           
  7747                           ; BSR set to: 0
  7748                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  7749  00758E  6A2A               	clrf	USBCtrlTrfRxService@i,c
  7750  007590  D010               	goto	i2l3749
  7751  007592                     i2l3743:
  7752                           
  7753                           ; BSR set to: 0
  7754                           ;usb_device.c: 1875: {
  7755                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  7756  007592  0E28               	movlw	40	;volatile
  7757  007594  242A               	addwf	USBCtrlTrfRxService@i,w,c
  7758  007596  6ED9               	movwf	fsr2l,c
  7759  007598  6ADA               	clrf	fsr2h,c
  7760  00759A  0E04               	movlw	4	;volatile
  7761  00759C  22DA               	addwfc	fsr2h,f,c
  7762  00759E  C060  FFE1         	movff	_outPipes,fsr1l	;volatile
  7763  0075A2  C061  FFE2         	movff	_outPipes+1,fsr1h	;volatile
  7764  0075A6  CFDF FFE7          	movff	indf2,indf1
  7765                           
  7766                           ; BSR set to: 4
  7767  0075AA  0100               	movlb	0	; () banked
  7768  0075AC  4B60               	infsnz	_outPipes& (0+255),f,b	;volatile
  7769  0075AE  2B61               	incf	(_outPipes+1)& (0+255),f,b	;volatile
  7770                           
  7771                           ; BSR set to: 0
  7772  0075B0  2A2A               	incf	USBCtrlTrfRxService@i,f,c
  7773  0075B2                     i2l3749:
  7774                           
  7775                           ; BSR set to: 0
  7776  0075B2  502B               	movf	USBCtrlTrfRxService@byteToRead,w,c
  7777  0075B4  5C2A               	subwf	USBCtrlTrfRxService@i,w,c
  7778  0075B6  E3ED               	bnc	i2l3743
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;usb_device.c: 1877: }
  7782                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  7783  0075B8  5165               	movf	(_outPipes+5)& (0+255),w,b	;volatile
  7784  0075BA  1164               	iorwf	(_outPipes+4)& (0+255),w,b	;volatile
  7785  0075BC  E02D               	bz	i2l3763
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;usb_device.c: 1882: {
  7789                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  7790  0075BE  EE20 F001          	lfsr	2,1
  7791  0075C2  5007               	movf	_pBDTEntryEP0OutNext,w,c
  7792  0075C4  26D9               	addwf	fsr2l,f,c
  7793  0075C6  5008               	movf	_pBDTEntryEP0OutNext+1,w,c
  7794  0075C8  22DA               	addwfc	fsr2h,f,c
  7795  0075CA  0E08               	movlw	8
  7796  0075CC  6EDF               	movwf	indf2,c
  7797                           
  7798                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  7799  0075CE  EE20 F002          	lfsr	2,2
  7800  0075D2  5007               	movf	_pBDTEntryEP0OutNext,w,c
  7801  0075D4  26D9               	addwf	fsr2l,f,c
  7802  0075D6  5008               	movf	_pBDTEntryEP0OutNext+1,w,c
  7803  0075D8  22DA               	addwfc	fsr2h,f,c
  7804  0075DA  0E28               	movlw	40
  7805  0075DC  6EDE               	movwf	postinc2,c
  7806  0075DE  0E04               	movlw	4
  7807  0075E0  6EDD               	movwf	postdec2,c
  7808                           
  7809                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  7810  0075E2  C005  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7811  0075E6  C006  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7812  0075EA  50DF               	movf	indf2,w,c
  7813  0075EC  6E29               	movwf	??_USBCtrlTrfRxService& (0+255),c
  7814  0075EE  BC29               	btfsc	??_USBCtrlTrfRxService,6,c
  7815  0075F0  D00D               	goto	i2l3759
  7816                           
  7817                           ; BSR set to: 0
  7818                           ;usb_device.c: 1886: {
  7819                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  7820  0075F2  C007  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7821  0075F6  C008  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7822  0075FA  0E48               	movlw	72
  7823  0075FC  6EDF               	movwf	indf2,c
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7827  0075FE  C007  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7828  007602  C008  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7829  007606  0E00               	movlw	0
  7830  007608  8EDB               	bsf	plusw2,7,c
  7831                           
  7832                           ;usb_device.c: 1889: }
  7833  00760A  D039               	goto	i2l256
  7834  00760C                     i2l3759:
  7835                           
  7836                           ; BSR set to: 0
  7837                           ;usb_device.c: 1890: else
  7838                           ;usb_device.c: 1891: {
  7839                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  7840  00760C  C007  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7841  007610  C008  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7842  007614  0E08               	movlw	8
  7843  007616  D7F2               	goto	L15
  7844  007618                     i2l3763:
  7845                           
  7846                           ; BSR set to: 0
  7847                           ;usb_device.c: 1896: else
  7848                           ;usb_device.c: 1897: {
  7849                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  7850  007618  EE20 F001          	lfsr	2,1
  7851  00761C  5007               	movf	_pBDTEntryEP0OutNext,w,c
  7852  00761E  26D9               	addwf	fsr2l,f,c
  7853  007620  5008               	movf	_pBDTEntryEP0OutNext+1,w,c
  7854  007622  22DA               	addwfc	fsr2h,f,c
  7855  007624  0E08               	movlw	8
  7856  007626  6EDF               	movwf	indf2,c
  7857                           
  7858                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  7859  007628  EE20 F002          	lfsr	2,2
  7860  00762C  5007               	movf	_pBDTEntryEP0OutNext,w,c
  7861  00762E  26D9               	addwf	fsr2l,f,c
  7862  007630  5008               	movf	_pBDTEntryEP0OutNext+1,w,c
  7863  007632  22DA               	addwfc	fsr2h,f,c
  7864  007634  0E20               	movlw	32
  7865  007636  6EDE               	movwf	postinc2,c
  7866  007638  0E04               	movlw	4
  7867  00763A  6EDD               	movwf	postdec2,c
  7868                           
  7869                           ; BSR set to: 0
  7870                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  7871  00763C  C007  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7872  007640  C008  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7873  007644  6EDF               	movwf	indf2,c
  7874                           
  7875                           ; BSR set to: 0
  7876                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7877  007646  C007  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7878  00764A  C008  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7879  00764E  0E00               	movlw	0
  7880  007650  8EDB               	bsf	plusw2,7,c
  7881                           
  7882                           ; BSR set to: 0
  7883                           ;usb_device.c: 1914: if(outPipes[0].pFunc != (0))
  7884  007652  5167               	movf	(_outPipes+7)& (0+255),w,b	;volatile
  7885  007654  1166               	iorwf	(_outPipes+6)& (0+255),w,b	;volatile
  7886  007656  E00E               	bz	i2l3773
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;usb_device.c: 1915: {
  7890                           ;usb_device.c: 1921: outPipes[0].pFunc();
  7891  007658  EE20  F066         	lfsr	2,_outPipes+6	;volatile
  7892  00765C  D801               	call	i2u270_48
  7893  00765E  D00A               	goto	i2l3773
  7894  007660                     i2u270_48:
  7895  007660  0005               	push	
  7896  007662  6EFA               	movwf	pclath,c
  7897  007664  50DE               	movf	postinc2,w,c
  7898  007666  6EFD               	movwf	tosl,c
  7899  007668  50DE               	movf	postinc2,w,c
  7900  00766A  6EFE               	movwf	tosh,c
  7901  00766C  50F8               	movf	tblptru,w,c
  7902  00766E  6EFF               	movwf	tosu,c
  7903  007670  50FA               	movf	pclath,w,c
  7904  007672  0012               	return		;indir
  7905  007674                     i2l3773:
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;usb_device.c: 1926: }
  7909                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  7910  007674  9F63               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  7914  007676  6611               	tstfsz	_USBDeferStatusStagePacket,c	;volatile
  7915  007678  D002               	goto	i2l256
  7916                           
  7917                           ; BSR set to: 0
  7918                           ;usb_device.c: 1942: {
  7919                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  7920  00767A  ECBB  F035         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7921  00767E                     i2l256:
  7922                           
  7923                           ; BSR set to: 0
  7924  00767E  0012               	return	
  7925  007680                     __end_of_USBCtrlTrfRxService:
  7926                           	opt stack 0
  7927                           tosu	equ	0xFFF
  7928                           tosh	equ	0xFFE
  7929                           tosl	equ	0xFFD
  7930                           pclatu	equ	0xFFB
  7931                           pclath	equ	0xFFA
  7932                           tblptru	equ	0xFF8
  7933                           tblptrh	equ	0xFF7
  7934                           tblptrl	equ	0xFF6
  7935                           tablat	equ	0xFF5
  7936                           prodh	equ	0xFF4
  7937                           prodl	equ	0xFF3
  7938                           intcon	equ	0xFF2
  7939                           intcon2	equ	0xFF1
  7940                           intcon3	equ	0xFF0
  7941                           postinc0	equ	0xFEE
  7942                           fsr0h	equ	0xFEA
  7943                           fsr0l	equ	0xFE9
  7944                           wreg	equ	0xFE8
  7945                           indf1	equ	0xFE7
  7946                           fsr1h	equ	0xFE2
  7947                           fsr1l	equ	0xFE1
  7948                           bsr	equ	0xFE0
  7949                           indf2	equ	0xFDF
  7950                           postinc2	equ	0xFDE
  7951                           postdec2	equ	0xFDD
  7952                           plusw2	equ	0xFDB
  7953                           fsr2h	equ	0xFDA
  7954                           fsr2l	equ	0xFD9
  7955                           status	equ	0xFD8
  7956                           
  7957 ;; *************** function _USBCtrlTrfSetupHandler *****************
  7958 ;; Defined at:
  7959 ;;		line 2470 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_
      +device.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;		None
  7962 ;; Auto vars:     Size  Location     Type
  7963 ;;		None
  7964 ;; Return value:  Size  Location     Type
  7965 ;;		None               void
  7966 ;; Registers used:
  7967 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7968 ;; Tracked objects:
  7969 ;;		On entry : F/4
  7970 ;;		On exit  : F/0
  7971 ;;		Unchanged: 0/0
  7972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7973 ;;      Params:         0       0       0       0       0       0       0       0       0
  7974 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7975 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7976 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7977 ;;Total ram usage:        0 bytes
  7978 ;; Hardware stack levels used:    1
  7979 ;; Hardware stack levels required when called:    6
  7980 ;; This function calls:
  7981 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7982 ;;		_USBCtrlEPServiceComplete
  7983 ;;		_USBCheckStdRequest
  7984 ;; This function is called by:
  7985 ;;		_USBCtrlEPService
  7986 ;; This function uses a non-reentrant model
  7987 ;;
  7988                           
  7989                           	psect	text45
  7990  006656                     __ptext45:
  7991                           	opt stack 0
  7992  006656                     _USBCtrlTrfSetupHandler:
  7993                           	opt stack 12
  7994                           
  7995                           ; BSR set to: 4
  7996                           ;usb_device.c: 2474: shortPacketStatus = 0;
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;incstack = 0
  8000                           ;incstack = 0
  8001  006656  6A23               	clrf	_shortPacketStatus,c	;volatile
  8002                           
  8003                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
  8004  006658  6A11               	clrf	_USBDeferStatusStagePacket,c	;volatile
  8005                           
  8006                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
  8007  00665A  6A0F               	clrf	_USBDeferINDataStagePackets,c	;volatile
  8008                           
  8009                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
  8010  00665C  6A10               	clrf	_USBDeferOUTDataStagePackets,c	;volatile
  8011                           
  8012                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
  8013  00665E  6A0D               	clrf	_BothEP0OutUOWNsSet,c	;volatile
  8014                           
  8015                           ;usb_device.c: 2479: controlTransferState = 0;
  8016  006660  6A15               	clrf	_controlTransferState,c	;volatile
  8017                           
  8018                           ; BSR set to: 4
  8019                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8020  006662  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
  8021  006666  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8022  00666A  0E7F               	movlw	127
  8023  00666C  16DF               	andwf	indf2,f,c
  8024                           
  8025                           ; BSR set to: 4
  8026                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8027  00666E  0E04               	movlw	4
  8028  006670  0100               	movlb	0	; () banked
  8029  006672  1B6C               	xorwf	_pBDTEntryIn& (0+255),f,b
  8030                           
  8031                           ; BSR set to: 0
  8032                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8033  006674  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
  8034  006678  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8035  00667C  0E7F               	movlw	127
  8036  00667E  16DF               	andwf	indf2,f,c
  8037                           
  8038                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8039  006680  0E04               	movlw	4
  8040  006682  1B6C               	xorwf	_pBDTEntryIn& (0+255),f,b
  8041                           
  8042                           ; BSR set to: 0
  8043                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  8044  006684  C007  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8045  006688  C008  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8046  00668C  0E7F               	movlw	127
  8047  00668E  16DF               	andwf	indf2,f,c
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
  8051  006690  6BB6               	clrf	(_inPipes+3)& (0+255),b	;volatile
  8052                           
  8053                           ; BSR set to: 0
  8054                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
  8055  006692  6BB7               	clrf	(_inPipes+4)& (0+255),b	;volatile
  8056  006694  6BB8               	clrf	(_inPipes+5)& (0+255),b	;volatile
  8057                           
  8058                           ; BSR set to: 0
  8059                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
  8060  006696  6B63               	clrf	(_outPipes+3)& (0+255),b	;volatile
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
  8064  006698  6B64               	clrf	(_outPipes+4)& (0+255),b	;volatile
  8065  00669A  6B65               	clrf	(_outPipes+5)& (0+255),b	;volatile
  8066                           
  8067                           ; BSR set to: 0
  8068                           ;usb_device.c: 2503: USBCheckStdRequest();
  8069  00669C  ECCD  F036         	call	_USBCheckStdRequest	;wreg free
  8070                           
  8071                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  8072  0066A0  6A3A               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1,c
  8073  0066A2  0E03               	movlw	3
  8074  0066A4  6E39               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER,c
  8075  0066A6  0E00               	movlw	0
  8076  0066A8  6A3C               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3,c
  8077  0066AA  6A3B               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2,c
  8078  0066AC  6A3E               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+5,c
  8079  0066AE  6A3D               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4,c
  8080  0066B0  EC63  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8081                           
  8082                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
  8083  0066B4  EF5A  F038         	goto	_USBCtrlEPServiceComplete	;wreg free
  8084  0066B8                     __end_of_USBCtrlTrfSetupHandler:
  8085                           	opt stack 0
  8086                           tosu	equ	0xFFF
  8087                           tosh	equ	0xFFE
  8088                           tosl	equ	0xFFD
  8089                           pclatu	equ	0xFFB
  8090                           pclath	equ	0xFFA
  8091                           tblptru	equ	0xFF8
  8092                           tblptrh	equ	0xFF7
  8093                           tblptrl	equ	0xFF6
  8094                           tablat	equ	0xFF5
  8095                           prodh	equ	0xFF4
  8096                           prodl	equ	0xFF3
  8097                           intcon	equ	0xFF2
  8098                           intcon2	equ	0xFF1
  8099                           intcon3	equ	0xFF0
  8100                           postinc0	equ	0xFEE
  8101                           fsr0h	equ	0xFEA
  8102                           fsr0l	equ	0xFE9
  8103                           wreg	equ	0xFE8
  8104                           indf1	equ	0xFE7
  8105                           fsr1h	equ	0xFE2
  8106                           fsr1l	equ	0xFE1
  8107                           bsr	equ	0xFE0
  8108                           indf2	equ	0xFDF
  8109                           postinc2	equ	0xFDE
  8110                           postdec2	equ	0xFDD
  8111                           plusw2	equ	0xFDB
  8112                           fsr2h	equ	0xFDA
  8113                           fsr2l	equ	0xFD9
  8114                           status	equ	0xFD8
  8115                           
  8116 ;; *************** function _USBCheckStdRequest *****************
  8117 ;; Defined at:
  8118 ;;		line 2690 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_
      +device.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;		None
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;		None
  8123 ;; Return value:  Size  Location     Type
  8124 ;;		None               void
  8125 ;; Registers used:
  8126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  8127 ;; Tracked objects:
  8128 ;;		On entry : F/0
  8129 ;;		On exit  : 0/0
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8132 ;;      Params:         0       0       0       0       0       0       0       0       0
  8133 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8134 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8135 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8136 ;;Total ram usage:        1 bytes
  8137 ;; Hardware stack levels used:    1
  8138 ;; Hardware stack levels required when called:    5
  8139 ;; This function calls:
  8140 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8141 ;;		_USBStdSetCfgHandler
  8142 ;;		_USBStdGetDscHandler
  8143 ;;		_USBStdGetStatusHandler
  8144 ;;		_USBStdFeatureReqHandler
  8145 ;; This function is called by:
  8146 ;;		_USBCtrlTrfSetupHandler
  8147 ;; This function uses a non-reentrant model
  8148 ;;
  8149                           
  8150                           	psect	text46
  8151  006D9A                     __ptext46:
  8152                           	opt stack 0
  8153  006D9A                     _USBCheckStdRequest:
  8154                           	opt stack 12
  8155                           
  8156                           ; BSR set to: 0
  8157                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
  8158                           
  8159                           ; BSR set to: 0
  8160                           ;incstack = 0
  8161                           ;incstack = 0
  8162  006D9A  0104               	movlb	4	; () banked
  8163  006D9C  3920               	swapf	32,w,b	;volatile
  8164  006D9E  32E8               	rrcf	wreg,f,c
  8165  006DA0  0B03               	andlw	3
  8166  006DA2  E158               	bnz	i2l343
  8167  006DA4  D042               	goto	i2l3975
  8168  006DA6                     i2l345:
  8169                           
  8170                           ; BSR set to: 4
  8171                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
  8172  006DA6  0100               	movlb	0	; () banked
  8173  006DA8  8FB6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  8174                           
  8175                           ; BSR set to: 0
  8176                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
  8177  006DAA  0E08               	movlw	8
  8178  006DAC  6E12               	movwf	_USBDeviceState,c	;volatile
  8179                           
  8180                           ;usb_device.c: 2699: break;
  8181  006DAE  D052               	goto	i2l343
  8182  006DB0                     i2l3947:
  8183                           
  8184                           ; BSR set to: 4
  8185                           ;usb_device.c: 2701: USBStdGetDscHandler();
  8186  006DB0  ECAE  F039         	call	_USBStdGetDscHandler	;wreg free
  8187                           
  8188                           ;usb_device.c: 2702: break;
  8189  006DB4  D04F               	goto	i2l343
  8190  006DB6                     i2l3949:
  8191                           
  8192                           ; BSR set to: 4
  8193                           ;usb_device.c: 2704: USBStdSetCfgHandler();
  8194  006DB6  EC8C  F037         	call	_USBStdSetCfgHandler	;wreg free
  8195                           
  8196                           ;usb_device.c: 2705: break;
  8197  006DBA  D04C               	goto	i2l343
  8198  006DBC                     i2l3951:
  8199                           
  8200                           ; BSR set to: 4
  8201                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  8202  006DBC  0E24               	movlw	low _USBActiveConfiguration	;volatile
  8203  006DBE  0100               	movlb	0	; () banked
  8204  006DC0  6FB3               	movwf	_inPipes& (0+255),b	;volatile
  8205  006DC2  0E00               	movlw	high _USBActiveConfiguration	;volatile
  8206  006DC4  6FB4               	movwf	(_inPipes+1)& (0+255),b	;volatile
  8207  006DC6  0E0F               	movlw	15
  8208  006DC8  6FB4               	movwf	(_inPipes+1)& (0+255),b	;volatile
  8209  006DCA  0E5F               	movlw	__accesstop+-1
  8210  006DCC  65B3               	cpfsgt	_inPipes& (0+255),b	;volatile
  8211  006DCE  6BB4               	clrf	(_inPipes+1)& (0+255),b	;volatile
  8212  006DD0                     
  8213                           ; BSR set to: 0
  8214                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8215  006DD0  81B6               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
  8216                           
  8217                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
  8218  006DD2  0E01               	movlw	1
  8219  006DD4  6FB7               	movwf	(_inPipes+4)& (0+255),b	;volatile
  8220                           
  8221                           ; BSR set to: 0
  8222                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  8223  006DD6  8FB6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  8224                           
  8225                           ;usb_device.c: 2711: break;
  8226  006DD8  D03D               	goto	i2l343
  8227  006DDA                     i2l3957:
  8228                           
  8229                           ; BSR set to: 4
  8230                           ;usb_device.c: 2713: USBStdGetStatusHandler();
  8231  006DDA  ECDC  F033         	call	_USBStdGetStatusHandler	;wreg free
  8232                           
  8233                           ;usb_device.c: 2714: break;
  8234  006DDE  D03A               	goto	i2l343
  8235  006DE0                     i2l3959:
  8236                           
  8237                           ; BSR set to: 4
  8238                           ;usb_device.c: 2716: case 3:
  8239                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
  8240  006DE0  EC7A  F03D         	call	_USBStdFeatureReqHandler	;wreg free
  8241                           
  8242                           ;usb_device.c: 2718: break;
  8243  006DE4  D037               	goto	i2l343
  8244  006DE6                     i2l3961:
  8245                           
  8246                           ; BSR set to: 4
  8247                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  8248  006DE6  5124               	movf	36,w,b	;volatile
  8249  006DE8  0F25               	addlw	low _USBAlternateInterface	;volatile
  8250  006DEA  6E48               	movwf	??_USBCheckStdRequest& (0+255),c
  8251  006DEC  0100               	movlb	0	; () banked
  8252  006DEE  C048  F0B3         	movff	??_USBCheckStdRequest,_inPipes	;volatile
  8253  006DF2  0E60               	movlw	__accesstop
  8254  006DF4  61B3               	cpfslt	_inPipes& (0+255),b	;volatile
  8255  006DF6  D001               	goto	i2u296_40
  8256  006DF8  D7EA               	goto	L17
  8257  006DFA                     i2u296_40:
  8258  006DFA  0E0F               	movlw	15
  8259  006DFC  6FB4               	movwf	(_inPipes+1)& (0+255),b	;volatile
  8260  006DFE  D7E8               	goto	L16
  8261  006E00                     i2l354:
  8262                           
  8263                           ; BSR set to: 4
  8264                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
  8265  006E00  0100               	movlb	0	; () banked
  8266  006E02  8FB6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  8267                           
  8268                           ; BSR set to: 0
  8269                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  8270  006E04  0104               	movlb	4	; () banked
  8271  006E06  5124               	movf	36,w,b	;volatile
  8272  006E08  0F25               	addlw	low _USBAlternateInterface	;volatile
  8273  006E0A  6ED9               	movwf	fsr2l,c
  8274  006E0C  6ADA               	clrf	fsr2h,c
  8275  006E0E  C422 FFDF          	movff	1058,indf2	;volatile
  8276                           
  8277                           ;usb_device.c: 2728: break;
  8278  006E12  D020               	goto	i2l343
  8279  006E14                     i2l3971:
  8280                           
  8281                           ; BSR set to: 4
  8282                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  8283  006E14  6A3A               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1,c
  8284  006E16  0E02               	movlw	2
  8285  006E18  6E39               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER,c
  8286  006E1A  0E00               	movlw	0
  8287  006E1C  6A3C               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3,c
  8288  006E1E  6A3B               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2,c
  8289  006E20  6A3E               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+5,c
  8290  006E22  6A3D               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4,c
  8291  006E24  EC63  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8292                           
  8293                           ;usb_device.c: 2731: break;
  8294  006E28  D015               	goto	i2l343
  8295  006E2A                     i2l3975:
  8296                           
  8297                           ; BSR set to: 4
  8298  006E2A  5121               	movf	33,w,b	;volatile
  8299                           
  8300                           ; Switch size 1, requested type "speed"
  8301                           ; Number of cases is 11, Range of values is 0 to 12
  8302                           ; switch strategies available:
  8303                           ; Name         Instructions Cycles
  8304                           ; simple_byte           34    18 (average)
  8305                           ;	Chosen strategy is simple_byte
  8306  006E2C  E0D6               	bz	i2l3957
  8307  006E2E  0A01               	xorlw	1	; case 1
  8308  006E30  E0D7               	bz	i2l3959
  8309  006E32  0A02               	xorlw	2	; case 3
  8310  006E34  E0D5               	bz	i2l3959
  8311  006E36  0A06               	xorlw	6	; case 5
  8312  006E38  E0B6               	bz	i2l345
  8313  006E3A  0A03               	xorlw	3	; case 6
  8314  006E3C  E0B9               	bz	i2l3947
  8315  006E3E  0A01               	xorlw	1	; case 7
  8316  006E40  E0E9               	bz	i2l3971
  8317  006E42  0A0F               	xorlw	15	; case 8
  8318  006E44  E0BB               	bz	i2l3951
  8319  006E46  0A01               	xorlw	1	; case 9
  8320  006E48  E0B6               	bz	i2l3949
  8321  006E4A  0A03               	xorlw	3	; case 10
  8322  006E4C  E0CC               	bz	i2l3961
  8323  006E4E  0A01               	xorlw	1	; case 11
  8324  006E50  E0D7               	bz	i2l354
  8325  006E52  0A07               	xorlw	7	; case 12
  8326  006E54                     i2l343:
  8327  006E54  0012               	return	
  8328  006E56                     __end_of_USBCheckStdRequest:
  8329                           	opt stack 0
  8330                           tosu	equ	0xFFF
  8331                           tosh	equ	0xFFE
  8332                           tosl	equ	0xFFD
  8333                           pclatu	equ	0xFFB
  8334                           pclath	equ	0xFFA
  8335                           tblptru	equ	0xFF8
  8336                           tblptrh	equ	0xFF7
  8337                           tblptrl	equ	0xFF6
  8338                           tablat	equ	0xFF5
  8339                           prodh	equ	0xFF4
  8340                           prodl	equ	0xFF3
  8341                           intcon	equ	0xFF2
  8342                           intcon2	equ	0xFF1
  8343                           intcon3	equ	0xFF0
  8344                           postinc0	equ	0xFEE
  8345                           fsr0h	equ	0xFEA
  8346                           fsr0l	equ	0xFE9
  8347                           wreg	equ	0xFE8
  8348                           indf1	equ	0xFE7
  8349                           fsr1h	equ	0xFE2
  8350                           fsr1l	equ	0xFE1
  8351                           bsr	equ	0xFE0
  8352                           indf2	equ	0xFDF
  8353                           postinc2	equ	0xFDE
  8354                           postdec2	equ	0xFDD
  8355                           plusw2	equ	0xFDB
  8356                           fsr2h	equ	0xFDA
  8357                           fsr2l	equ	0xFD9
  8358                           status	equ	0xFD8
  8359                           
  8360 ;; *************** function _USBStdFeatureReqHandler *****************
  8361 ;; Defined at:
  8362 ;;		line 2758 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_
      +device.c"
  8363 ;; Parameters:    Size  Location     Type
  8364 ;;		None
  8365 ;; Auto vars:     Size  Location     Type
  8366 ;;  p               2   30[COMRAM] PTR struct __BDT
  8367 ;;		 -> NULL(0), BDT(32), 
  8368 ;;  pUEP            2   27[COMRAM] PTR unsigned char 
  8369 ;;		 -> UEP0(1), 
  8370 ;;  current_ep_d    1   29[COMRAM] struct .
  8371 ;; Return value:  Size  Location     Type
  8372 ;;		None               void
  8373 ;; Registers used:
  8374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  8375 ;; Tracked objects:
  8376 ;;		On entry : B/4
  8377 ;;		On exit  : B/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8380 ;;      Params:         0       0       0       0       0       0       0       0       0
  8381 ;;      Locals:         5       0       0       0       0       0       0       0       0
  8382 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8383 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8384 ;;Total ram usage:        7 bytes
  8385 ;; Hardware stack levels used:    1
  8386 ;; Hardware stack levels required when called:    4
  8387 ;; This function calls:
  8388 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8389 ;; This function is called by:
  8390 ;;		_USBCheckStdRequest
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394                           	psect	text47
  8395  007AF4                     __ptext47:
  8396                           	opt stack 0
  8397  007AF4                     _USBStdFeatureReqHandler:
  8398                           	opt stack 12
  8399                           
  8400                           ;usb_device.c: 2759: BDT_ENTRY *p;
  8401                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
  8402                           ;usb_device.c: 2764: unsigned char* pUEP;
  8403                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
  8404                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
  8405                           
  8406                           ;incstack = 0
  8407                           ;incstack = 0
  8408  007AF4  0104               	movlb	4	; () banked
  8409  007AF6  0522               	decf	34,w,b	;volatile
  8410  007AF8  E10D               	bnz	i2l360
  8411                           
  8412                           ; BSR set to: 4
  8413  007AFA  5120               	movf	32,w,b	;volatile
  8414  007AFC  0B1F               	andlw	31
  8415  007AFE  E10A               	bnz	i2l360
  8416                           
  8417                           ; BSR set to: 4
  8418                           ;usb_device.c: 2804: {
  8419                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
  8420  007B00  0100               	movlb	0	; () banked
  8421  007B02  8FB6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
  8425  007B04  0104               	movlb	4	; () banked
  8426  007B06  5121               	movf	33,w,b	;volatile
  8427  007B08  0A03               	xorlw	3
  8428  007B0A  E103               	bnz	i2l361
  8429                           
  8430                           ; BSR set to: 4
  8431                           ;usb_device.c: 2807: RemoteWakeup = 1;
  8432  007B0C  0E01               	movlw	1
  8433  007B0E  6E0E               	movwf	_RemoteWakeup,c	;volatile
  8434  007B10  D001               	goto	i2l360
  8435  007B12                     i2l361:
  8436                           
  8437                           ; BSR set to: 4
  8438                           ;usb_device.c: 2808: else
  8439                           ;usb_device.c: 2809: RemoteWakeup = 0;
  8440  007B12  6A0E               	clrf	_RemoteWakeup,c	;volatile
  8441  007B14                     i2l360:
  8442                           
  8443                           ; BSR set to: 4
  8444                           ;usb_device.c: 2810: }
  8445                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
  8446                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
  8447                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
  8448                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
  8449  007B14  6722               	tstfsz	34,b	;volatile
  8450  007B16  D0F9               	goto	i2l383
  8451                           
  8452                           ; BSR set to: 4
  8453  007B18  5120               	movf	32,w,b	;volatile
  8454  007B1A  0B1F               	andlw	31
  8455  007B1C  0A02               	xorlw	2
  8456  007B1E  E001 D0F4          	bnz	i2l383
  8457                           
  8458                           ; BSR set to: 4
  8459  007B22  5124               	movf	36,w,b	;volatile
  8460  007B24  0B0F               	andlw	15
  8461  007B26  E101 D0F0          	bz	i2l383
  8462                           
  8463                           ; BSR set to: 4
  8464  007B2A  5124               	movf	36,w,b	;volatile
  8465  007B2C  0B0F               	andlw	15
  8466  007B2E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8467  007B30  0E02               	movlw	2
  8468  007B32  5C41               	subwf	??_USBStdFeatureReqHandler,w,c
  8469  007B34  E301 D0E9          	bc	i2l383
  8470                           
  8471                           ; BSR set to: 4
  8472  007B38  5012               	movf	_USBDeviceState,w,c	;volatile
  8473  007B3A  0A20               	xorlw	32
  8474  007B3C  E001 D0E5          	bnz	i2l383
  8475                           
  8476                           ; BSR set to: 4
  8477                           ;usb_device.c: 2817: {
  8478                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
  8479  007B40  0100               	movlb	0	; () banked
  8480  007B42  8FB6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  8481                           
  8482                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
  8483  007B44  0104               	movlb	4	; () banked
  8484  007B46  BF24               	btfsc	36,7,b	;volatile
  8485  007B48  D011               	goto	i2l4001
  8486                           
  8487                           ; BSR set to: 4
  8488                           ;usb_device.c: 2824: {
  8489                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  8490  007B4A  5124               	movf	36,w,b	;volatile
  8491  007B4C  0B0F               	andlw	15
  8492  007B4E  0D02               	mullw	2
  8493  007B50  50F3               	movf	prodl,w,c
  8494  007B52  0F70               	addlw	low _pBDTEntryOut
  8495  007B54  6ED9               	movwf	fsr2l,c
  8496  007B56  6ADA               	clrf	fsr2h,c
  8497  007B58  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
  8498  007B5C  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  8502  007B60  5124               	movf	36,w,b	;volatile
  8503  007B62  0B0F               	andlw	15
  8504  007B64  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8505  007B66  5041               	movf	??_USBStdFeatureReqHandler,w,c
  8506  007B68  0F7A               	addlw	low _ep_data_out	;volatile
  8507  007B6A  D011               	goto	L18
  8508  007B6C                     i2l4001:
  8509                           
  8510                           ; BSR set to: 4
  8511                           ;usb_device.c: 2828: else
  8512                           ;usb_device.c: 2829: {
  8513                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  8514  007B6C  5124               	movf	36,w,b	;volatile
  8515  007B6E  0B0F               	andlw	15
  8516  007B70  0D02               	mullw	2
  8517  007B72  50F3               	movf	prodl,w,c
  8518  007B74  0F6C               	addlw	low _pBDTEntryIn
  8519  007B76  6ED9               	movwf	fsr2l,c
  8520  007B78  6ADA               	clrf	fsr2h,c
  8521  007B7A  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
  8522  007B7E  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
  8523                           
  8524                           ; BSR set to: 0
  8525                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  8526  007B82  0104               	movlb	4	; () banked
  8527  007B84  5124               	movf	36,w,b	;volatile
  8528  007B86  0B0F               	andlw	15
  8529  007B88  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8530  007B8A  5041               	movf	??_USBStdFeatureReqHandler,w,c
  8531  007B8C  0F78               	addlw	low _ep_data_in	;volatile
  8532  007B8E                     L18:
  8533  007B8E  6ED9               	movwf	fsr2l,c
  8534  007B90  6ADA               	clrf	fsr2h,c
  8535  007B92  50DF               	movf	indf2,w,c
  8536  007B94  6E45               	movwf	USBStdFeatureReqHandler@current_ep_data,c
  8537                           
  8538                           ; BSR set to: 0
  8539                           ;usb_device.c: 2832: }
  8540                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
  8541  007B96  B045               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
  8542  007B98  D002               	goto	i2l4009
  8543                           
  8544                           ; BSR set to: 0
  8545                           ;usb_device.c: 2839: {
  8546                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  8547  007B9A  9446               	bcf	USBStdFeatureReqHandler@p,2,c
  8548                           
  8549                           ;usb_device.c: 2841: }
  8550  007B9C  D001               	goto	i2l4011
  8551  007B9E                     i2l4009:
  8552                           
  8553                           ; BSR set to: 0
  8554                           ;usb_device.c: 2842: else
  8555                           ;usb_device.c: 2843: {
  8556                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  8557  007B9E  8446               	bsf	USBStdFeatureReqHandler@p,2,c
  8558  007BA0                     i2l4011:
  8559                           
  8560                           ; BSR set to: 0
  8561                           ;usb_device.c: 2845: }
  8562                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
  8563  007BA0  0104               	movlb	4	; () banked
  8564  007BA2  BF24               	btfsc	36,7,b	;volatile
  8565  007BA4  D006               	goto	i2l4015
  8566                           
  8567                           ; BSR set to: 4
  8568                           ;usb_device.c: 2851: {
  8569                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  8570  007BA6  5124               	movf	36,w,b	;volatile
  8571  007BA8  0B0F               	andlw	15
  8572  007BAA  0D02               	mullw	2
  8573  007BAC  50F3               	movf	prodl,w,c
  8574  007BAE  0F70               	addlw	low _pBDTEntryOut
  8575  007BB0  D005               	goto	L19
  8576  007BB2                     i2l4015:
  8577                           
  8578                           ; BSR set to: 4
  8579                           ;usb_device.c: 2854: else
  8580                           ;usb_device.c: 2855: {
  8581                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  8582  007BB2  5124               	movf	36,w,b	;volatile
  8583  007BB4  0B0F               	andlw	15
  8584  007BB6  0D02               	mullw	2
  8585  007BB8  50F3               	movf	prodl,w,c
  8586  007BBA  0F6C               	addlw	low _pBDTEntryIn
  8587  007BBC                     L19:
  8588  007BBC  6ED9               	movwf	fsr2l,c
  8589  007BBE  6ADA               	clrf	fsr2h,c
  8590  007BC0  C046  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  8591  007BC4  C047  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  8592                           
  8593                           ; BSR set to: 0
  8594                           ;usb_device.c: 2857: }
  8595                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
  8596  007BC8  0104               	movlb	4	; () banked
  8597  007BCA  5121               	movf	33,w,b	;volatile
  8598  007BCC  0A03               	xorlw	3
  8599  007BCE  E127               	bnz	i2l4027
  8600                           
  8601                           ; BSR set to: 4
  8602                           ;usb_device.c: 2861: {
  8603                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
  8604  007BD0  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8605  007BD4  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8606  007BD8  50DF               	movf	indf2,w,c
  8607  007BDA  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8608  007BDC  AE41               	btfss	??_USBStdFeatureReqHandler,7,c
  8609  007BDE  D013               	goto	i2l371
  8610                           
  8611                           ; BSR set to: 4
  8612                           ;usb_device.c: 2863: {
  8613                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
  8614  007BE0  BF24               	btfsc	36,7,b	;volatile
  8615  007BE2  D007               	goto	i2l4025
  8616                           
  8617                           ; BSR set to: 4
  8618                           ;usb_device.c: 2867: {
  8619                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  8620  007BE4  5124               	movf	36,w,b	;volatile
  8621  007BE6  0B0F               	andlw	15
  8622  007BE8  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8623  007BEA  5041               	movf	??_USBStdFeatureReqHandler,w,c
  8624  007BEC  0100               	movlb	0	; () banked
  8625  007BEE  0F7A               	addlw	low _ep_data_out	;volatile
  8626  007BF0  D006               	goto	L20
  8627  007BF2                     i2l4025:
  8628                           
  8629                           ; BSR set to: 4
  8630                           ;usb_device.c: 2870: else
  8631                           ;usb_device.c: 2871: {
  8632                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  8633  007BF2  5124               	movf	36,w,b	;volatile
  8634  007BF4  0B0F               	andlw	15
  8635  007BF6  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8636  007BF8  5041               	movf	??_USBStdFeatureReqHandler,w,c
  8637  007BFA  0100               	movlb	0	; () banked
  8638  007BFC  0F78               	addlw	low _ep_data_in	;volatile
  8639  007BFE                     L20:
  8640  007BFE  6ED9               	movwf	fsr2l,c
  8641  007C00  6ADA               	clrf	fsr2h,c
  8642  007C02  0E02               	movlw	2
  8643  007C04  12DF               	iorwf	223,f,c
  8644  007C06                     i2l371:
  8645                           
  8646                           ;usb_device.c: 2873: }
  8647                           ;usb_device.c: 2874: }
  8648                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
  8649  007C06  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8650  007C0A  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8651  007C0E  0E00               	movlw	0
  8652  007C10  84DB               	bsf	plusw2,2,c
  8653                           
  8654                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
  8655  007C12  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8656  007C16  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8657  007C1A  8EDB               	bsf	plusw2,7,c
  8658                           
  8659                           ;usb_device.c: 2879: }
  8660  007C1C  D076               	goto	i2l383
  8661  007C1E                     i2l4027:
  8662                           
  8663                           ; BSR set to: 4
  8664                           ;usb_device.c: 2880: else
  8665                           ;usb_device.c: 2881: {
  8666                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  8667  007C1E  0E04               	movlw	4
  8668  007C20  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
  8669                           
  8670                           ; BSR set to: 4
  8671                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
  8672  007C22  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8673  007C26  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8674  007C2A  50DF               	movf	indf2,w,c
  8675  007C2C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8676  007C2E  AE41               	btfss	??_USBStdFeatureReqHandler,7,c
  8677  007C30  D019               	goto	i2l4037
  8678                           
  8679                           ; BSR set to: 4
  8680                           ;usb_device.c: 2888: {
  8681                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
  8682  007C32  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8683  007C36  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8684  007C3A  0E7F               	movlw	127
  8685  007C3C  16DF               	andwf	indf2,f,c
  8686                           
  8687                           ; BSR set to: 4
  8688                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
  8689  007C3E  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8690  007C42  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8691  007C46  0E00               	movlw	0
  8692  007C48  8CDB               	bsf	plusw2,6,c
  8693                           
  8694                           ; BSR set to: 4
  8695                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  8696  007C4A  6A3A               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1,c
  8697  007C4C  0E05               	movlw	5
  8698  007C4E  6E39               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER,c
  8699  007C50  C046  F03B         	movff	USBStdFeatureReqHandler@p,?_USER_USB_CALLBACK_EVENT_HANDLER+2
  8700  007C54  C047  F03C         	movff	USBStdFeatureReqHandler@p+1,?_USER_USB_CALLBACK_EVENT_HANDLER+3
  8701  007C58  6A3E               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+5,c
  8702  007C5A  0E02               	movlw	2
  8703  007C5C  6E3D               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4,c
  8704  007C5E  EC63  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8705                           
  8706                           ;usb_device.c: 2894: }
  8707  007C62  D006               	goto	i2l4039
  8708  007C64                     i2l4037:
  8709                           
  8710                           ; BSR set to: 4
  8711                           ;usb_device.c: 2895: else
  8712                           ;usb_device.c: 2896: {
  8713                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
  8714  007C64  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8715  007C68  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8716  007C6C  0E00               	movlw	0
  8717  007C6E  8CDB               	bsf	plusw2,6,c
  8718  007C70                     i2l4039:
  8719                           
  8720                           ;usb_device.c: 2899: }
  8721                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  8722  007C70  0E04               	movlw	4
  8723  007C72  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
  8724                           
  8725                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  8726  007C74  B245               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
  8727  007C76  D008               	goto	i2l379
  8728  007C78  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8729  007C7C  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8730  007C80  50DF               	movf	indf2,w,c
  8731  007C82  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8732  007C84  AE41               	btfss	??_USBStdFeatureReqHandler,7,c
  8733  007C86  D027               	goto	i2l4053
  8734  007C88                     i2l379:
  8735                           
  8736                           ;usb_device.c: 2910: {
  8737                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
  8738  007C88  0104               	movlb	4	; () banked
  8739  007C8A  BF24               	btfsc	36,7,b	;volatile
  8740  007C8C  D007               	goto	i2l4047
  8741                           
  8742                           ; BSR set to: 4
  8743                           ;usb_device.c: 2912: {
  8744                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  8745  007C8E  5124               	movf	36,w,b	;volatile
  8746  007C90  0B0F               	andlw	15
  8747  007C92  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8748  007C94  5041               	movf	??_USBStdFeatureReqHandler,w,c
  8749  007C96  0100               	movlb	0	; () banked
  8750  007C98  0F7A               	addlw	low _ep_data_out	;volatile
  8751  007C9A  D006               	goto	L21
  8752  007C9C                     i2l4047:
  8753                           
  8754                           ; BSR set to: 4
  8755                           ;usb_device.c: 2915: else
  8756                           ;usb_device.c: 2916: {
  8757                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  8758  007C9C  5124               	movf	36,w,b	;volatile
  8759  007C9E  0B0F               	andlw	15
  8760  007CA0  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8761  007CA2  5041               	movf	??_USBStdFeatureReqHandler,w,c
  8762  007CA4  0100               	movlb	0	; () banked
  8763  007CA6  0F78               	addlw	low _ep_data_in	;volatile
  8764  007CA8                     L21:
  8765  007CA8  6ED9               	movwf	fsr2l,c
  8766  007CAA  6ADA               	clrf	fsr2h,c
  8767  007CAC  0EFD               	movlw	-3
  8768  007CAE  16DF               	andwf	223,f,c
  8769                           
  8770                           ; BSR set to: 0
  8771                           ;usb_device.c: 2918: }
  8772                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  8773  007CB0  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8774  007CB4  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8775  007CB8  0E3B               	movlw	59
  8776  007CBA  16DF               	andwf	indf2,f,c
  8777                           
  8778                           ; BSR set to: 0
  8779                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  8780  007CBC  6A3A               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1,c
  8781  007CBE  0E05               	movlw	5
  8782  007CC0  6E39               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER,c
  8783  007CC2  C046  F03B         	movff	USBStdFeatureReqHandler@p,?_USER_USB_CALLBACK_EVENT_HANDLER+2
  8784  007CC6  C047  F03C         	movff	USBStdFeatureReqHandler@p+1,?_USER_USB_CALLBACK_EVENT_HANDLER+3
  8785  007CCA  6A3E               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+5,c
  8786  007CCC  0E02               	movlw	2
  8787  007CCE  6E3D               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4,c
  8788  007CD0  EC63  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8789                           
  8790                           ;usb_device.c: 2924: }
  8791  007CD4  D006               	goto	i2l4055
  8792  007CD6                     i2l4053:
  8793                           
  8794                           ;usb_device.c: 2925: else
  8795                           ;usb_device.c: 2926: {
  8796                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  8797  007CD6  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  8798  007CDA  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  8799  007CDE  0E3B               	movlw	59
  8800  007CE0  16DF               	andwf	indf2,f,c
  8801  007CE2                     i2l4055:
  8802                           
  8803                           ;usb_device.c: 2929: }
  8804                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  8805  007CE2  0E70               	movlw	112	;volatile
  8806  007CE4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
  8807  007CE6  0E0F               	movlw	15	;volatile
  8808  007CE8  6E42               	movwf	(??_USBStdFeatureReqHandler+1)& (0+255),c
  8809  007CEA  0104               	movlb	4	; () banked
  8810  007CEC  5124               	movf	36,w,b	;volatile
  8811  007CEE  0B0F               	andlw	15
  8812  007CF0  2641               	addwf	??_USBStdFeatureReqHandler,f,c
  8813  007CF2  0E00               	movlw	0
  8814  007CF4  2242               	addwfc	??_USBStdFeatureReqHandler+1,f,c
  8815  007CF6  C041  F043         	movff	??_USBStdFeatureReqHandler,USBStdFeatureReqHandler@pUEP
  8816  007CFA  C042  F044         	movff	??_USBStdFeatureReqHandler+1,USBStdFeatureReqHandler@pUEP+1
  8817                           
  8818                           ; BSR set to: 4
  8819                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
  8820  007CFE  C043  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  8821  007D02  C044  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  8822  007D06  0EFE               	movlw	254
  8823  007D08  16DF               	andwf	indf2,f,c
  8824  007D0A                     i2l383:
  8825  007D0A  0012               	return	
  8826  007D0C                     __end_of_USBStdFeatureReqHandler:
  8827                           	opt stack 0
  8828                           tosu	equ	0xFFF
  8829                           tosh	equ	0xFFE
  8830                           tosl	equ	0xFFD
  8831                           pclatu	equ	0xFFB
  8832                           pclath	equ	0xFFA
  8833                           tblptru	equ	0xFF8
  8834                           tblptrh	equ	0xFF7
  8835                           tblptrl	equ	0xFF6
  8836                           tablat	equ	0xFF5
  8837                           prodh	equ	0xFF4
  8838                           prodl	equ	0xFF3
  8839                           intcon	equ	0xFF2
  8840                           intcon2	equ	0xFF1
  8841                           intcon3	equ	0xFF0
  8842                           postinc0	equ	0xFEE
  8843                           fsr0h	equ	0xFEA
  8844                           fsr0l	equ	0xFE9
  8845                           wreg	equ	0xFE8
  8846                           indf1	equ	0xFE7
  8847                           fsr1h	equ	0xFE2
  8848                           fsr1l	equ	0xFE1
  8849                           bsr	equ	0xFE0
  8850                           indf2	equ	0xFDF
  8851                           postinc2	equ	0xFDE
  8852                           postdec2	equ	0xFDD
  8853                           plusw2	equ	0xFDB
  8854                           fsr2h	equ	0xFDA
  8855                           fsr2l	equ	0xFD9
  8856                           status	equ	0xFD8
  8857                           
  8858 ;; *************** function _USBStdGetStatusHandler *****************
  8859 ;; Defined at:
  8860 ;;		line 2130 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_
      +device.c"
  8861 ;; Parameters:    Size  Location     Type
  8862 ;;		None
  8863 ;; Auto vars:     Size  Location     Type
  8864 ;;  p               2    2[COMRAM] PTR struct __BDT
  8865 ;;		 -> NULL(0), BDT(32), 
  8866 ;; Return value:  Size  Location     Type
  8867 ;;		None               void
  8868 ;; Registers used:
  8869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8870 ;; Tracked objects:
  8871 ;;		On entry : B/4
  8872 ;;		On exit  : F/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8875 ;;      Params:         0       0       0       0       0       0       0       0       0
  8876 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8877 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8878 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8879 ;;Total ram usage:        3 bytes
  8880 ;; Hardware stack levels used:    1
  8881 ;; This function calls:
  8882 ;;		Nothing
  8883 ;; This function is called by:
  8884 ;;		_USBCheckStdRequest
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888                           	psect	text48
  8889  0067B8                     __ptext48:
  8890                           	opt stack 0
  8891  0067B8                     _USBStdGetStatusHandler:
  8892                           	opt stack 16
  8893                           
  8894                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  8895                           
  8896                           ;incstack = 0
  8897                           ;incstack = 0
  8898  0067B8  0104               	movlb	4	; () banked
  8899  0067BA  6B28               	clrf	40,b	;volatile
  8900                           
  8901                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  8902  0067BC  6B29               	clrf	41,b	;volatile
  8903                           
  8904                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  8905  0067BE  D035               	goto	i2l3859
  8906  0067C0                     i2l281:
  8907                           
  8908                           ; BSR set to: 4
  8909                           ;usb_device.c: 2142: if(1 == 1)
  8910  0067C0  0100               	movlb	0	; () banked
  8911  0067C2  8FB6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  8912                           
  8913                           ; BSR set to: 0
  8914                           ;usb_device.c: 2143: {
  8915                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
  8916  0067C4  0104               	movlb	4	; () banked
  8917  0067C6  8128               	bsf	40,0,b	;volatile
  8918                           
  8919                           ; BSR set to: 4
  8920                           ;usb_device.c: 2145: }
  8921                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  8922  0067C8  040E               	decf	_RemoteWakeup,w,c	;volatile
  8923  0067CA  E136               	bnz	i2l284
  8924                           
  8925                           ; BSR set to: 4
  8926                           ;usb_device.c: 2148: {
  8927                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  8928  0067CC  8328               	bsf	40,1,b	;volatile
  8929  0067CE  D034               	goto	i2l284
  8930  0067D0                     i2l285:
  8931                           
  8932                           ; BSR set to: 4
  8933                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  8934  0067D0  0100               	movlb	0	; () banked
  8935  0067D2  8FB6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  8936                           
  8937                           ;usb_device.c: 2154: break;
  8938  0067D4  D031               	goto	i2l284
  8939  0067D6                     i2l286:
  8940                           
  8941                           ; BSR set to: 4
  8942                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  8943  0067D6  0100               	movlb	0	; () banked
  8944  0067D8  8FB6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  8945                           
  8946                           ;usb_device.c: 2160: {
  8947                           ;usb_device.c: 2161: BDT_ENTRY *p;
  8948                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  8949  0067DA  0104               	movlb	4	; () banked
  8950  0067DC  BF24               	btfsc	36,7,b	;volatile
  8951  0067DE  D006               	goto	i2l3849
  8952                           
  8953                           ; BSR set to: 4
  8954                           ;usb_device.c: 2164: {
  8955                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  8956  0067E0  5124               	movf	36,w,b	;volatile
  8957  0067E2  0B0F               	andlw	15
  8958  0067E4  0D02               	mullw	2
  8959  0067E6  50F3               	movf	prodl,w,c
  8960  0067E8  0F70               	addlw	low _pBDTEntryOut
  8961  0067EA  D005               	goto	L22
  8962  0067EC                     i2l3849:
  8963                           
  8964                           ; BSR set to: 4
  8965                           ;usb_device.c: 2167: else
  8966                           ;usb_device.c: 2168: {
  8967                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  8968  0067EC  5124               	movf	36,w,b	;volatile
  8969  0067EE  0B0F               	andlw	15
  8970  0067F0  0D02               	mullw	2
  8971  0067F2  50F3               	movf	prodl,w,c
  8972  0067F4  0F6C               	addlw	low _pBDTEntryIn
  8973  0067F6                     L22:
  8974  0067F6  6ED9               	movwf	fsr2l,c
  8975  0067F8  6ADA               	clrf	fsr2h,c
  8976  0067FA  CFDE F02A          	movff	postinc2,USBStdGetStatusHandler@p
  8977  0067FE  CFDD F02B          	movff	postdec2,USBStdGetStatusHandler@p+1
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;usb_device.c: 2170: }
  8981                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  8982  006802  C02A  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  8983  006806  C02B  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  8984  00680A  50DF               	movf	indf2,w,c
  8985  00680C  6E29               	movwf	??_USBStdGetStatusHandler& (0+255),c
  8986  00680E  AE29               	btfss	??_USBStdGetStatusHandler,7,c
  8987  006810  D013               	goto	i2l284
  8988                           
  8989                           ; BSR set to: 0
  8990  006812  C02A  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  8991  006816  C02B  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  8992  00681A  50DF               	movf	indf2,w,c
  8993  00681C  6E29               	movwf	??_USBStdGetStatusHandler& (0+255),c
  8994  00681E  A429               	btfss	??_USBStdGetStatusHandler,2,c
  8995  006820  D00B               	goto	i2l284
  8996                           
  8997                           ; BSR set to: 0
  8998                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  8999  006822  0E01               	movlw	1
  9000  006824  0104               	movlb	4	; () banked
  9001  006826  6F28               	movwf	40,b	;volatile
  9002  006828  D007               	goto	i2l284
  9003  00682A                     i2l3859:
  9004                           
  9005                           ; BSR set to: 4
  9006  00682A  5120               	movf	32,w,b	;volatile
  9007  00682C  0B1F               	andlw	31
  9008                           
  9009                           ; Switch size 1, requested type "speed"
  9010                           ; Number of cases is 3, Range of values is 0 to 2
  9011                           ; switch strategies available:
  9012                           ; Name         Instructions Cycles
  9013                           ; simple_byte           10     6 (average)
  9014                           ;	Chosen strategy is simple_byte
  9015  00682E  E0C8               	bz	i2l281
  9016  006830  0A01               	xorlw	1	; case 1
  9017  006832  E0CE               	bz	i2l285
  9018  006834  0A03               	xorlw	3	; case 2
  9019  006836  E0CF               	bz	i2l286
  9020  006838                     i2l284:
  9021                           
  9022                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  9023  006838  0100               	movlb	0	; () banked
  9024  00683A  AFB6               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
  9025  00683C  D007               	goto	i2l291
  9026                           
  9027                           ; BSR set to: 0
  9028                           ;usb_device.c: 2179: {
  9029                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  9030  00683E  0E04               	movlw	4	;volatile
  9031  006840  6FB4               	movwf	(_inPipes+1)& (0+255),b	;volatile
  9032  006842  0E28               	movlw	40	;volatile
  9033  006844  6FB3               	movwf	_inPipes& (0+255),b	;volatile
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9037  006846  81B6               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
  9038                           
  9039                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  9040  006848  0E02               	movlw	2
  9041  00684A  6FB7               	movwf	(_inPipes+4)& (0+255),b	;volatile
  9042  00684C                     i2l291:
  9043                           
  9044                           ; BSR set to: 0
  9045  00684C  0012               	return	
  9046  00684E                     __end_of_USBStdGetStatusHandler:
  9047                           	opt stack 0
  9048                           tosu	equ	0xFFF
  9049                           tosh	equ	0xFFE
  9050                           tosl	equ	0xFFD
  9051                           pclatu	equ	0xFFB
  9052                           pclath	equ	0xFFA
  9053                           tblptru	equ	0xFF8
  9054                           tblptrh	equ	0xFF7
  9055                           tblptrl	equ	0xFF6
  9056                           tablat	equ	0xFF5
  9057                           prodh	equ	0xFF4
  9058                           prodl	equ	0xFF3
  9059                           intcon	equ	0xFF2
  9060                           intcon2	equ	0xFF1
  9061                           intcon3	equ	0xFF0
  9062                           postinc0	equ	0xFEE
  9063                           fsr0h	equ	0xFEA
  9064                           fsr0l	equ	0xFE9
  9065                           wreg	equ	0xFE8
  9066                           indf1	equ	0xFE7
  9067                           fsr1h	equ	0xFE2
  9068                           fsr1l	equ	0xFE1
  9069                           bsr	equ	0xFE0
  9070                           indf2	equ	0xFDF
  9071                           postinc2	equ	0xFDE
  9072                           postdec2	equ	0xFDD
  9073                           plusw2	equ	0xFDB
  9074                           fsr2h	equ	0xFDA
  9075                           fsr2l	equ	0xFD9
  9076                           status	equ	0xFD8
  9077                           
  9078 ;; *************** function _USBStdGetDscHandler *****************
  9079 ;; Defined at:
  9080 ;;		line 2044 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_
      +device.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;		None
  9083 ;; Auto vars:     Size  Location     Type
  9084 ;;		None
  9085 ;; Return value:  Size  Location     Type
  9086 ;;		None               void
  9087 ;; Registers used:
  9088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9089 ;; Tracked objects:
  9090 ;;		On entry : B/4
  9091 ;;		On exit  : B/0
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9094 ;;      Params:         0       0       0       0       0       0       0       0       0
  9095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9096 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9097 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9098 ;;Total ram usage:        2 bytes
  9099 ;; Hardware stack levels used:    1
  9100 ;; This function calls:
  9101 ;;		Nothing
  9102 ;; This function is called by:
  9103 ;;		_USBCheckStdRequest
  9104 ;; This function uses a non-reentrant model
  9105 ;;
  9106                           
  9107                           	psect	text49
  9108  00735C                     __ptext49:
  9109                           	opt stack 0
  9110  00735C                     _USBStdGetDscHandler:
  9111                           	opt stack 16
  9112                           
  9113                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;incstack = 0
  9117                           ;incstack = 0
  9118  00735C  0104               	movlb	4	; () banked
  9119  00735E  5120               	movf	32,w,b	;volatile
  9120  007360  0A80               	xorlw	128
  9121  007362  E17A               	bnz	i2l277
  9122                           
  9123                           ; BSR set to: 4
  9124                           ;usb_device.c: 2046: {
  9125                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  9126  007364  0EC0               	movlw	192
  9127  007366  0100               	movlb	0	; () banked
  9128  007368  6FB6               	movwf	(_inPipes+3)& (0+255),b	;volatile
  9129                           
  9130                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  9131  00736A  D06D               	goto	i2l3837
  9132  00736C                     i2l3821:
  9133                           
  9134                           ; BSR set to: 4
  9135                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  9136  00736C  0EE2               	movlw	low _device_dsc
  9137  00736E  0100               	movlb	0	; () banked
  9138  007370  6FB3               	movwf	_inPipes& (0+255),b	;volatile
  9139  007372  0E10               	movlw	high __smallconst
  9140  007374  6FB4               	movwf	(_inPipes+1)& (0+255),b	;volatile
  9141                           
  9142                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  9143  007376  0E00               	movlw	0
  9144  007378  6FB8               	movwf	(_inPipes+5)& (0+255),b	;volatile
  9145  00737A  0E12               	movlw	18
  9146  00737C  6FB7               	movwf	(_inPipes+4)& (0+255),b	;volatile
  9147                           
  9148                           ;usb_device.c: 2058: break;
  9149  00737E  D06C               	goto	i2l277
  9150  007380                     i2l270:
  9151                           
  9152                           ; BSR set to: 4
  9153                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  9154  007380  6722               	tstfsz	34,b	;volatile
  9155  007382  D03B               	goto	i2l271
  9156                           
  9157                           ; BSR set to: 4
  9158                           ;usb_device.c: 2064: {
  9159                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  9160  007384  5122               	movf	34,w,b	;volatile
  9161  007386  0F91               	addlw	low _USB_CD_Ptr
  9162  007388  6E29               	movwf	??_USBStdGetDscHandler& (0+255),c
  9163  00738A  C029  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  9164  00738E  0E10               	movlw	high __smallconst
  9165  007390  6EF7               	movwf	tblptrh,c
  9166  007392  0008               	tblrd		*
  9167  007394  CFF5 F02A          	movff	tablat,??_USBStdGetDscHandler+1
  9168  007398  0100               	movlb	0	; () banked
  9169  00739A  C02A  F0B3         	movff	??_USBStdGetDscHandler+1,_inPipes	;volatile
  9170  00739E  6FB4               	movwf	(_inPipes+1)& (0+255),b	;volatile
  9171                           
  9172                           ; BSR set to: 0
  9173                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  9174  0073A0  0E02               	movlw	2
  9175  0073A2  25B3               	addwf	_inPipes& (0+255),w,b	;volatile
  9176  0073A4  6E29               	movwf	??_USBStdGetDscHandler& (0+255),c
  9177  0073A6  0E00               	movlw	0
  9178  0073A8  21B4               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
  9179  0073AA  6E2A               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  9180  0073AC  5029               	movf	??_USBStdGetDscHandler,w,c
  9181  0073AE  6EF6               	movwf	tblptrl,c
  9182  0073B0  6EE9               	movwf	fsr0l,c
  9183  0073B2  0E07               	movlw	(high __ramtop+-1)
  9184  0073B4  6EEA               	movwf	fsr0h,c
  9185  0073B6  502A               	movf	??_USBStdGetDscHandler+1,w,c
  9186  0073B8  64EA               	cpfsgt	fsr0h,c
  9187  0073BA  D003               	bra	i2u276_47
  9188  0073BC  6EEA               	movwf	fsr0h,c
  9189  0073BE  50EF               	movf	indf0,w,c
  9190  0073C0  D003               	bra	i2u276_40
  9191  0073C2                     i2u276_47:
  9192  0073C2  6EF7               	movwf	tblptrh,c
  9193  0073C4  0008               	tblrd		*
  9194  0073C6  50F5               	movf	tablat,w,c
  9195  0073C8                     i2u276_40:
  9196  0073C8  0100               	movlb	0	; () banked
  9197  0073CA  6FB7               	movwf	(_inPipes+4)& (0+255),b	;volatile
  9198                           
  9199                           ; BSR set to: 0
  9200                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  9201  0073CC  0E03               	movlw	3
  9202  0073CE  25B3               	addwf	_inPipes& (0+255),w,b	;volatile
  9203  0073D0  6E29               	movwf	??_USBStdGetDscHandler& (0+255),c
  9204  0073D2  0E00               	movlw	0
  9205  0073D4  21B4               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
  9206  0073D6  6E2A               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
  9207  0073D8  5029               	movf	??_USBStdGetDscHandler,w,c
  9208  0073DA  6EF6               	movwf	tblptrl,c
  9209  0073DC  6EE9               	movwf	fsr0l,c
  9210  0073DE  0E07               	movlw	(high __ramtop+-1)
  9211  0073E0  6EEA               	movwf	fsr0h,c
  9212  0073E2  502A               	movf	??_USBStdGetDscHandler+1,w,c
  9213  0073E4  64EA               	cpfsgt	fsr0h,c
  9214  0073E6  D003               	bra	i2u277_47
  9215  0073E8  6EEA               	movwf	fsr0h,c
  9216  0073EA  50EF               	movf	indf0,w,c
  9217  0073EC  D003               	bra	i2u277_40
  9218  0073EE                     i2u277_47:
  9219  0073EE  6EF7               	movwf	tblptrh,c
  9220  0073F0  0008               	tblrd		*
  9221  0073F2  50F5               	movf	tablat,w,c
  9222  0073F4                     i2u277_40:
  9223  0073F4  0100               	movlb	0	; () banked
  9224  0073F6  6FB8               	movwf	(_inPipes+5)& (0+255),b	;volatile
  9225                           
  9226                           ;usb_device.c: 2076: }
  9227  0073F8  D02F               	goto	i2l277
  9228  0073FA                     i2l271:
  9229                           
  9230                           ; BSR set to: 4
  9231                           ;usb_device.c: 2077: else
  9232                           ;usb_device.c: 2078: {
  9233                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  9234  0073FA  0100               	movlb	0	; () banked
  9235  0073FC  6BB6               	clrf	(_inPipes+3)& (0+255),b	;volatile
  9236  0073FE  D02C               	goto	i2l277
  9237  007400                     i2l3829:
  9238                           
  9239                           ; BSR set to: 4
  9240                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  9241  007400  0E03               	movlw	3
  9242  007402  6122               	cpfslt	34,b	;volatile
  9243  007404  D7FA               	goto	i2l271
  9244                           
  9245                           ; BSR set to: 4
  9246                           ;usb_device.c: 2087: {
  9247                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  9248  007406  5122               	movf	34,w,b	;volatile
  9249  007408  0F8E               	addlw	low _USB_SD_Ptr
  9250  00740A  6E29               	movwf	??_USBStdGetDscHandler& (0+255),c
  9251  00740C  C029  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  9252  007410  0E10               	movlw	high __smallconst
  9253  007412  6EF7               	movwf	tblptrh,c
  9254  007414  0008               	tblrd		*
  9255  007416  CFF5 F02A          	movff	tablat,??_USBStdGetDscHandler+1
  9256  00741A  0100               	movlb	0	; () banked
  9257  00741C  C02A  F0B3         	movff	??_USBStdGetDscHandler+1,_inPipes	;volatile
  9258  007420  6FB4               	movwf	(_inPipes+1)& (0+255),b	;volatile
  9259                           
  9260                           ; BSR set to: 0
  9261                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  9262  007422  51B3               	movf	_inPipes& (0+255),w,b	;volatile
  9263  007424  6EF6               	movwf	tblptrl,c
  9264  007426  6EE9               	movwf	fsr0l,c
  9265  007428  0E07               	movlw	(high __ramtop+-1)
  9266  00742A  6EEA               	movwf	fsr0h,c
  9267  00742C  51B4               	movf	(_inPipes+1)& (0+255),w,b	;volatile
  9268  00742E  64EA               	cpfsgt	fsr0h,c
  9269  007430  D003               	bra	i2u279_47
  9270  007432  6EEA               	movwf	fsr0h,c
  9271  007434  50EF               	movf	indf0,w,c
  9272  007436  D003               	bra	i2u279_40
  9273  007438                     i2u279_47:
  9274  007438  6EF7               	movwf	tblptrh,c
  9275  00743A  0008               	tblrd		*
  9276  00743C  50F5               	movf	tablat,w,c
  9277  00743E                     i2u279_40:
  9278  00743E  0100               	movlb	0	; () banked
  9279  007440  6FB7               	movwf	(_inPipes+4)& (0+255),b	;volatile
  9280  007442  6BB8               	clrf	(_inPipes+5)& (0+255),b	;volatile
  9281                           
  9282                           ;usb_device.c: 2092: }
  9283  007444  D009               	goto	i2l277
  9284  007446                     i2l3837:
  9285                           
  9286                           ; BSR set to: 0
  9287  007446  0104               	movlb	4	; () banked
  9288  007448  5123               	movf	35,w,b	;volatile
  9289                           
  9290                           ; Switch size 1, requested type "speed"
  9291                           ; Number of cases is 3, Range of values is 1 to 3
  9292                           ; switch strategies available:
  9293                           ; Name         Instructions Cycles
  9294                           ; simple_byte           10     6 (average)
  9295                           ;	Chosen strategy is simple_byte
  9296  00744A  0A01               	xorlw	1	; case 1
  9297  00744C  E08F               	bz	i2l3821
  9298  00744E  0A03               	xorlw	3	; case 2
  9299  007450  E097               	bz	i2l270
  9300  007452  0A01               	xorlw	1	; case 3
  9301  007454  E0D5               	bz	i2l3829
  9302  007456  D7D1               	goto	i2l271
  9303  007458                     i2l277:
  9304  007458  0012               	return	
  9305  00745A                     __end_of_USBStdGetDscHandler:
  9306                           	opt stack 0
  9307                           tosu	equ	0xFFF
  9308                           tosh	equ	0xFFE
  9309                           tosl	equ	0xFFD
  9310                           pclatu	equ	0xFFB
  9311                           pclath	equ	0xFFA
  9312                           tblptru	equ	0xFF8
  9313                           tblptrh	equ	0xFF7
  9314                           tblptrl	equ	0xFF6
  9315                           tablat	equ	0xFF5
  9316                           prodh	equ	0xFF4
  9317                           prodl	equ	0xFF3
  9318                           intcon	equ	0xFF2
  9319                           intcon2	equ	0xFF1
  9320                           intcon3	equ	0xFF0
  9321                           indf0	equ	0xFEF
  9322                           postinc0	equ	0xFEE
  9323                           fsr0h	equ	0xFEA
  9324                           fsr0l	equ	0xFE9
  9325                           wreg	equ	0xFE8
  9326                           indf1	equ	0xFE7
  9327                           fsr1h	equ	0xFE2
  9328                           fsr1l	equ	0xFE1
  9329                           bsr	equ	0xFE0
  9330                           indf2	equ	0xFDF
  9331                           postinc2	equ	0xFDE
  9332                           postdec2	equ	0xFDD
  9333                           plusw2	equ	0xFDB
  9334                           fsr2h	equ	0xFDA
  9335                           fsr2l	equ	0xFD9
  9336                           status	equ	0xFD8
  9337                           
  9338 ;; *************** function _USBStdSetCfgHandler *****************
  9339 ;; Defined at:
  9340 ;;		line 1969 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_
      +device.c"
  9341 ;; Parameters:    Size  Location     Type
  9342 ;;		None
  9343 ;; Auto vars:     Size  Location     Type
  9344 ;;  i               1   25[COMRAM] unsigned char 
  9345 ;; Return value:  Size  Location     Type
  9346 ;;		None               void
  9347 ;; Registers used:
  9348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  9349 ;; Tracked objects:
  9350 ;;		On entry : B/4
  9351 ;;		On exit  : 0/0
  9352 ;;		Unchanged: 0/0
  9353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9354 ;;      Params:         0       0       0       0       0       0       0       0       0
  9355 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9357 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9358 ;;Total ram usage:        1 bytes
  9359 ;; Hardware stack levels used:    1
  9360 ;; Hardware stack levels required when called:    4
  9361 ;; This function calls:
  9362 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9363 ;;		i2_memset
  9364 ;; This function is called by:
  9365 ;;		_USBCheckStdRequest
  9366 ;; This function uses a non-reentrant model
  9367 ;;
  9368                           
  9369                           	psect	text50
  9370  006F18                     __ptext50:
  9371                           	opt stack 0
  9372  006F18                     _USBStdSetCfgHandler:
  9373                           	opt stack 12
  9374                           
  9375                           ;usb_device.c: 1970: uint8_t i;
  9376                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  9377                           
  9378                           ;incstack = 0
  9379                           ;incstack = 0
  9380  006F18  0100               	movlb	0	; () banked
  9381  006F1A  8FB6               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
  9382                           
  9383                           ; BSR set to: 0
  9384                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(1));;
  9385  006F1C  0E0F               	movlw	15	;volatile
  9386  006F1E  6E2A               	movwf	?i2_memset+1,c
  9387  006F20  0E71               	movlw	113	;volatile
  9388  006F22  6E29               	movwf	?i2_memset,c
  9389  006F24  6A2C               	clrf	?i2_memset+3,c
  9390  006F26  6A2B               	clrf	?i2_memset+2,c
  9391  006F28  6A2E               	clrf	?i2_memset+5,c
  9392  006F2A  0E01               	movlw	1
  9393  006F2C  6E2D               	movwf	?i2_memset+4,c
  9394  006F2E  EC14  F031         	call	i2_memset	;wreg free
  9395                           
  9396                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  9397  006F32  0104               	movlb	4	; () banked
  9398  006F34  0E04               	movlw	4	;volatile
  9399  006F36  6E2A               	movwf	?i2_memset+1,c
  9400  006F38  6A29               	clrf	?i2_memset,c
  9401  006F3A  6A2C               	clrf	?i2_memset+3,c
  9402  006F3C  6A2B               	clrf	?i2_memset+2,c
  9403  006F3E  6A2E               	clrf	?i2_memset+5,c
  9404  006F40  0E20               	movlw	32
  9405  006F42  6E2D               	movwf	?i2_memset+4,c
  9406  006F44  EC14  F031         	call	i2_memset	;wreg free
  9407                           
  9408                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  9409  006F48  8C6D               	bsf	3949,6,c	;volatile
  9410                           
  9411                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(1+1u); i++)
  9412  006F4A  6A41               	clrf	USBStdSetCfgHandler@i,c
  9413  006F4C                     i2l3791:
  9414                           
  9415                           ;usb_device.c: 1988: {
  9416                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  9417  006F4C  5041               	movf	USBStdSetCfgHandler@i,w,c
  9418  006F4E  0100               	movlb	0	; () banked
  9419  006F50  0F78               	addlw	low _ep_data_in	;volatile
  9420  006F52  6ED9               	movwf	fsr2l,c
  9421  006F54  6ADA               	clrf	fsr2h,c
  9422  006F56  6ADF               	clrf	indf2,c
  9423                           
  9424                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  9425  006F58  5041               	movf	USBStdSetCfgHandler@i,w,c
  9426  006F5A  0F7A               	addlw	low _ep_data_out	;volatile
  9427  006F5C  6ED9               	movwf	fsr2l,c
  9428  006F5E  6ADA               	clrf	fsr2h,c
  9429  006F60  6ADF               	clrf	indf2,c
  9430                           
  9431                           ; BSR set to: 0
  9432  006F62  2A41               	incf	USBStdSetCfgHandler@i,f,c
  9433                           
  9434                           ; BSR set to: 0
  9435  006F64  0E01               	movlw	1
  9436  006F66  6441               	cpfsgt	USBStdSetCfgHandler@i,c
  9437  006F68  D7F1               	goto	i2l3791
  9438                           
  9439                           ; BSR set to: 0
  9440                           ;usb_device.c: 1991: }
  9441                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,1);
  9442  006F6A  0E25               	movlw	low _USBAlternateInterface	;volatile
  9443  006F6C  6E29               	movwf	?i2_memset,c
  9444  006F6E  0E00               	movlw	high _USBAlternateInterface	;volatile
  9445  006F70  6E2A               	movwf	?i2_memset+1,c
  9446  006F72  0E0F               	movlw	15
  9447  006F74  6E2A               	movwf	?i2_memset+1,c
  9448  006F76  0E5F               	movlw	__accesstop+-1
  9449  006F78  6429               	cpfsgt	?i2_memset,c
  9450  006F7A  6A2A               	clrf	?i2_memset+1,c
  9451  006F7C  6A2C               	clrf	?i2_memset+3,c
  9452  006F7E  6A2B               	clrf	?i2_memset+2,c
  9453  006F80  6A2E               	clrf	?i2_memset+5,c
  9454  006F82  0E01               	movlw	1
  9455  006F84  6E2D               	movwf	?i2_memset+4,c
  9456  006F86  EC14  F031         	call	i2_memset	;wreg free
  9457                           
  9458                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  9459  006F8A  9C6D               	bcf	3949,6,c	;volatile
  9460                           
  9461                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9462  006F8C  0E04               	movlw	4	;volatile
  9463  006F8E  0100               	movlb	0	; () banked
  9464  006F90  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
  9465  006F92  0E08               	movlw	8	;volatile
  9466  006F94  6F6C               	movwf	_pBDTEntryIn& (0+255),b
  9467                           
  9468                           ; BSR set to: 0
  9469                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  9470  006F96  0104               	movlb	4	; () banked
  9471  006F98  0E04               	movlw	4	;volatile
  9472  006F9A  6E06               	movwf	_pBDTEntryEP0OutCurrent+1,c
  9473  006F9C  0E00               	movlw	0	;volatile
  9474  006F9E  6E05               	movwf	_pBDTEntryEP0OutCurrent,c
  9475                           
  9476                           ; BSR set to: 4
  9477                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9478  006FA0  C005  F007         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9479  006FA4  C006  F008         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9480                           
  9481                           ; BSR set to: 4
  9482                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  9483  006FA8  C422 F024          	movff	1058,_USBActiveConfiguration	;volatile
  9484                           
  9485                           ; BSR set to: 4
  9486                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  9487  006FAC  6624               	tstfsz	_USBActiveConfiguration,c	;volatile
  9488  006FAE  D002               	goto	i2l3813
  9489                           
  9490                           ; BSR set to: 4
  9491                           ;usb_device.c: 2010: {
  9492                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  9493  006FB0  0E10               	movlw	16
  9494  006FB2  D012               	goto	L23
  9495  006FB4                     i2l3813:
  9496                           
  9497                           ; BSR set to: 4
  9498                           ;usb_device.c: 2014: else
  9499                           ;usb_device.c: 2015: {
  9500                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  9501  006FB4  6A3A               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1,c
  9502  006FB6  0E01               	movlw	1
  9503  006FB8  6E39               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER,c
  9504  006FBA  0E24               	movlw	low _USBActiveConfiguration	;volatile
  9505  006FBC  6E3B               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2,c
  9506  006FBE  0E00               	movlw	high _USBActiveConfiguration	;volatile
  9507  006FC0  6E3C               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3,c
  9508  006FC2  0E0F               	movlw	15
  9509  006FC4  6E3C               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3,c
  9510  006FC6  0E5F               	movlw	__accesstop+-1
  9511  006FC8  643B               	cpfsgt	?_USER_USB_CALLBACK_EVENT_HANDLER+2,c
  9512  006FCA  6A3C               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3,c
  9513  006FCC  6A3E               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+5,c
  9514  006FCE  0E01               	movlw	1
  9515  006FD0  6E3D               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4,c
  9516  006FD2  EC63  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9517                           
  9518                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  9519  006FD6  0E20               	movlw	32
  9520  006FD8                     L23:
  9521  006FD8  6E12               	movwf	_USBDeviceState,c	;volatile
  9522  006FDA  0012               	return	
  9523  006FDC                     __end_of_USBStdSetCfgHandler:
  9524                           	opt stack 0
  9525                           tosu	equ	0xFFF
  9526                           tosh	equ	0xFFE
  9527                           tosl	equ	0xFFD
  9528                           pclatu	equ	0xFFB
  9529                           pclath	equ	0xFFA
  9530                           tblptru	equ	0xFF8
  9531                           tblptrh	equ	0xFF7
  9532                           tblptrl	equ	0xFF6
  9533                           tablat	equ	0xFF5
  9534                           prodh	equ	0xFF4
  9535                           prodl	equ	0xFF3
  9536                           intcon	equ	0xFF2
  9537                           intcon2	equ	0xFF1
  9538                           intcon3	equ	0xFF0
  9539                           indf0	equ	0xFEF
  9540                           postinc0	equ	0xFEE
  9541                           fsr0h	equ	0xFEA
  9542                           fsr0l	equ	0xFE9
  9543                           wreg	equ	0xFE8
  9544                           indf1	equ	0xFE7
  9545                           fsr1h	equ	0xFE2
  9546                           fsr1l	equ	0xFE1
  9547                           bsr	equ	0xFE0
  9548                           indf2	equ	0xFDF
  9549                           postinc2	equ	0xFDE
  9550                           postdec2	equ	0xFDD
  9551                           plusw2	equ	0xFDB
  9552                           fsr2h	equ	0xFDA
  9553                           fsr2l	equ	0xFD9
  9554                           status	equ	0xFD8
  9555                           
  9556 ;; *************** function i2_memset *****************
  9557 ;; Defined at:
  9558 ;;		line 10 in file "/Applications/microchip/xc8/v1.21/sources/common/memset.c"
  9559 ;; Parameters:    Size  Location     Type
  9560 ;;  p1              2    1[COMRAM] PTR void 
  9561 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
  9562 ;;  c               2    3[COMRAM] int 
  9563 ;;  n               2    5[COMRAM] unsigned int 
  9564 ;; Auto vars:     Size  Location     Type
  9565 ;;  memset          2    7[COMRAM] PTR unsigned char 
  9566 ;;		 -> USBAlternateInterface(1), BDT(32), UEP1(1), 
  9567 ;; Return value:  Size  Location     Type
  9568 ;;                  2    1[COMRAM] PTR void 
  9569 ;; Registers used:
  9570 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9571 ;; Tracked objects:
  9572 ;;		On entry : 0/0
  9573 ;;		On exit  : 0/0
  9574 ;;		Unchanged: 0/0
  9575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9576 ;;      Params:         6       0       0       0       0       0       0       0       0
  9577 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9578 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9579 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9580 ;;Total ram usage:        8 bytes
  9581 ;; Hardware stack levels used:    1
  9582 ;; This function calls:
  9583 ;;		Nothing
  9584 ;; This function is called by:
  9585 ;;		_USBStdSetCfgHandler
  9586 ;;		i2_USBDeviceInit
  9587 ;; This function uses a non-reentrant model
  9588 ;;
  9589                           
  9590                           	psect	text51
  9591  006228                     __ptext51:
  9592                           	opt stack 0
  9593  006228                     i2_memset:
  9594                           	opt stack 18
  9595                           
  9596                           ;incstack = 0
  9597                           ;incstack = 0
  9598  006228  C029  F02F         	movff	i2memset@p1,i2memset@p
  9599  00622C  C02A  F030         	movff	i2memset@p1+1,i2memset@p+1
  9600  006230  D008               	goto	i2l4779
  9601  006232                     i2l4775:
  9602  006232  C02F  FFD9         	movff	i2memset@p,fsr2l
  9603  006236  C030  FFDA         	movff	i2memset@p+1,fsr2h
  9604  00623A  C02B  FFDF         	movff	i2memset@c,indf2
  9605  00623E  4A2F               	infsnz	i2memset@p,f,c
  9606  006240  2A30               	incf	i2memset@p+1,f,c
  9607  006242                     i2l4779:
  9608  006242  062D               	decf	i2memset@n,f,c
  9609  006244  A0D8               	btfss	status,0,c
  9610  006246  062E               	decf	i2memset@n+1,f,c
  9611  006248  282D               	incf	i2memset@n& (0+255),w,c
  9612  00624A  B4D8               	btfsc	status,2,c
  9613  00624C  282E               	incf	(i2memset@n+1)& (0+255),w,c
  9614  00624E  B4D8               	btfsc	status,2,c
  9615  006250  0012               	return	
  9616  006252  D7EF               	goto	i2l4775
  9617  006254                     __end_ofi2_memset:
  9618                           	opt stack 0
  9619                           tosu	equ	0xFFF
  9620                           tosh	equ	0xFFE
  9621                           tosl	equ	0xFFD
  9622                           pclatu	equ	0xFFB
  9623                           pclath	equ	0xFFA
  9624                           tblptru	equ	0xFF8
  9625                           tblptrh	equ	0xFF7
  9626                           tblptrl	equ	0xFF6
  9627                           tablat	equ	0xFF5
  9628                           prodh	equ	0xFF4
  9629                           prodl	equ	0xFF3
  9630                           intcon	equ	0xFF2
  9631                           intcon2	equ	0xFF1
  9632                           intcon3	equ	0xFF0
  9633                           indf0	equ	0xFEF
  9634                           postinc0	equ	0xFEE
  9635                           fsr0h	equ	0xFEA
  9636                           fsr0l	equ	0xFE9
  9637                           wreg	equ	0xFE8
  9638                           indf1	equ	0xFE7
  9639                           fsr1h	equ	0xFE2
  9640                           fsr1l	equ	0xFE1
  9641                           bsr	equ	0xFE0
  9642                           indf2	equ	0xFDF
  9643                           postinc2	equ	0xFDE
  9644                           postdec2	equ	0xFDD
  9645                           plusw2	equ	0xFDB
  9646                           fsr2h	equ	0xFDA
  9647                           fsr2l	equ	0xFD9
  9648                           status	equ	0xFD8
  9649                           
  9650 ;; *************** function _USBCtrlEPServiceComplete *****************
  9651 ;; Defined at:
  9652 ;;		line 1617 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_
      +device.c"
  9653 ;; Parameters:    Size  Location     Type
  9654 ;;		None
  9655 ;; Auto vars:     Size  Location     Type
  9656 ;;		None
  9657 ;; Return value:  Size  Location     Type
  9658 ;;		None               void
  9659 ;; Registers used:
  9660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9661 ;; Tracked objects:
  9662 ;;		On entry : 0/0
  9663 ;;		On exit  : F/0
  9664 ;;		Unchanged: 0/0
  9665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9666 ;;      Params:         0       0       0       0       0       0       0       0       0
  9667 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9669 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9670 ;;Total ram usage:        0 bytes
  9671 ;; Hardware stack levels used:    1
  9672 ;; Hardware stack levels required when called:    2
  9673 ;; This function calls:
  9674 ;;		_USBCtrlEPAllowStatusStage
  9675 ;;		_USBCtrlEPAllowDataStage
  9676 ;; This function is called by:
  9677 ;;		_USBCtrlTrfSetupHandler
  9678 ;; This function uses a non-reentrant model
  9679 ;;
  9680                           
  9681                           	psect	text52
  9682  0070B4                     __ptext52:
  9683                           	opt stack 0
  9684  0070B4                     _USBCtrlEPServiceComplete:
  9685                           	opt stack 15
  9686                           
  9687                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  9688                           
  9689                           ;incstack = 0
  9690                           ;incstack = 0
  9691  0070B4  986D               	bcf	3949,4,c	;volatile
  9692                           
  9693                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  9694  0070B6  0100               	movlb	0	; () banked
  9695  0070B8  BFB6               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
  9696  0070BA  D037               	goto	i2l218
  9697                           
  9698                           ; BSR set to: 0
  9699                           ;usb_device.c: 1629: {
  9700                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  9701  0070BC  AF63               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
  9702  0070BE  D00A               	goto	i2l3693
  9703                           
  9704                           ; BSR set to: 0
  9705                           ;usb_device.c: 1631: {
  9706                           ;usb_device.c: 1632: controlTransferState = 2;
  9707  0070C0  0E02               	movlw	2
  9708  0070C2  6E15               	movwf	_controlTransferState,c	;volatile
  9709                           
  9710                           ; BSR set to: 0
  9711                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  9712  0070C4  6610               	tstfsz	_USBDeferOUTDataStagePackets,c	;volatile
  9713  0070C6  D002               	goto	i2l3689
  9714                           
  9715                           ; BSR set to: 0
  9716                           ;usb_device.c: 1644: {
  9717                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  9718  0070C8  EC73  F034         	call	_USBCtrlEPAllowDataStage	;wreg free
  9719  0070CC                     i2l3689:
  9720                           
  9721                           ;usb_device.c: 1646: }
  9722                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  9723  0070CC  0100               	movlb	0	; () banked
  9724  0070CE  6B7E               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  9725                           
  9726                           ; BSR set to: 0
  9727                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  9728  0070D0  6B7D               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9729                           
  9730                           ;usb_device.c: 1652: }
  9731  0070D2  D05C               	goto	i2l228
  9732  0070D4                     i2l3693:
  9733                           
  9734                           ; BSR set to: 0
  9735                           ;usb_device.c: 1653: else
  9736                           ;usb_device.c: 1654: {
  9737                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  9738  0070D4  EE20 F001          	lfsr	2,1
  9739  0070D8  5007               	movf	_pBDTEntryEP0OutNext,w,c
  9740  0070DA  26D9               	addwf	fsr2l,f,c
  9741  0070DC  5008               	movf	_pBDTEntryEP0OutNext+1,w,c
  9742  0070DE  22DA               	addwfc	fsr2h,f,c
  9743  0070E0  0E08               	movlw	8
  9744  0070E2  6EDF               	movwf	indf2,c
  9745                           
  9746                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9747  0070E4  EE20 F002          	lfsr	2,2
  9748  0070E8  5007               	movf	_pBDTEntryEP0OutNext,w,c
  9749  0070EA  26D9               	addwf	fsr2l,f,c
  9750  0070EC  5008               	movf	_pBDTEntryEP0OutNext+1,w,c
  9751  0070EE  22DA               	addwfc	fsr2h,f,c
  9752  0070F0  0E20               	movlw	32
  9753  0070F2  6EDE               	movwf	postinc2,c
  9754  0070F4  0E04               	movlw	4
  9755  0070F6  6EDD               	movwf	postdec2,c
  9756                           
  9757                           ; BSR set to: 0
  9758                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9759  0070F8  C007  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9760  0070FC  C008  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9761  007100  0E0C               	movlw	12
  9762  007102  6EDF               	movwf	indf2,c
  9763                           
  9764                           ; BSR set to: 0
  9765                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9766  007104  C007  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9767  007108  C008  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9768  00710C  0E00               	movlw	0
  9769  00710E  8EDB               	bsf	plusw2,7,c
  9770                           
  9771                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  9772  007110  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
  9773  007114  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9774  007118  0E04               	movlw	4
  9775  00711A  6EDF               	movwf	indf2,c
  9776                           
  9777                           ; BSR set to: 0
  9778                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9779  00711C  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
  9780  007120  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9781  007124  0E00               	movlw	0
  9782  007126  8EDB               	bsf	plusw2,7,c
  9783  007128  D031               	goto	i2l228
  9784  00712A                     i2l218:
  9785                           
  9786                           ; BSR set to: 0
  9787                           ;usb_device.c: 1667: else
  9788                           ;usb_device.c: 1668: {
  9789                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  9790  00712A  0104               	movlb	4	; () banked
  9791  00712C  AF20               	btfss	32,7,b	;volatile
  9792  00712E  D00E               	goto	i2l3715
  9793                           
  9794                           ; BSR set to: 4
  9795                           ;usb_device.c: 1670: {
  9796                           ;usb_device.c: 1671: controlTransferState = 1;
  9797  007130  0E01               	movlw	1
  9798  007132  6E15               	movwf	_controlTransferState,c	;volatile
  9799                           
  9800                           ; BSR set to: 4
  9801                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  9802  007134  660F               	tstfsz	_USBDeferINDataStagePackets,c	;volatile
  9803  007136  D002               	goto	i2l3707
  9804                           
  9805                           ; BSR set to: 4
  9806                           ;usb_device.c: 1686: {
  9807                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  9808  007138  EC73  F034         	call	_USBCtrlEPAllowDataStage	;wreg free
  9809  00713C                     i2l3707:
  9810                           
  9811                           ;usb_device.c: 1688: }
  9812                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  9813  00713C  0100               	movlb	0	; () banked
  9814  00713E  6B7E               	clrf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  9815                           
  9816                           ; BSR set to: 0
  9817                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  9818  007140  6B7D               	clrf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9819                           
  9820                           ; BSR set to: 0
  9821                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  9822  007142  6611               	tstfsz	_USBDeferStatusStagePacket,c	;volatile
  9823  007144  D023               	goto	i2l228
  9824                           
  9825                           ; BSR set to: 0
  9826                           ;usb_device.c: 1713: {
  9827                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  9828  007146  ECBB  F035         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9829  00714A  D020               	goto	i2l228
  9830  00714C                     i2l3715:
  9831                           
  9832                           ; BSR set to: 4
  9833                           ;usb_device.c: 1717: else
  9834                           ;usb_device.c: 1718: {
  9835                           ;usb_device.c: 1729: controlTransferState = 2;
  9836  00714C  0E02               	movlw	2
  9837  00714E  6E15               	movwf	_controlTransferState,c	;volatile
  9838                           
  9839                           ; BSR set to: 4
  9840                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  9841  007150  EE20 F001          	lfsr	2,1
  9842  007154  5007               	movf	_pBDTEntryEP0OutNext,w,c
  9843  007156  26D9               	addwf	fsr2l,f,c
  9844  007158  5008               	movf	_pBDTEntryEP0OutNext+1,w,c
  9845  00715A  22DA               	addwfc	fsr2h,f,c
  9846  00715C  0E08               	movlw	8
  9847  00715E  6EDF               	movwf	indf2,c
  9848                           
  9849                           ; BSR set to: 4
  9850                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9851  007160  EE20 F002          	lfsr	2,2
  9852  007164  5007               	movf	_pBDTEntryEP0OutNext,w,c
  9853  007166  26D9               	addwf	fsr2l,f,c
  9854  007168  5008               	movf	_pBDTEntryEP0OutNext+1,w,c
  9855  00716A  22DA               	addwfc	fsr2h,f,c
  9856  00716C  0E20               	movlw	32
  9857  00716E  6EDE               	movwf	postinc2,c
  9858  007170  0E04               	movlw	4
  9859  007172  6EDD               	movwf	postdec2,c
  9860                           
  9861                           ; BSR set to: 4
  9862                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9863  007174  C007  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9864  007178  C008  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9865  00717C  6EDF               	movwf	indf2,c
  9866                           
  9867                           ; BSR set to: 4
  9868                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9869  00717E  C007  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9870  007182  C008  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9871  007186  0E00               	movlw	0
  9872  007188  8EDB               	bsf	plusw2,7,c
  9873  00718A  D7D8               	goto	i2l3707
  9874  00718C                     i2l228:
  9875                           
  9876                           ; BSR set to: 0
  9877  00718C  0012               	return	
  9878  00718E                     __end_of_USBCtrlEPServiceComplete:
  9879                           	opt stack 0
  9880                           tosu	equ	0xFFF
  9881                           tosh	equ	0xFFE
  9882                           tosl	equ	0xFFD
  9883                           pclatu	equ	0xFFB
  9884                           pclath	equ	0xFFA
  9885                           tblptru	equ	0xFF8
  9886                           tblptrh	equ	0xFF7
  9887                           tblptrl	equ	0xFF6
  9888                           tablat	equ	0xFF5
  9889                           prodh	equ	0xFF4
  9890                           prodl	equ	0xFF3
  9891                           intcon	equ	0xFF2
  9892                           intcon2	equ	0xFF1
  9893                           intcon3	equ	0xFF0
  9894                           indf0	equ	0xFEF
  9895                           postinc0	equ	0xFEE
  9896                           fsr0h	equ	0xFEA
  9897                           fsr0l	equ	0xFE9
  9898                           wreg	equ	0xFE8
  9899                           indf1	equ	0xFE7
  9900                           fsr1h	equ	0xFE2
  9901                           fsr1l	equ	0xFE1
  9902                           bsr	equ	0xFE0
  9903                           indf2	equ	0xFDF
  9904                           postinc2	equ	0xFDE
  9905                           postdec2	equ	0xFDD
  9906                           plusw2	equ	0xFDB
  9907                           fsr2h	equ	0xFDA
  9908                           fsr2l	equ	0xFD9
  9909                           status	equ	0xFD8
  9910                           
  9911 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9912 ;; Defined at:
  9913 ;;		line 1489 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_
      +device.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;		None
  9916 ;; Auto vars:     Size  Location     Type
  9917 ;;		None
  9918 ;; Return value:  Size  Location     Type
  9919 ;;		None               void
  9920 ;; Registers used:
  9921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9922 ;; Tracked objects:
  9923 ;;		On entry : B/0
  9924 ;;		On exit  : B/0
  9925 ;;		Unchanged: 0/0
  9926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9927 ;;      Params:         0       0       0       0       0       0       0       0       0
  9928 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9929 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9930 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9931 ;;Total ram usage:        0 bytes
  9932 ;; Hardware stack levels used:    1
  9933 ;; Hardware stack levels required when called:    1
  9934 ;; This function calls:
  9935 ;;		_USBCtrlTrfTxService
  9936 ;; This function is called by:
  9937 ;;		_USBCtrlEPServiceComplete
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941                           	psect	text53
  9942  0068E6                     __ptext53:
  9943                           	opt stack 0
  9944  0068E6                     _USBCtrlEPAllowDataStage:
  9945                           	opt stack 15
  9946                           
  9947                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  9948                           
  9949                           ; BSR set to: 0
  9950                           ;incstack = 0
  9951                           ;incstack = 0
  9952  0068E6  6A0F               	clrf	_USBDeferINDataStagePackets,c	;volatile
  9953                           
  9954                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  9955  0068E8  6A10               	clrf	_USBDeferOUTDataStagePackets,c	;volatile
  9956                           
  9957                           ;usb_device.c: 1493: if(controlTransferState == 2)
  9958  0068EA  5015               	movf	_controlTransferState,w,c	;volatile
  9959  0068EC  0A02               	xorlw	2
  9960  0068EE  E11D               	bnz	i2l3625
  9961                           
  9962                           ;usb_device.c: 1494: {
  9963                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  9964  0068F0  EE20 F001          	lfsr	2,1
  9965  0068F4  5007               	movf	_pBDTEntryEP0OutNext,w,c
  9966  0068F6  26D9               	addwf	fsr2l,f,c
  9967  0068F8  5008               	movf	_pBDTEntryEP0OutNext+1,w,c
  9968  0068FA  22DA               	addwfc	fsr2h,f,c
  9969  0068FC  0E08               	movlw	8
  9970  0068FE  6EDF               	movwf	indf2,c
  9971                           
  9972                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9973  006900  EE20 F002          	lfsr	2,2
  9974  006904  5007               	movf	_pBDTEntryEP0OutNext,w,c
  9975  006906  26D9               	addwf	fsr2l,f,c
  9976  006908  5008               	movf	_pBDTEntryEP0OutNext+1,w,c
  9977  00690A  22DA               	addwfc	fsr2h,f,c
  9978  00690C  0E28               	movlw	40
  9979  00690E  6EDE               	movwf	postinc2,c
  9980  006910  0E04               	movlw	4
  9981  006912  6EDD               	movwf	postdec2,c
  9982                           
  9983                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9984  006914  C007  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9985  006918  C008  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9986  00691C  0E48               	movlw	72
  9987  00691E  6EDF               	movwf	indf2,c
  9988                           
  9989                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9990  006920  C007  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9991  006924  C008  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9992  006928  D027               	goto	L24
  9993  00692A                     i2l3625:
  9994                           
  9995                           ;usb_device.c: 1501: else
  9996                           ;usb_device.c: 1502: {
  9997                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9998  00692A  EE20  F0B7         	lfsr	2,_inPipes+4	;volatile
  9999  00692E  0104               	movlb	4	; () banked
 10000  006930  EE14 F026          	lfsr	1,1062	;volatile
 10001  006934  52E6               	movf	postinc1,f,c
 10002  006936  52DE               	movf	postinc2,f,c
 10003  006938  50DD               	movf	postdec2,w,c
 10004  00693A  5CE5               	subwf	postdec1,w,c
 10005  00693C  E102               	bnz	i2u249_45
 10006  00693E  50DF               	movf	indf2,w,c
 10007  006940  5CE7               	subwf	indf1,w,c
 10008  006942                     i2u249_45:
 10009  006942  E204               	bc	i2l3629
 10010                           
 10011                           ; BSR set to: 4
 10012                           ;usb_device.c: 1506: {
 10013                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 10014  006944  C426 F0B7          	movff	1062,_inPipes+4	;volatile
 10015  006948  C427 F0B8          	movff	1063,_inPipes+5	;volatile
 10016  00694C                     i2l3629:
 10017                           
 10018                           ; BSR set to: 4
 10019                           ;usb_device.c: 1508: }
 10020                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 10021  00694C  EC2B  F037         	call	_USBCtrlTrfTxService	;wreg free
 10022                           
 10023                           ; BSR set to: 0
 10024                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 10025  006950  EE20 F002          	lfsr	2,2
 10026  006954  516C               	movf	_pBDTEntryIn& (0+255),w,b
 10027  006956  26D9               	addwf	fsr2l,f,c
 10028  006958  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 10029  00695A  22DA               	addwfc	fsr2h,f,c
 10030  00695C  0E28               	movlw	40
 10031  00695E  6EDE               	movwf	postinc2,c
 10032  006960  0E04               	movlw	4
 10033  006962  6EDD               	movwf	postdec2,c
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10037  006964  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 10038  006968  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10039  00696C  0E48               	movlw	72
 10040  00696E  6EDF               	movwf	indf2,c
 10041                           
 10042                           ; BSR set to: 0
 10043                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10044  006970  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 10045  006974  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10046  006978                     L24:
 10047  006978  0E00               	movlw	0
 10048  00697A  8EDB               	bsf	plusw2,7,c
 10049  00697C  0C00               	retlw	0
 10050  00697E                     __end_of_USBCtrlEPAllowDataStage:
 10051                           	opt stack 0
 10052                           tosu	equ	0xFFF
 10053                           tosh	equ	0xFFE
 10054                           tosl	equ	0xFFD
 10055                           pclatu	equ	0xFFB
 10056                           pclath	equ	0xFFA
 10057                           tblptru	equ	0xFF8
 10058                           tblptrh	equ	0xFF7
 10059                           tblptrl	equ	0xFF6
 10060                           tablat	equ	0xFF5
 10061                           prodh	equ	0xFF4
 10062                           prodl	equ	0xFF3
 10063                           intcon	equ	0xFF2
 10064                           intcon2	equ	0xFF1
 10065                           intcon3	equ	0xFF0
 10066                           indf0	equ	0xFEF
 10067                           postinc0	equ	0xFEE
 10068                           fsr0h	equ	0xFEA
 10069                           fsr0l	equ	0xFE9
 10070                           wreg	equ	0xFE8
 10071                           indf1	equ	0xFE7
 10072                           postinc1	equ	0xFE6
 10073                           postdec1	equ	0xFE5
 10074                           fsr1h	equ	0xFE2
 10075                           fsr1l	equ	0xFE1
 10076                           bsr	equ	0xFE0
 10077                           indf2	equ	0xFDF
 10078                           postinc2	equ	0xFDE
 10079                           postdec2	equ	0xFDD
 10080                           plusw2	equ	0xFDB
 10081                           fsr2h	equ	0xFDA
 10082                           fsr2l	equ	0xFD9
 10083                           status	equ	0xFD8
 10084                           
 10085 ;; *************** function _USBCtrlTrfTxService *****************
 10086 ;; Defined at:
 10087 ;;		line 1772 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_
      +device.c"
 10088 ;; Parameters:    Size  Location     Type
 10089 ;;		None
 10090 ;; Auto vars:     Size  Location     Type
 10091 ;;  byteToSend      1    1[COMRAM] unsigned char 
 10092 ;; Return value:  Size  Location     Type
 10093 ;;		None               void
 10094 ;; Registers used:
 10095 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10096 ;; Tracked objects:
 10097 ;;		On entry : B/0
 10098 ;;		On exit  : F/0
 10099 ;;		Unchanged: 0/0
 10100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10101 ;;      Params:         0       0       0       0       0       0       0       0       0
 10102 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10103 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10104 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10105 ;;Total ram usage:        1 bytes
 10106 ;; Hardware stack levels used:    1
 10107 ;; This function calls:
 10108 ;;		Nothing
 10109 ;; This function is called by:
 10110 ;;		_USBCtrlEPAllowDataStage
 10111 ;;		_USBCtrlTrfInHandler
 10112 ;; This function uses a non-reentrant model
 10113 ;;
 10114                           
 10115                           	psect	text54
 10116  006E56                     __ptext54:
 10117                           	opt stack 0
 10118  006E56                     _USBCtrlTrfTxService:
 10119                           	opt stack 17
 10120                           
 10121                           ;usb_device.c: 1773: uint8_t byteToSend;
 10122                           ;usb_device.c: 1777: byteToSend = 8;
 10123                           
 10124                           ;incstack = 0
 10125                           ;incstack = 0
 10126  006E56  0E08               	movlw	8
 10127  006E58  6E29               	movwf	USBCtrlTrfTxService@byteToSend,c
 10128                           
 10129                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 10130  006E5A  0100               	movlb	0	; () banked
 10131  006E5C  5DB7               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 10132  006E5E  0E00               	movlw	0
 10133  006E60  59B8               	subwfb	(_inPipes+5)& (0+255),w,b	;volatile
 10134  006E62  E20A               	bc	i2l3649
 10135                           
 10136                           ; BSR set to: 0
 10137                           ;usb_device.c: 1779: {
 10138                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 10139  006E64  C0B7  F029         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 10140                           
 10141                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 10142  006E68  6623               	tstfsz	_shortPacketStatus,c	;volatile
 10143  006E6A  D002               	goto	i2l3645
 10144                           
 10145                           ; BSR set to: 0
 10146                           ;usb_device.c: 1788: {
 10147                           ;usb_device.c: 1789: shortPacketStatus = 1;
 10148  006E6C  0E01               	movlw	1
 10149  006E6E  D003               	goto	L25
 10150  006E70                     i2l3645:
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 10154  006E70  0423               	decf	_shortPacketStatus,w,c	;volatile
 10155  006E72  E102               	bnz	i2l3649
 10156                           
 10157                           ; BSR set to: 0
 10158                           ;usb_device.c: 1792: {
 10159                           ;usb_device.c: 1793: shortPacketStatus = 2;
 10160  006E74  0E02               	movlw	2
 10161  006E76                     L25:
 10162  006E76  6E23               	movwf	_shortPacketStatus,c	;volatile
 10163  006E78                     i2l3649:
 10164                           
 10165                           ; BSR set to: 0
 10166                           ;usb_device.c: 1794: }
 10167                           ;usb_device.c: 1795: }
 10168                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 10169  006E78  5029               	movf	USBCtrlTrfTxService@byteToSend,w,c
 10170  006E7A  5FB7               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 10171  006E7C  0E00               	movlw	0
 10172  006E7E  5BB8               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 10173                           
 10174                           ; BSR set to: 0
 10175                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 10176  006E80  EE20 F001          	lfsr	2,1
 10177  006E84  516C               	movf	_pBDTEntryIn& (0+255),w,b
 10178  006E86  26D9               	addwf	fsr2l,f,c
 10179  006E88  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 10180  006E8A  22DA               	addwfc	fsr2h,f,c
 10181  006E8C  C029  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 10182                           
 10183                           ; BSR set to: 0
 10184                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 10185  006E90  0E04               	movlw	4	;volatile
 10186  006E92  6E0A               	movwf	_pDst+1,c
 10187  006E94  0E28               	movlw	40	;volatile
 10188  006E96  6E09               	movwf	_pDst,c
 10189                           
 10190                           ; BSR set to: 4
 10191                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 10192  006E98  0100               	movlb	0	; () banked
 10193  006E9A  A1B6               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 10194  006E9C  D01C               	goto	i2l3667
 10195  006E9E  D039               	goto	i2l3677
 10196  006EA0                     i2l3659:
 10197                           
 10198                           ; BSR set to: 0
 10199                           ;usb_device.c: 1812: {
 10200                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 10201  006EA0  C0B3  FFF6         	movff	_inPipes,tblptrl	;volatile
 10202  006EA4  C0B4  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 10203  006EA8  6AF8               	clrf	tblptru,c
 10204  006EAA  C009  FFD9         	movff	_pDst,fsr2l
 10205  006EAE  C00A  FFDA         	movff	_pDst+1,fsr2h
 10206  006EB2  0E07               	movlw	(high __ramtop+-1)
 10207  006EB4  64F7               	cpfsgt	tblptrh,c
 10208  006EB6  D003               	bra	i2u254_47
 10209  006EB8  0008               	tblrd		*
 10210  006EBA  50F5               	movf	tablat,w,c
 10211  006EBC  D005               	bra	i2u254_40
 10212  006EBE                     i2u254_47:
 10213  006EBE  CFF6 FFE9          	movff	tblptrl,fsr0l
 10214  006EC2  CFF7 FFEA          	movff	tblptrh,fsr0h
 10215  006EC6  50EF               	movf	indf0,w,c
 10216  006EC8                     i2u254_40:
 10217  006EC8  6EDF               	movwf	indf2,c
 10218  006ECA  0100               	movlb	0	; () banked
 10219  006ECC  4BB3               	infsnz	_inPipes& (0+255),f,b	;volatile
 10220  006ECE  2BB4               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 10221                           
 10222                           ; BSR set to: 0
 10223  006ED0  4A09               	infsnz	_pDst,f,c
 10224  006ED2  2A0A               	incf	_pDst+1,f,c
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;usb_device.c: 1814: byteToSend--;
 10228  006ED4  0629               	decf	USBCtrlTrfTxService@byteToSend,f,c
 10229  006ED6                     i2l3667:
 10230                           
 10231                           ; BSR set to: 0
 10232  006ED6  6629               	tstfsz	USBCtrlTrfTxService@byteToSend,c
 10233  006ED8  D7E3               	goto	i2l3659
 10234  006EDA  D01D               	goto	i2l243
 10235  006EDC                     i2l3669:
 10236                           
 10237                           ; BSR set to: 0
 10238                           ;usb_device.c: 1820: {
 10239                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 10240  006EDC  C0B3  FFF6         	movff	_inPipes,tblptrl	;volatile
 10241  006EE0  C0B4  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 10242  006EE4  6AF8               	clrf	tblptru,c
 10243  006EE6  C009  FFD9         	movff	_pDst,fsr2l
 10244  006EEA  C00A  FFDA         	movff	_pDst+1,fsr2h
 10245  006EEE  0E07               	movlw	(high __ramtop+-1)
 10246  006EF0  64F7               	cpfsgt	tblptrh,c
 10247  006EF2  D003               	bra	i2u256_47
 10248  006EF4  0008               	tblrd		*
 10249  006EF6  50F5               	movf	tablat,w,c
 10250  006EF8  D005               	bra	i2u256_40
 10251  006EFA                     i2u256_47:
 10252  006EFA  CFF6 FFE9          	movff	tblptrl,fsr0l
 10253  006EFE  CFF7 FFEA          	movff	tblptrh,fsr0h
 10254  006F02  50EF               	movf	indf0,w,c
 10255  006F04                     i2u256_40:
 10256  006F04  6EDF               	movwf	indf2,c
 10257  006F06  0100               	movlb	0	; () banked
 10258  006F08  4BB3               	infsnz	_inPipes& (0+255),f,b	;volatile
 10259  006F0A  2BB4               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 10260                           
 10261                           ; BSR set to: 0
 10262  006F0C  4A09               	infsnz	_pDst,f,c
 10263  006F0E  2A0A               	incf	_pDst+1,f,c
 10264                           
 10265                           ; BSR set to: 0
 10266                           ;usb_device.c: 1822: byteToSend--;
 10267  006F10  0629               	decf	USBCtrlTrfTxService@byteToSend,f,c
 10268  006F12                     i2l3677:
 10269                           
 10270                           ; BSR set to: 0
 10271  006F12  6629               	tstfsz	USBCtrlTrfTxService@byteToSend,c
 10272  006F14  D7E3               	goto	i2l3669
 10273  006F16                     i2l243:
 10274                           
 10275                           ; BSR set to: 0
 10276  006F16  0012               	return	
 10277  006F18                     __end_of_USBCtrlTrfTxService:
 10278                           	opt stack 0
 10279                           tosu	equ	0xFFF
 10280                           tosh	equ	0xFFE
 10281                           tosl	equ	0xFFD
 10282                           pclatu	equ	0xFFB
 10283                           pclath	equ	0xFFA
 10284                           tblptru	equ	0xFF8
 10285                           tblptrh	equ	0xFF7
 10286                           tblptrl	equ	0xFF6
 10287                           tablat	equ	0xFF5
 10288                           prodh	equ	0xFF4
 10289                           prodl	equ	0xFF3
 10290                           intcon	equ	0xFF2
 10291                           intcon2	equ	0xFF1
 10292                           intcon3	equ	0xFF0
 10293                           indf0	equ	0xFEF
 10294                           postinc0	equ	0xFEE
 10295                           fsr0h	equ	0xFEA
 10296                           fsr0l	equ	0xFE9
 10297                           wreg	equ	0xFE8
 10298                           indf1	equ	0xFE7
 10299                           postinc1	equ	0xFE6
 10300                           postdec1	equ	0xFE5
 10301                           fsr1h	equ	0xFE2
 10302                           fsr1l	equ	0xFE1
 10303                           bsr	equ	0xFE0
 10304                           indf2	equ	0xFDF
 10305                           postinc2	equ	0xFDE
 10306                           postdec2	equ	0xFDD
 10307                           plusw2	equ	0xFDB
 10308                           fsr2h	equ	0xFDA
 10309                           fsr2l	equ	0xFD9
 10310                           status	equ	0xFD8
 10311                           
 10312 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 10313 ;; Defined at:
 10314 ;;		line 1417 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_
      +device.c"
 10315 ;; Parameters:    Size  Location     Type
 10316 ;;		None
 10317 ;; Auto vars:     Size  Location     Type
 10318 ;;		None
 10319 ;; Return value:  Size  Location     Type
 10320 ;;		None               void
 10321 ;; Registers used:
 10322 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10323 ;; Tracked objects:
 10324 ;;		On entry : 0/0
 10325 ;;		On exit  : F/0
 10326 ;;		Unchanged: 0/0
 10327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10328 ;;      Params:         0       0       0       0       0       0       0       0       0
 10329 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10330 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10331 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10332 ;;Total ram usage:        0 bytes
 10333 ;; Hardware stack levels used:    1
 10334 ;; This function calls:
 10335 ;;		Nothing
 10336 ;; This function is called by:
 10337 ;;		_USBDeviceTasks
 10338 ;;		_USBCtrlEPServiceComplete
 10339 ;;		_USBCtrlTrfRxService
 10340 ;; This function uses a non-reentrant model
 10341 ;;
 10342                           
 10343                           	psect	text55
 10344  006B76                     __ptext55:
 10345                           	opt stack 0
 10346  006B76                     _USBCtrlEPAllowStatusStage:
 10347                           	opt stack 16
 10348                           
 10349                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 10350                           
 10351                           ; BSR set to: 0
 10352                           ;incstack = 0
 10353                           ;incstack = 0
 10354  006B76  0100               	movlb	0	; () banked
 10355  006B78  677D               	tstfsz	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 10356  006B7A  D057               	goto	i2l204
 10357                           
 10358                           ; BSR set to: 0
 10359                           ;usb_device.c: 1424: {
 10360                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 10361  006B7C  0E01               	movlw	1
 10362  006B7E  6F7D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 10363                           
 10364                           ; BSR set to: 0
 10365                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 10366  006B80  677E               	tstfsz	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 10367  006B82  D053               	goto	i2l204
 10368                           
 10369                           ; BSR set to: 0
 10370                           ;usb_device.c: 1427: {
 10371                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 10372  006B84  6F7E               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;usb_device.c: 1432: if(controlTransferState == 2)
 10376  006B86  5015               	movf	_controlTransferState,w,c	;volatile
 10377  006B88  0A02               	xorlw	2
 10378  006B8A  E115               	bnz	i2l3477
 10379                           
 10380                           ; BSR set to: 0
 10381                           ;usb_device.c: 1433: {
 10382                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 10383  006B8C  EE20 F001          	lfsr	2,1
 10384  006B90  516C               	movf	_pBDTEntryIn& (0+255),w,b
 10385  006B92  26D9               	addwf	fsr2l,f,c
 10386  006B94  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 10387  006B96  22DA               	addwfc	fsr2h,f,c
 10388  006B98  0E00               	movlw	0
 10389  006B9A  6EDF               	movwf	indf2,c
 10390                           
 10391                           ; BSR set to: 0
 10392                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10393  006B9C  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 10394  006BA0  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10395  006BA4  0E48               	movlw	72
 10396  006BA6  6EDF               	movwf	indf2,c
 10397                           
 10398                           ; BSR set to: 0
 10399                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10400  006BA8  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 10401  006BAC  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10402  006BB0  0E00               	movlw	0
 10403  006BB2  8EDB               	bsf	plusw2,7,c
 10404                           
 10405                           ;usb_device.c: 1437: }
 10406  006BB4  D03A               	goto	i2l204
 10407  006BB6                     i2l3477:
 10408                           
 10409                           ; BSR set to: 0
 10410                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 10411  006BB6  0415               	decf	_controlTransferState,w,c	;volatile
 10412  006BB8  E138               	bnz	i2l204
 10413                           
 10414                           ; BSR set to: 0
 10415                           ;usb_device.c: 1439: {
 10416                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 10417  006BBA  6A0D               	clrf	_BothEP0OutUOWNsSet,c	;volatile
 10418                           
 10419                           ; BSR set to: 0
 10420                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 10421  006BBC  EE20 F001          	lfsr	2,1
 10422  006BC0  5005               	movf	_pBDTEntryEP0OutCurrent,w,c
 10423  006BC2  26D9               	addwf	fsr2l,f,c
 10424  006BC4  5006               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 10425  006BC6  22DA               	addwfc	fsr2h,f,c
 10426  006BC8  0E08               	movlw	8
 10427  006BCA  6EDF               	movwf	indf2,c
 10428                           
 10429                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 10430  006BCC  EE20 F002          	lfsr	2,2
 10431  006BD0  5005               	movf	_pBDTEntryEP0OutCurrent,w,c
 10432  006BD2  26D9               	addwf	fsr2l,f,c
 10433  006BD4  5006               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 10434  006BD6  22DA               	addwfc	fsr2h,f,c
 10435  006BD8  0E20               	movlw	32
 10436  006BDA  6EDE               	movwf	postinc2,c
 10437  006BDC  0E04               	movlw	4
 10438  006BDE  6EDD               	movwf	postdec2,c
 10439                           
 10440                           ; BSR set to: 0
 10441                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 10442  006BE0  C005  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 10443  006BE4  C006  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 10444  006BE8  6EDF               	movwf	indf2,c
 10445                           
 10446                           ; BSR set to: 0
 10447                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 10448  006BEA  C005  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 10449  006BEE  C006  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 10450  006BF2  0E00               	movlw	0
 10451  006BF4  8EDB               	bsf	plusw2,7,c
 10452                           
 10453                           ; BSR set to: 0
 10454                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 10455  006BF6  0E01               	movlw	1
 10456  006BF8  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 10457                           
 10458                           ; BSR set to: 0
 10459                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 10460  006BFA  EE20 F001          	lfsr	2,1
 10461  006BFE  5007               	movf	_pBDTEntryEP0OutNext,w,c
 10462  006C00  26D9               	addwf	fsr2l,f,c
 10463  006C02  5008               	movf	_pBDTEntryEP0OutNext+1,w,c
 10464  006C04  22DA               	addwfc	fsr2h,f,c
 10465  006C06  0E08               	movlw	8
 10466  006C08  6EDF               	movwf	indf2,c
 10467                           
 10468                           ; BSR set to: 0
 10469                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10470  006C0A  EE20 F002          	lfsr	2,2
 10471  006C0E  5007               	movf	_pBDTEntryEP0OutNext,w,c
 10472  006C10  26D9               	addwf	fsr2l,f,c
 10473  006C12  5008               	movf	_pBDTEntryEP0OutNext+1,w,c
 10474  006C14  22DA               	addwfc	fsr2h,f,c
 10475  006C16  0E20               	movlw	32
 10476  006C18  6EDE               	movwf	postinc2,c
 10477  006C1A  0E04               	movlw	4
 10478  006C1C  6EDD               	movwf	postdec2,c
 10479                           
 10480                           ; BSR set to: 0
 10481                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 10482  006C1E  C007  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10483  006C22  C008  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10484  006C26  0E80               	movlw	128
 10485  006C28  6EDF               	movwf	indf2,c
 10486  006C2A                     i2l204:
 10487                           
 10488                           ; BSR set to: 0
 10489  006C2A  0012               	return	
 10490  006C2C                     __end_of_USBCtrlEPAllowStatusStage:
 10491                           	opt stack 0
 10492                           tosu	equ	0xFFF
 10493                           tosh	equ	0xFFE
 10494                           tosl	equ	0xFFD
 10495                           pclatu	equ	0xFFB
 10496                           pclath	equ	0xFFA
 10497                           tblptru	equ	0xFF8
 10498                           tblptrh	equ	0xFF7
 10499                           tblptrl	equ	0xFF6
 10500                           tablat	equ	0xFF5
 10501                           prodh	equ	0xFF4
 10502                           prodl	equ	0xFF3
 10503                           intcon	equ	0xFF2
 10504                           intcon2	equ	0xFF1
 10505                           intcon3	equ	0xFF0
 10506                           indf0	equ	0xFEF
 10507                           postinc0	equ	0xFEE
 10508                           fsr0h	equ	0xFEA
 10509                           fsr0l	equ	0xFE9
 10510                           wreg	equ	0xFE8
 10511                           indf1	equ	0xFE7
 10512                           postinc1	equ	0xFE6
 10513                           postdec1	equ	0xFE5
 10514                           fsr1h	equ	0xFE2
 10515                           fsr1l	equ	0xFE1
 10516                           bsr	equ	0xFE0
 10517                           indf2	equ	0xFDF
 10518                           postinc2	equ	0xFDE
 10519                           postdec2	equ	0xFDD
 10520                           plusw2	equ	0xFDB
 10521                           fsr2h	equ	0xFDA
 10522                           fsr2l	equ	0xFD9
 10523                           status	equ	0xFD8
 10524                           
 10525 ;; *************** function _USBStallHandler *****************
 10526 ;; Defined at:
 10527 ;;		line 2203 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_
      +device.c"
 10528 ;; Parameters:    Size  Location     Type
 10529 ;;		None
 10530 ;; Auto vars:     Size  Location     Type
 10531 ;;		None
 10532 ;; Return value:  Size  Location     Type
 10533 ;;		None               void
 10534 ;; Registers used:
 10535 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10536 ;; Tracked objects:
 10537 ;;		On entry : 0/0
 10538 ;;		On exit  : 0/0
 10539 ;;		Unchanged: 0/0
 10540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10541 ;;      Params:         0       0       0       0       0       0       0       0       0
 10542 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10543 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10544 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10545 ;;Total ram usage:        0 bytes
 10546 ;; Hardware stack levels used:    1
 10547 ;; This function calls:
 10548 ;;		Nothing
 10549 ;; This function is called by:
 10550 ;;		_USBDeviceTasks
 10551 ;; This function uses a non-reentrant model
 10552 ;;
 10553                           
 10554                           	psect	text56
 10555  00637E                     __ptext56:
 10556                           	opt stack 0
 10557  00637E                     _USBStallHandler:
 10558                           	opt stack 19
 10559                           
 10560                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 10561                           
 10562                           ; BSR set to: 0
 10563                           ;incstack = 0
 10564                           ;incstack = 0
 10565  00637E  A070               	btfss	3952,0,c	;volatile
 10566  006380  D01B               	goto	i2l294
 10567                           
 10568                           ;usb_device.c: 2215: {
 10569                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 10570  006382  0E80               	movlw	128
 10571  006384  C005  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 10572  006388  C006  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 10573  00638C  62DF               	cpfseq	indf2,c
 10574  00638E  D013               	goto	i2l3505
 10575  006390  0E84               	movlw	132
 10576  006392  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 10577  006396  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10578  00639A  62DF               	cpfseq	indf2,c
 10579  00639C  D00C               	goto	i2l3505
 10580                           
 10581                           ;usb_device.c: 2218: {
 10582                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 10583  00639E  C005  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 10584  0063A2  C006  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 10585  0063A6  0E0C               	movlw	12
 10586  0063A8  6EDF               	movwf	indf2,c
 10587                           
 10588                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 10589  0063AA  C005  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 10590  0063AE  C006  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 10591  0063B2  0E00               	movlw	0
 10592  0063B4  8EDB               	bsf	plusw2,7,c
 10593  0063B6                     i2l3505:
 10594                           
 10595                           ;usb_device.c: 2222: }
 10596                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 10597  0063B6  9070               	bcf	3952,0,c	;volatile
 10598  0063B8                     i2l294:
 10599                           
 10600                           ;usb_device.c: 2224: }
 10601                           ;usb_device.c: 2226: (UIR &= 0xDF);
 10602  0063B8  9A68               	bcf	3944,5,c	;volatile
 10603  0063BA  0012               	return	
 10604  0063BC                     __end_of_USBStallHandler:
 10605                           	opt stack 0
 10606                           tosu	equ	0xFFF
 10607                           tosh	equ	0xFFE
 10608                           tosl	equ	0xFFD
 10609                           pclatu	equ	0xFFB
 10610                           pclath	equ	0xFFA
 10611                           tblptru	equ	0xFF8
 10612                           tblptrh	equ	0xFF7
 10613                           tblptrl	equ	0xFF6
 10614                           tablat	equ	0xFF5
 10615                           prodh	equ	0xFF4
 10616                           prodl	equ	0xFF3
 10617                           intcon	equ	0xFF2
 10618                           intcon2	equ	0xFF1
 10619                           intcon3	equ	0xFF0
 10620                           indf0	equ	0xFEF
 10621                           postinc0	equ	0xFEE
 10622                           fsr0h	equ	0xFEA
 10623                           fsr0l	equ	0xFE9
 10624                           wreg	equ	0xFE8
 10625                           indf1	equ	0xFE7
 10626                           postinc1	equ	0xFE6
 10627                           postdec1	equ	0xFE5
 10628                           fsr1h	equ	0xFE2
 10629                           fsr1l	equ	0xFE1
 10630                           bsr	equ	0xFE0
 10631                           indf2	equ	0xFDF
 10632                           postinc2	equ	0xFDE
 10633                           postdec2	equ	0xFDD
 10634                           plusw2	equ	0xFDB
 10635                           fsr2h	equ	0xFDA
 10636                           fsr2l	equ	0xFD9
 10637                           status	equ	0xFD8
 10638                           
 10639 ;; *************** function _USBSuspend *****************
 10640 ;; Defined at:
 10641 ;;		line 2246 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_
      +device.c"
 10642 ;; Parameters:    Size  Location     Type
 10643 ;;		None
 10644 ;; Auto vars:     Size  Location     Type
 10645 ;;		None
 10646 ;; Return value:  Size  Location     Type
 10647 ;;		None               void
 10648 ;; Registers used:
 10649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 10650 ;; Tracked objects:
 10651 ;;		On entry : 0/0
 10652 ;;		On exit  : 0/0
 10653 ;;		Unchanged: 0/0
 10654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10655 ;;      Params:         0       0       0       0       0       0       0       0       0
 10656 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10657 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10658 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10659 ;;Total ram usage:        0 bytes
 10660 ;; Hardware stack levels used:    1
 10661 ;; Hardware stack levels required when called:    4
 10662 ;; This function calls:
 10663 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10664 ;; This function is called by:
 10665 ;;		_USBDeviceTasks
 10666 ;; This function uses a non-reentrant model
 10667 ;;
 10668                           
 10669                           	psect	text57
 10670  006192                     __ptext57:
 10671                           	opt stack 0
 10672  006192                     _USBSuspend:
 10673                           	opt stack 15
 10674                           
 10675                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 10676                           
 10677                           ;incstack = 0
 10678                           ;incstack = 0
 10679  006192  8469               	bsf	3945,2,c	;volatile
 10680                           
 10681                           ;usb_device.c: 2271: (UIR &= 0xEF);
 10682  006194  9868               	bcf	3944,4,c	;volatile
 10683                           
 10684                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 10685  006196  826D               	bsf	3949,1,c	;volatile
 10686                           
 10687                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 10688  006198  0E01               	movlw	1
 10689  00619A  0100               	movlb	0	; () banked
 10690  00619C  6F7C               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 10691                           
 10692                           ; BSR set to: 0
 10693                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 10694  00619E  6A3A               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1,c
 10695  0061A0  0E75               	movlw	117
 10696  0061A2  6E39               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER,c
 10697  0061A4  6A3C               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3,c
 10698  0061A6  6A3B               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2,c
 10699  0061A8  6A3E               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+5,c
 10700  0061AA  6A3D               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4,c
 10701  0061AC  EF6A  F032         	goto	i2l3451	;wreg free
 10702  0061B0                     __end_of_USBSuspend:
 10703                           	opt stack 0
 10704                           tosu	equ	0xFFF
 10705                           tosh	equ	0xFFE
 10706                           tosl	equ	0xFFD
 10707                           pclatu	equ	0xFFB
 10708                           pclath	equ	0xFFA
 10709                           tblptru	equ	0xFF8
 10710                           tblptrh	equ	0xFF7
 10711                           tblptrl	equ	0xFF6
 10712                           tablat	equ	0xFF5
 10713                           prodh	equ	0xFF4
 10714                           prodl	equ	0xFF3
 10715                           intcon	equ	0xFF2
 10716                           intcon2	equ	0xFF1
 10717                           intcon3	equ	0xFF0
 10718                           indf0	equ	0xFEF
 10719                           postinc0	equ	0xFEE
 10720                           fsr0h	equ	0xFEA
 10721                           fsr0l	equ	0xFE9
 10722                           wreg	equ	0xFE8
 10723                           indf1	equ	0xFE7
 10724                           postinc1	equ	0xFE6
 10725                           postdec1	equ	0xFE5
 10726                           fsr1h	equ	0xFE2
 10727                           fsr1l	equ	0xFE1
 10728                           bsr	equ	0xFE0
 10729                           indf2	equ	0xFDF
 10730                           postinc2	equ	0xFDE
 10731                           postdec2	equ	0xFDD
 10732                           plusw2	equ	0xFDB
 10733                           fsr2h	equ	0xFDA
 10734                           fsr2l	equ	0xFD9
 10735                           status	equ	0xFD8
 10736                           
 10737 ;; *************** function _USBWakeFromSuspend *****************
 10738 ;; Defined at:
 10739 ;;		line 2303 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_
      +device.c"
 10740 ;; Parameters:    Size  Location     Type
 10741 ;;		None
 10742 ;; Auto vars:     Size  Location     Type
 10743 ;;		None
 10744 ;; Return value:  Size  Location     Type
 10745 ;;		None               void
 10746 ;; Registers used:
 10747 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 10748 ;; Tracked objects:
 10749 ;;		On entry : 0/0
 10750 ;;		On exit  : 0/0
 10751 ;;		Unchanged: 0/0
 10752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10753 ;;      Params:         0       0       0       0       0       0       0       0       0
 10754 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10755 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10756 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10757 ;;Total ram usage:        0 bytes
 10758 ;; Hardware stack levels used:    1
 10759 ;; Hardware stack levels required when called:    4
 10760 ;; This function calls:
 10761 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10762 ;; This function is called by:
 10763 ;;		_USBDeviceTasks
 10764 ;; This function uses a non-reentrant model
 10765 ;;
 10766                           
 10767                           	psect	text58
 10768  0061B0                     __ptext58:
 10769                           	opt stack 0
 10770  0061B0                     _USBWakeFromSuspend:
 10771                           	opt stack 15
 10772                           
 10773                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 10774                           
 10775                           ;incstack = 0
 10776                           ;incstack = 0
 10777  0061B0  0100               	movlb	0	; () banked
 10778  0061B2  6B7C               	clrf	_USBBusIsSuspended& (0+255),b	;volatile
 10779                           
 10780                           ; BSR set to: 0
 10781                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 10782  0061B4  6A3A               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1,c
 10783  0061B6  0E74               	movlw	116
 10784  0061B8  6E39               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER,c
 10785  0061BA  0E00               	movlw	0
 10786  0061BC  6A3C               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3,c
 10787  0061BE  6A3B               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2,c
 10788  0061C0  6A3E               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+5,c
 10789  0061C2  6A3D               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4,c
 10790  0061C4  EC63  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10791                           
 10792                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 10793  0061C8  926D               	bcf	3949,1,c	;volatile
 10794                           
 10795                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 10796  0061CA  9469               	bcf	3945,2,c	;volatile
 10797                           
 10798                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 10799  0061CC  D001               	goto	i2l3431
 10800  0061CE                     i2l3429:
 10801                           
 10802                           ;usb_device.c: 2342: {
 10803                           ;usb_device.c: 2343: (UIR &= 0xFB);
 10804  0061CE  9468               	bcf	3944,2,c	;volatile
 10805  0061D0                     i2l3431:
 10806  0061D0  A468               	btfss	3944,2,c	;volatile
 10807  0061D2  0012               	return	
 10808  0061D4  D7FC               	goto	i2l3429
 10809  0061D6                     __end_of_USBWakeFromSuspend:
 10810                           	opt stack 0
 10811                           tosu	equ	0xFFF
 10812                           tosh	equ	0xFFE
 10813                           tosl	equ	0xFFD
 10814                           pclatu	equ	0xFFB
 10815                           pclath	equ	0xFFA
 10816                           tblptru	equ	0xFF8
 10817                           tblptrh	equ	0xFF7
 10818                           tblptrl	equ	0xFF6
 10819                           tablat	equ	0xFF5
 10820                           prodh	equ	0xFF4
 10821                           prodl	equ	0xFF3
 10822                           intcon	equ	0xFF2
 10823                           intcon2	equ	0xFF1
 10824                           intcon3	equ	0xFF0
 10825                           indf0	equ	0xFEF
 10826                           postinc0	equ	0xFEE
 10827                           fsr0h	equ	0xFEA
 10828                           fsr0l	equ	0xFE9
 10829                           wreg	equ	0xFE8
 10830                           indf1	equ	0xFE7
 10831                           postinc1	equ	0xFE6
 10832                           postdec1	equ	0xFE5
 10833                           fsr1h	equ	0xFE2
 10834                           fsr1l	equ	0xFE1
 10835                           bsr	equ	0xFE0
 10836                           indf2	equ	0xFDF
 10837                           postinc2	equ	0xFDE
 10838                           postdec2	equ	0xFDD
 10839                           plusw2	equ	0xFDB
 10840                           fsr2h	equ	0xFDA
 10841                           fsr2l	equ	0xFD9
 10842                           status	equ	0xFD8
 10843                           
 10844 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 10845 ;; Defined at:
 10846 ;;		line 86 in file "comm.c"
 10847 ;; Parameters:    Size  Location     Type
 10848 ;;  event           2   17[COMRAM] enum E5667
 10849 ;;  pdata           2   19[COMRAM] PTR void 
 10850 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(32), 
 10851 ;;  size            2   21[COMRAM] unsigned int 
 10852 ;; Auto vars:     Size  Location     Type
 10853 ;;		None
 10854 ;; Return value:  Size  Location     Type
 10855 ;;                  1    wreg      unsigned char 
 10856 ;; Registers used:
 10857 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 10858 ;; Tracked objects:
 10859 ;;		On entry : 0/0
 10860 ;;		On exit  : 0/0
 10861 ;;		Unchanged: 0/0
 10862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10863 ;;      Params:         6       0       0       0       0       0       0       0       0
 10864 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10865 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10866 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10867 ;;Total ram usage:        8 bytes
 10868 ;; Hardware stack levels used:    1
 10869 ;; Hardware stack levels required when called:    3
 10870 ;; This function calls:
 10871 ;;		_USBCheckVendorRequest
 10872 ;;		_comm_usb_configured
 10873 ;; This function is called by:
 10874 ;;		_USBDeviceTasks
 10875 ;;		_USBStdSetCfgHandler
 10876 ;;		_USBSuspend
 10877 ;;		_USBWakeFromSuspend
 10878 ;;		_USBCtrlTrfSetupHandler
 10879 ;;		_USBCheckStdRequest
 10880 ;;		_USBStdFeatureReqHandler
 10881 ;; This function uses a non-reentrant model
 10882 ;;
 10883                           
 10884                           	psect	text59
 10885  0064C6                     __ptext59:
 10886                           	opt stack 0
 10887  0064C6                     _USER_USB_CALLBACK_EVENT_HANDLER:
 10888                           	opt stack 12
 10889                           
 10890                           ;comm.c: 87: switch((int)event)
 10891                           
 10892                           ;incstack = 0
 10893                           ;incstack = 0
 10894  0064C6  D006               	goto	i2l3451
 10895  0064C8                     i2l3445:
 10896                           
 10897                           ;comm.c: 102: comm_usb_configured();
 10898  0064C8  EC57  F031         	call	_comm_usb_configured	;wreg free
 10899                           
 10900                           ;comm.c: 103: break;
 10901  0064CC  D01E               	goto	i2l488
 10902  0064CE                     i2l3447:
 10903                           
 10904                           ;comm.c: 109: USBCheckVendorRequest();
 10905  0064CE  EC52  F030         	call	_USBCheckVendorRequest	;wreg free
 10906                           
 10907                           ;comm.c: 110: break;
 10908  0064D2  D01B               	goto	i2l488
 10909  0064D4                     i2l3451:
 10910  0064D4  C039  F03F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 10911  0064D8  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 10912                           
 10913                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 10914                           ; Switch size 1, requested type "speed"
 10915                           ; Number of cases is 2, Range of values is 0 to 127
 10916                           ; switch strategies available:
 10917                           ; Name         Instructions Cycles
 10918                           ; simple_byte            7     4 (average)
 10919                           ;	Chosen strategy is simple_byte
 10920  0064DC  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 10921  0064DE  E003               	bz	i2l4863
 10922  0064E0  0A7F               	xorlw	127	; case 127
 10923  0064E2  E012               	bz	i2l4865
 10924  0064E4  D012               	goto	i2l488
 10925  0064E6                     i2l4863:
 10926                           
 10927                           ; Switch size 1, requested type "speed"
 10928                           ; Number of cases is 8, Range of values is 1 to 117
 10929                           ; switch strategies available:
 10930                           ; Name         Instructions Cycles
 10931                           ; simple_byte           25    13 (average)
 10932                           ;	Chosen strategy is simple_byte
 10933  0064E6  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 10934  0064E8  0A01               	xorlw	1	; case 1
 10935  0064EA  E0EE               	bz	i2l3445
 10936  0064EC  0A03               	xorlw	3	; case 2
 10937  0064EE  E00D               	bz	i2l488
 10938  0064F0  0A01               	xorlw	1	; case 3
 10939  0064F2  E0ED               	bz	i2l3447
 10940  0064F4  0A06               	xorlw	6	; case 5
 10941  0064F6  E009               	bz	i2l488
 10942  0064F8  0A77               	xorlw	119	; case 114
 10943  0064FA  E007               	bz	i2l488
 10944  0064FC  0A01               	xorlw	1	; case 115
 10945  0064FE  E005               	bz	i2l488
 10946  006500  0A07               	xorlw	7	; case 116
 10947  006502  E003               	bz	i2l488
 10948  006504  0A01               	xorlw	1	; case 117
 10949  006506  D001               	goto	i2l488
 10950  006508                     i2l4865:
 10951                           
 10952                           ; Switch size 1, requested type "speed"
 10953                           ; Number of cases is 1, Range of values is 255 to 255
 10954                           ; switch strategies available:
 10955                           ; Name         Instructions Cycles
 10956                           ; simple_byte            4     3 (average)
 10957                           ;	Chosen strategy is simple_byte
 10958  006508  1C3F               	comf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 10959  00650A                     i2l488:
 10960  00650A  0012               	return	
 10961  00650C                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 10962                           	opt stack 0
 10963                           tosu	equ	0xFFF
 10964                           tosh	equ	0xFFE
 10965                           tosl	equ	0xFFD
 10966                           pclatu	equ	0xFFB
 10967                           pclath	equ	0xFFA
 10968                           tblptru	equ	0xFF8
 10969                           tblptrh	equ	0xFF7
 10970                           tblptrl	equ	0xFF6
 10971                           tablat	equ	0xFF5
 10972                           prodh	equ	0xFF4
 10973                           prodl	equ	0xFF3
 10974                           intcon	equ	0xFF2
 10975                           intcon2	equ	0xFF1
 10976                           intcon3	equ	0xFF0
 10977                           indf0	equ	0xFEF
 10978                           postinc0	equ	0xFEE
 10979                           fsr0h	equ	0xFEA
 10980                           fsr0l	equ	0xFE9
 10981                           wreg	equ	0xFE8
 10982                           indf1	equ	0xFE7
 10983                           postinc1	equ	0xFE6
 10984                           postdec1	equ	0xFE5
 10985                           fsr1h	equ	0xFE2
 10986                           fsr1l	equ	0xFE1
 10987                           bsr	equ	0xFE0
 10988                           indf2	equ	0xFDF
 10989                           postinc2	equ	0xFDE
 10990                           postdec2	equ	0xFDD
 10991                           plusw2	equ	0xFDB
 10992                           fsr2h	equ	0xFDA
 10993                           fsr2l	equ	0xFD9
 10994                           status	equ	0xFD8
 10995                           
 10996 ;; *************** function _comm_usb_configured *****************
 10997 ;; Defined at:
 10998 ;;		line 75 in file "comm.c"
 10999 ;; Parameters:    Size  Location     Type
 11000 ;;		None
 11001 ;; Auto vars:     Size  Location     Type
 11002 ;;		None
 11003 ;; Return value:  Size  Location     Type
 11004 ;;		None               void
 11005 ;; Registers used:
 11006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11007 ;; Tracked objects:
 11008 ;;		On entry : 0/0
 11009 ;;		On exit  : F/0
 11010 ;;		Unchanged: 0/0
 11011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11012 ;;      Params:         0       0       0       0       0       0       0       0       0
 11013 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11014 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11015 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11016 ;;Total ram usage:        0 bytes
 11017 ;; Hardware stack levels used:    1
 11018 ;; Hardware stack levels required when called:    2
 11019 ;; This function calls:
 11020 ;;		_USBEnableEndpoint
 11021 ;;		i2_USBTransferOnePacket
 11022 ;; This function is called by:
 11023 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11024 ;; This function uses a non-reentrant model
 11025 ;;
 11026                           
 11027                           	psect	text60
 11028  0062AE                     __ptext60:
 11029                           	opt stack 0
 11030  0062AE                     _comm_usb_configured:
 11031                           	opt stack 12
 11032                           
 11033                           ;comm.c: 76: comm_in_buffer.packet.id = 0;
 11034                           
 11035                           ;incstack = 0
 11036                           ;incstack = 0
 11037  0062AE  0105               	movlb	5	; () banked
 11038  0062B0  6B40               	clrf	64,b
 11039                           
 11040                           ;comm.c: 77: comm_in_handle = 0;
 11041  0062B2  0100               	movlb	0	; () banked
 11042  0062B4  6B74               	clrf	_comm_in_handle& (0+255),b
 11043  0062B6  6B75               	clrf	(_comm_in_handle+1)& (0+255),b
 11044                           
 11045                           ; BSR set to: 0
 11046                           ;comm.c: 79: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 11047  0062B8  0E1E               	movlw	30
 11048  0062BA  6E33               	movwf	?_USBEnableEndpoint,c
 11049  0062BC  0E01               	movlw	1
 11050  0062BE  EC1F  F032         	call	_USBEnableEndpoint
 11051                           
 11052                           ;comm.c: 82: comm_out_handle = (volatile void*)USBTransferOnePacket(1,0,(uint8_t*)&comm_
      +                          out_buffer,64);
 11053  0062C2  6A29               	clrf	?i2_USBTransferOnePacket,c
 11054  0062C4  0105               	movlb	5	; () banked
 11055  0062C6  0E05               	movlw	5
 11056  0062C8  6E2B               	movwf	?i2_USBTransferOnePacket+2,c
 11057  0062CA  6A2A               	clrf	?i2_USBTransferOnePacket+1,c
 11058  0062CC  0E40               	movlw	64
 11059  0062CE  6E2C               	movwf	?i2_USBTransferOnePacket+3,c
 11060  0062D0  0E01               	movlw	1
 11061  0062D2  EC0F  F035         	call	i2_USBTransferOnePacket
 11062  0062D6  C029  F076         	movff	?i2_USBTransferOnePacket,_comm_out_handle
 11063  0062DA  C02A  F077         	movff	?i2_USBTransferOnePacket+1,_comm_out_handle+1
 11064                           
 11065                           ; BSR set to: 0
 11066  0062DE  0012               	return	
 11067  0062E0                     __end_of_comm_usb_configured:
 11068                           	opt stack 0
 11069                           tosu	equ	0xFFF
 11070                           tosh	equ	0xFFE
 11071                           tosl	equ	0xFFD
 11072                           pclatu	equ	0xFFB
 11073                           pclath	equ	0xFFA
 11074                           tblptru	equ	0xFF8
 11075                           tblptrh	equ	0xFF7
 11076                           tblptrl	equ	0xFF6
 11077                           tablat	equ	0xFF5
 11078                           prodh	equ	0xFF4
 11079                           prodl	equ	0xFF3
 11080                           intcon	equ	0xFF2
 11081                           intcon2	equ	0xFF1
 11082                           intcon3	equ	0xFF0
 11083                           indf0	equ	0xFEF
 11084                           postinc0	equ	0xFEE
 11085                           fsr0h	equ	0xFEA
 11086                           fsr0l	equ	0xFE9
 11087                           wreg	equ	0xFE8
 11088                           indf1	equ	0xFE7
 11089                           postinc1	equ	0xFE6
 11090                           postdec1	equ	0xFE5
 11091                           fsr1h	equ	0xFE2
 11092                           fsr1l	equ	0xFE1
 11093                           bsr	equ	0xFE0
 11094                           indf2	equ	0xFDF
 11095                           postinc2	equ	0xFDE
 11096                           postdec2	equ	0xFDD
 11097                           plusw2	equ	0xFDB
 11098                           fsr2h	equ	0xFDA
 11099                           fsr2l	equ	0xFD9
 11100                           status	equ	0xFD8
 11101                           
 11102 ;; *************** function i2_USBTransferOnePacket *****************
 11103 ;; Defined at:
 11104 ;;		line 996 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 11105 ;; Parameters:    Size  Location     Type
 11106 ;;  ep              1    wreg     unsigned char 
 11107 ;;  dir             1    1[COMRAM] unsigned char 
 11108 ;;  data            2    2[COMRAM] PTR unsigned char 
 11109 ;;		 -> comm_in_buffer(64), comm_out_buffer(64), 
 11110 ;;  len             1    4[COMRAM] unsigned char 
 11111 ;; Auto vars:     Size  Location     Type
 11112 ;;  ep              1    5[COMRAM] unsigned char 
 11113 ;;  USBTransferO    2    6[COMRAM] PTR volatile struct __BD
 11114 ;;		 -> NULL(0), BDT(32), 
 11115 ;; Return value:  Size  Location     Type
 11116 ;;                  2    1[COMRAM] PTR void 
 11117 ;; Registers used:
 11118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11119 ;; Tracked objects:
 11120 ;;		On entry : F/5
 11121 ;;		On exit  : F/0
 11122 ;;		Unchanged: 0/0
 11123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11124 ;;      Params:         4       0       0       0       0       0       0       0       0
 11125 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11126 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11127 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11128 ;;Total ram usage:        7 bytes
 11129 ;; Hardware stack levels used:    1
 11130 ;; This function calls:
 11131 ;;		Nothing
 11132 ;; This function is called by:
 11133 ;;		_comm_usb_configured
 11134 ;; This function uses a non-reentrant model
 11135 ;;
 11136                           
 11137                           	psect	text61
 11138  006A1E                     __ptext61:
 11139                           	opt stack 0
 11140  006A1E                     i2_USBTransferOnePacket:
 11141                           	opt stack 13
 11142                           
 11143                           ; BSR set to: 0
 11144                           ;incstack = 0
 11145                           ;incstack = 0
 11146                           ;i2USBTransferOnePacket@ep stored from wreg
 11147  006A1E  CFE8 F02D          	movff	wreg,i2USBTransferOnePacket@ep
 11148                           
 11149                           ; BSR set to: 5
 11150                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 11151                           ;usb_device.c: 1000: if(dir != 0)
 11152  006A22  5029               	movf	i2USBTransferOnePacket@dir,w,c
 11153  006A24  E006               	bz	i2l4749
 11154                           
 11155                           ; BSR set to: 5
 11156                           ;usb_device.c: 1001: {
 11157                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 11158  006A26  502D               	movf	i2USBTransferOnePacket@ep,w,c
 11159  006A28  0D02               	mullw	2
 11160  006A2A  50F3               	movf	prodl,w,c
 11161  006A2C  0100               	movlb	0	; () banked
 11162  006A2E  0F6C               	addlw	low _pBDTEntryIn
 11163  006A30  D005               	goto	L26
 11164  006A32                     i2l4749:
 11165                           
 11166                           ; BSR set to: 5
 11167                           ;usb_device.c: 1005: else
 11168                           ;usb_device.c: 1006: {
 11169                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 11170  006A32  502D               	movf	i2USBTransferOnePacket@ep,w,c
 11171  006A34  0D02               	mullw	2
 11172  006A36  50F3               	movf	prodl,w,c
 11173  006A38  0100               	movlb	0	; () banked
 11174  006A3A  0F70               	addlw	low _pBDTEntryOut
 11175  006A3C                     L26:
 11176  006A3C  6ED9               	movwf	fsr2l,c
 11177  006A3E  6ADA               	clrf	fsr2h,c
 11178  006A40  CFDE F02E          	movff	postinc2,i2USBTransferOnePacket@handle
 11179  006A44  CFDD F02F          	movff	postdec2,i2USBTransferOnePacket@handle+1
 11180                           
 11181                           ; BSR set to: 0
 11182                           ;usb_device.c: 1009: }
 11183                           ;usb_device.c: 1013: if(handle == 0)
 11184  006A48  502F               	movf	i2USBTransferOnePacket@handle+1,w,c
 11185  006A4A  102E               	iorwf	i2USBTransferOnePacket@handle,w,c
 11186  006A4C  E103               	bnz	i2l4755
 11187                           
 11188                           ; BSR set to: 0
 11189                           ;usb_device.c: 1014: {
 11190                           ;usb_device.c: 1015: return 0;
 11191  006A4E  6A29               	clrf	?i2_USBTransferOnePacket,c
 11192  006A50  6A2A               	clrf	?i2_USBTransferOnePacket+1,c
 11193  006A52  D036               	goto	i2l174
 11194  006A54                     i2l4755:
 11195                           
 11196                           ; BSR set to: 0
 11197                           ;usb_device.c: 1016: }
 11198                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 11199  006A54  EE20 F002          	lfsr	2,2
 11200  006A58  502E               	movf	i2USBTransferOnePacket@handle,w,c
 11201  006A5A  26D9               	addwf	fsr2l,f,c
 11202  006A5C  502F               	movf	i2USBTransferOnePacket@handle+1,w,c
 11203  006A5E  22DA               	addwfc	fsr2h,f,c
 11204  006A60  C02A  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 11205  006A64  C02B  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 11206                           
 11207                           ;usb_device.c: 1030: handle->CNT = len;
 11208  006A68  EE20 F001          	lfsr	2,1
 11209  006A6C  502E               	movf	i2USBTransferOnePacket@handle,w,c
 11210  006A6E  26D9               	addwf	fsr2l,f,c
 11211  006A70  502F               	movf	i2USBTransferOnePacket@handle+1,w,c
 11212  006A72  22DA               	addwfc	fsr2h,f,c
 11213  006A74  C02C  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 11214                           
 11215                           ; BSR set to: 0
 11216                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 11217  006A78  C02E  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 11218  006A7C  C02F  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 11219  006A80  0E40               	movlw	64
 11220  006A82  16DF               	andwf	indf2,f,c
 11221                           
 11222                           ; BSR set to: 0
 11223                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 11224  006A84  C02E  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 11225  006A88  C02F  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 11226  006A8C  0E00               	movlw	0
 11227  006A8E  86DB               	bsf	plusw2,3,c
 11228                           
 11229                           ; BSR set to: 0
 11230                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 11231  006A90  C02E  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 11232  006A94  C02F  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 11233  006A98  8EDB               	bsf	plusw2,7,c
 11234                           
 11235                           ; BSR set to: 0
 11236                           ;usb_device.c: 1036: if(dir != 0)
 11237  006A9A  5029               	movf	i2USBTransferOnePacket@dir,w,c
 11238  006A9C  E005               	bz	i2l4767
 11239                           
 11240                           ; BSR set to: 0
 11241                           ;usb_device.c: 1037: {
 11242                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 11243  006A9E  502D               	movf	i2USBTransferOnePacket@ep,w,c
 11244  006AA0  0D02               	mullw	2
 11245  006AA2  50F3               	movf	prodl,w,c
 11246  006AA4  0F6C               	addlw	low _pBDTEntryIn
 11247  006AA6  D004               	goto	L27
 11248  006AA8                     i2l4767:
 11249                           
 11250                           ; BSR set to: 0
 11251                           ;usb_device.c: 1041: else
 11252                           ;usb_device.c: 1042: {
 11253                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 11254  006AA8  502D               	movf	i2USBTransferOnePacket@ep,w,c
 11255  006AAA  0D02               	mullw	2
 11256  006AAC  50F3               	movf	prodl,w,c
 11257  006AAE  0F70               	addlw	low _pBDTEntryOut
 11258  006AB0                     L27:
 11259  006AB0  6ED9               	movwf	fsr2l,c
 11260  006AB2  6ADA               	clrf	fsr2h,c
 11261  006AB4  0E04               	movlw	4
 11262  006AB6  1ADF               	xorwf	indf2,f,c
 11263                           
 11264                           ; BSR set to: 0
 11265                           ;usb_device.c: 1045: }
 11266                           ;usb_device.c: 1046: return (void*)handle;
 11267  006AB8  C02E  F029         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 11268  006ABC  C02F  F02A         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 11269  006AC0                     i2l174:
 11270                           
 11271                           ; BSR set to: 0
 11272  006AC0  0012               	return	
 11273  006AC2                     __end_ofi2_USBTransferOnePacket:
 11274                           	opt stack 0
 11275                           tosu	equ	0xFFF
 11276                           tosh	equ	0xFFE
 11277                           tosl	equ	0xFFD
 11278                           pclatu	equ	0xFFB
 11279                           pclath	equ	0xFFA
 11280                           tblptru	equ	0xFF8
 11281                           tblptrh	equ	0xFF7
 11282                           tblptrl	equ	0xFF6
 11283                           tablat	equ	0xFF5
 11284                           prodh	equ	0xFF4
 11285                           prodl	equ	0xFF3
 11286                           intcon	equ	0xFF2
 11287                           intcon2	equ	0xFF1
 11288                           intcon3	equ	0xFF0
 11289                           indf0	equ	0xFEF
 11290                           postinc0	equ	0xFEE
 11291                           fsr0h	equ	0xFEA
 11292                           fsr0l	equ	0xFE9
 11293                           wreg	equ	0xFE8
 11294                           indf1	equ	0xFE7
 11295                           postinc1	equ	0xFE6
 11296                           postdec1	equ	0xFE5
 11297                           fsr1h	equ	0xFE2
 11298                           fsr1l	equ	0xFE1
 11299                           bsr	equ	0xFE0
 11300                           indf2	equ	0xFDF
 11301                           postinc2	equ	0xFDE
 11302                           postdec2	equ	0xFDD
 11303                           plusw2	equ	0xFDB
 11304                           fsr2h	equ	0xFDA
 11305                           fsr2l	equ	0xFD9
 11306                           status	equ	0xFD8
 11307                           
 11308 ;; *************** function _USBEnableEndpoint *****************
 11309 ;; Defined at:
 11310 ;;		line 879 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 11311 ;; Parameters:    Size  Location     Type
 11312 ;;  ep              1    wreg     unsigned char 
 11313 ;;  options         1   11[COMRAM] unsigned char 
 11314 ;; Auto vars:     Size  Location     Type
 11315 ;;  ep              1   16[COMRAM] unsigned char 
 11316 ;;  p               2   14[COMRAM] PTR unsigned char 
 11317 ;;		 -> UEP0(1), 
 11318 ;; Return value:  Size  Location     Type
 11319 ;;		None               void
 11320 ;; Registers used:
 11321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11322 ;; Tracked objects:
 11323 ;;		On entry : F/0
 11324 ;;		On exit  : F/0
 11325 ;;		Unchanged: 0/0
 11326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11327 ;;      Params:         1       0       0       0       0       0       0       0       0
 11328 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11329 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11330 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11331 ;;Total ram usage:        6 bytes
 11332 ;; Hardware stack levels used:    1
 11333 ;; Hardware stack levels required when called:    1
 11334 ;; This function calls:
 11335 ;;		_USBConfigureEndpoint
 11336 ;; This function is called by:
 11337 ;;		_comm_usb_configured
 11338 ;; This function uses a non-reentrant model
 11339 ;;
 11340                           
 11341                           	psect	text62
 11342  00643E                     __ptext62:
 11343                           	opt stack 0
 11344  00643E                     _USBEnableEndpoint:
 11345                           	opt stack 12
 11346                           
 11347                           ; BSR set to: 0
 11348                           ;incstack = 0
 11349                           ;incstack = 0
 11350                           ;USBEnableEndpoint@ep stored from wreg
 11351  00643E  CFE8 F038          	movff	wreg,USBEnableEndpoint@ep
 11352                           
 11353                           ; BSR set to: 0
 11354                           ;usb_device.c: 880: unsigned char* p;
 11355                           ;usb_device.c: 884: if(options & 0x04)
 11356  006442  A433               	btfss	USBEnableEndpoint@options,2,c
 11357  006444  D004               	goto	i2l3547
 11358                           
 11359                           ; BSR set to: 0
 11360                           ;usb_device.c: 885: {
 11361                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 11362  006446  6A29               	clrf	?_USBConfigureEndpoint,c
 11363  006448  5038               	movf	USBEnableEndpoint@ep,w,c
 11364  00644A  EC27  F034         	call	_USBConfigureEndpoint
 11365  00644E                     i2l3547:
 11366                           
 11367                           ; BSR set to: 0
 11368                           ;usb_device.c: 887: }
 11369                           ;usb_device.c: 888: if(options & 0x02)
 11370  00644E  A233               	btfss	USBEnableEndpoint@options,1,c
 11371  006450  D005               	goto	i2l3551
 11372                           
 11373                           ; BSR set to: 0
 11374                           ;usb_device.c: 889: {
 11375                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 11376  006452  0E01               	movlw	1
 11377  006454  6E29               	movwf	?_USBConfigureEndpoint,c
 11378  006456  5038               	movf	USBEnableEndpoint@ep,w,c
 11379  006458  EC27  F034         	call	_USBConfigureEndpoint
 11380  00645C                     i2l3551:
 11381                           
 11382                           ; BSR set to: 0
 11383                           ;usb_device.c: 891: }
 11384                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 11385  00645C  0E70               	movlw	112	;volatile
 11386  00645E  6E34               	movwf	??_USBEnableEndpoint& (0+255),c
 11387  006460  0E0F               	movlw	15	;volatile
 11388  006462  6E35               	movwf	(??_USBEnableEndpoint+1)& (0+255),c
 11389  006464  5038               	movf	USBEnableEndpoint@ep,w,c
 11390  006466  2634               	addwf	??_USBEnableEndpoint,f,c
 11391  006468  0E00               	movlw	0
 11392  00646A  2235               	addwfc	??_USBEnableEndpoint+1,f,c
 11393  00646C  C034  F036         	movff	??_USBEnableEndpoint,USBEnableEndpoint@p
 11394  006470  C035  F037         	movff	??_USBEnableEndpoint+1,USBEnableEndpoint@p+1
 11395                           
 11396                           ; BSR set to: 0
 11397                           ;usb_device.c: 901: *p = options;
 11398  006474  C036  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11399  006478  C037  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11400  00647C  C033  FFDF         	movff	USBEnableEndpoint@options,indf2
 11401                           
 11402                           ; BSR set to: 0
 11403  006480  0C00               	retlw	0
 11404  006482                     __end_of_USBEnableEndpoint:
 11405                           	opt stack 0
 11406                           tosu	equ	0xFFF
 11407                           tosh	equ	0xFFE
 11408                           tosl	equ	0xFFD
 11409                           pclatu	equ	0xFFB
 11410                           pclath	equ	0xFFA
 11411                           tblptru	equ	0xFF8
 11412                           tblptrh	equ	0xFF7
 11413                           tblptrl	equ	0xFF6
 11414                           tablat	equ	0xFF5
 11415                           prodh	equ	0xFF4
 11416                           prodl	equ	0xFF3
 11417                           intcon	equ	0xFF2
 11418                           intcon2	equ	0xFF1
 11419                           intcon3	equ	0xFF0
 11420                           indf0	equ	0xFEF
 11421                           postinc0	equ	0xFEE
 11422                           fsr0h	equ	0xFEA
 11423                           fsr0l	equ	0xFE9
 11424                           wreg	equ	0xFE8
 11425                           indf1	equ	0xFE7
 11426                           postinc1	equ	0xFE6
 11427                           postdec1	equ	0xFE5
 11428                           fsr1h	equ	0xFE2
 11429                           fsr1l	equ	0xFE1
 11430                           bsr	equ	0xFE0
 11431                           indf2	equ	0xFDF
 11432                           postinc2	equ	0xFDE
 11433                           postdec2	equ	0xFDD
 11434                           plusw2	equ	0xFDB
 11435                           fsr2h	equ	0xFDA
 11436                           fsr2l	equ	0xFD9
 11437                           status	equ	0xFD8
 11438                           
 11439 ;; *************** function _USBConfigureEndpoint *****************
 11440 ;; Defined at:
 11441 ;;		line 1544 in file "../../../../../../../../../Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_
      +device.c"
 11442 ;; Parameters:    Size  Location     Type
 11443 ;;  EPNum           1    wreg     unsigned char 
 11444 ;;  direction       1    1[COMRAM] unsigned char 
 11445 ;; Auto vars:     Size  Location     Type
 11446 ;;  EPNum           1    8[COMRAM] unsigned char 
 11447 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 11448 ;;		 -> BDT(32), 
 11449 ;; Return value:  Size  Location     Type
 11450 ;;		None               void
 11451 ;; Registers used:
 11452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11453 ;; Tracked objects:
 11454 ;;		On entry : F/0
 11455 ;;		On exit  : F/0
 11456 ;;		Unchanged: 0/0
 11457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11458 ;;      Params:         1       0       0       0       0       0       0       0       0
 11459 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11460 ;;      Temps:          6       0       0       0       0       0       0       0       0
 11461 ;;      Totals:        10       0       0       0       0       0       0       0       0
 11462 ;;Total ram usage:       10 bytes
 11463 ;; Hardware stack levels used:    1
 11464 ;; This function calls:
 11465 ;;		Nothing
 11466 ;; This function is called by:
 11467 ;;		_USBEnableEndpoint
 11468 ;; This function uses a non-reentrant model
 11469 ;;
 11470                           
 11471                           	psect	text63
 11472  00684E                     __ptext63:
 11473                           	opt stack 0
 11474  00684E                     _USBConfigureEndpoint:
 11475                           	opt stack 12
 11476                           
 11477                           ; BSR set to: 0
 11478                           ;incstack = 0
 11479                           ;incstack = 0
 11480                           ;USBConfigureEndpoint@EPNum stored from wreg
 11481  00684E  CFE8 F030          	movff	wreg,USBConfigureEndpoint@EPNum
 11482                           
 11483                           ; BSR set to: 0
 11484                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 11485                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 11486  006852  0104               	movlb	4	; () banked
 11487  006854  0E04               	movlw	4	;volatile
 11488  006856  6E32               	movwf	USBConfigureEndpoint@handle+1,c
 11489  006858  6A31               	clrf	USBConfigureEndpoint@handle,c
 11490                           
 11491                           ; BSR set to: 4
 11492                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 11493  00685A  90D8               	bcf	status,0,c
 11494  00685C  3429               	rlcf	USBConfigureEndpoint@direction,w,c
 11495  00685E  6E2A               	movwf	??_USBConfigureEndpoint& (0+255),c
 11496  006860  6A2B               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 11497  006862  362B               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,c
 11498  006864  5030               	movf	USBConfigureEndpoint@EPNum,w,c
 11499  006866  6E2C               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 11500  006868  6A2D               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 11501  00686A  90D8               	bcf	status,0,c
 11502  00686C  362C               	rlcf	??_USBConfigureEndpoint+2,f,c
 11503  00686E  362D               	rlcf	??_USBConfigureEndpoint+3,f,c
 11504  006870  90D8               	bcf	status,0,c
 11505  006872  362C               	rlcf	??_USBConfigureEndpoint+2,f,c
 11506  006874  362D               	rlcf	??_USBConfigureEndpoint+3,f,c
 11507  006876  502A               	movf	??_USBConfigureEndpoint,w,c
 11508  006878  242C               	addwf	??_USBConfigureEndpoint+2,w,c
 11509  00687A  6E2E               	movwf	(??_USBConfigureEndpoint+4)& (0+255),c
 11510  00687C  502B               	movf	??_USBConfigureEndpoint+1,w,c
 11511  00687E  202D               	addwfc	??_USBConfigureEndpoint+3,w,c
 11512  006880  6E2F               	movwf	(??_USBConfigureEndpoint+5)& (0+255),c
 11513  006882  90D8               	bcf	status,0,c
 11514  006884  362E               	rlcf	??_USBConfigureEndpoint+4,f,c
 11515  006886  362F               	rlcf	??_USBConfigureEndpoint+5,f,c
 11516  006888  90D8               	bcf	status,0,c
 11517  00688A  362E               	rlcf	??_USBConfigureEndpoint+4,f,c
 11518  00688C  362F               	rlcf	??_USBConfigureEndpoint+5,f,c
 11519  00688E  502E               	movf	??_USBConfigureEndpoint+4,w,c
 11520  006890  2631               	addwf	USBConfigureEndpoint@handle,f,c
 11521  006892  502F               	movf	??_USBConfigureEndpoint+5,w,c
 11522  006894  2232               	addwfc	USBConfigureEndpoint@handle+1,f,c
 11523                           
 11524                           ; BSR set to: 4
 11525                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 11526  006896  C031  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11527  00689A  C032  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11528  00689E  0E7F               	movlw	-129
 11529  0068A0  16DF               	andwf	indf2,f,c
 11530                           
 11531                           ; BSR set to: 4
 11532                           ;usb_device.c: 1557: if(direction == 0)
 11533  0068A2  6629               	tstfsz	USBConfigureEndpoint@direction,c
 11534  0068A4  D006               	goto	i2l3565
 11535                           
 11536                           ; BSR set to: 4
 11537                           ;usb_device.c: 1558: {
 11538                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 11539  0068A6  5030               	movf	USBConfigureEndpoint@EPNum,w,c
 11540  0068A8  0D02               	mullw	2
 11541  0068AA  50F3               	movf	prodl,w,c
 11542  0068AC  0100               	movlb	0	; () banked
 11543  0068AE  0F70               	addlw	low _pBDTEntryOut
 11544  0068B0  D005               	goto	L28
 11545  0068B2                     i2l3565:
 11546                           
 11547                           ; BSR set to: 4
 11548                           ;usb_device.c: 1561: else
 11549                           ;usb_device.c: 1562: {
 11550                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 11551  0068B2  5030               	movf	USBConfigureEndpoint@EPNum,w,c
 11552  0068B4  0D02               	mullw	2
 11553  0068B6  50F3               	movf	prodl,w,c
 11554  0068B8  0100               	movlb	0	; () banked
 11555  0068BA  0F6C               	addlw	low _pBDTEntryIn
 11556  0068BC                     L28:
 11557  0068BC  6ED9               	movwf	fsr2l,c
 11558  0068BE  6ADA               	clrf	fsr2h,c
 11559  0068C0  C031  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 11560  0068C4  C032  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 11561                           
 11562                           ; BSR set to: 0
 11563                           ;usb_device.c: 1564: }
 11564                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 11565  0068C8  C031  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11566  0068CC  C032  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11567  0068D0  0EBF               	movlw	-65
 11568  0068D2  16DF               	andwf	indf2,f,c
 11569                           
 11570                           ; BSR set to: 0
 11571                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 11572  0068D4  EE20 F004          	lfsr	2,4
 11573  0068D8  5031               	movf	USBConfigureEndpoint@handle,w,c
 11574  0068DA  26D9               	addwf	fsr2l,f,c
 11575  0068DC  5032               	movf	USBConfigureEndpoint@handle+1,w,c
 11576  0068DE  22DA               	addwfc	fsr2h,f,c
 11577  0068E0  0E40               	movlw	64
 11578  0068E2  12DF               	iorwf	indf2,f,c
 11579                           
 11580                           ; BSR set to: 0
 11581  0068E4  0C40               	retlw	64
 11582  0068E6                     __end_of_USBConfigureEndpoint:
 11583                           	opt stack 0
 11584                           tosu	equ	0xFFF
 11585                           tosh	equ	0xFFE
 11586                           tosl	equ	0xFFD
 11587                           pclatu	equ	0xFFB
 11588                           pclath	equ	0xFFA
 11589                           tblptru	equ	0xFF8
 11590                           tblptrh	equ	0xFF7
 11591                           tblptrl	equ	0xFF6
 11592                           tablat	equ	0xFF5
 11593                           prodh	equ	0xFF4
 11594                           prodl	equ	0xFF3
 11595                           intcon	equ	0xFF2
 11596                           intcon2	equ	0xFF1
 11597                           intcon3	equ	0xFF0
 11598                           indf0	equ	0xFEF
 11599                           postinc0	equ	0xFEE
 11600                           fsr0h	equ	0xFEA
 11601                           fsr0l	equ	0xFE9
 11602                           wreg	equ	0xFE8
 11603                           indf1	equ	0xFE7
 11604                           postinc1	equ	0xFE6
 11605                           postdec1	equ	0xFE5
 11606                           fsr1h	equ	0xFE2
 11607                           fsr1l	equ	0xFE1
 11608                           bsr	equ	0xFE0
 11609                           indf2	equ	0xFDF
 11610                           postinc2	equ	0xFDE
 11611                           postdec2	equ	0xFDD
 11612                           plusw2	equ	0xFDB
 11613                           fsr2h	equ	0xFDA
 11614                           fsr2l	equ	0xFD9
 11615                           status	equ	0xFD8
 11616                           
 11617 ;; *************** function _USBCheckVendorRequest *****************
 11618 ;; Defined at:
 11619 ;;		line 248 in file "/Volumes/Yosemite/Users/zangel/microchip/mla/v2014_07_22/framework/usb/src/usb_device_generic.c"
 11620 ;; Parameters:    Size  Location     Type
 11621 ;;		None
 11622 ;; Auto vars:     Size  Location     Type
 11623 ;;		None
 11624 ;; Return value:  Size  Location     Type
 11625 ;;		None               void
 11626 ;; Registers used:
 11627 ;;		None
 11628 ;; Tracked objects:
 11629 ;;		On entry : 0/0
 11630 ;;		On exit  : 0/0
 11631 ;;		Unchanged: 0/0
 11632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11633 ;;      Params:         0       0       0       0       0       0       0       0       0
 11634 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11635 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11636 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11637 ;;Total ram usage:        0 bytes
 11638 ;; Hardware stack levels used:    1
 11639 ;; This function calls:
 11640 ;;		Nothing
 11641 ;; This function is called by:
 11642 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11643 ;; This function uses a non-reentrant model
 11644 ;;
 11645                           
 11646                           	psect	text64
 11647  0060A4                     __ptext64:
 11648                           	opt stack 0
 11649  0060A4                     _USBCheckVendorRequest:
 11650                           	opt stack 14
 11651                           
 11652                           ; BSR set to: 0
 11653                           ;incstack = 0
 11654                           ;incstack = 0
 11655  0060A4  0012               	return	
 11656  0060A6                     __end_of_USBCheckVendorRequest:
 11657                           	opt stack 0
 11658                           tosu	equ	0xFFF
 11659                           tosh	equ	0xFFE
 11660                           tosl	equ	0xFFD
 11661                           pclatu	equ	0xFFB
 11662                           pclath	equ	0xFFA
 11663                           tblptru	equ	0xFF8
 11664                           tblptrh	equ	0xFF7
 11665                           tblptrl	equ	0xFF6
 11666                           tablat	equ	0xFF5
 11667                           prodh	equ	0xFF4
 11668                           prodl	equ	0xFF3
 11669                           intcon	equ	0xFF2
 11670                           intcon2	equ	0xFF1
 11671                           intcon3	equ	0xFF0
 11672                           indf0	equ	0xFEF
 11673                           postinc0	equ	0xFEE
 11674                           fsr0h	equ	0xFEA
 11675                           fsr0l	equ	0xFE9
 11676                           wreg	equ	0xFE8
 11677                           indf1	equ	0xFE7
 11678                           postinc1	equ	0xFE6
 11679                           postdec1	equ	0xFE5
 11680                           fsr1h	equ	0xFE2
 11681                           fsr1l	equ	0xFE1
 11682                           bsr	equ	0xFE0
 11683                           indf2	equ	0xFDF
 11684                           postinc2	equ	0xFDE
 11685                           postdec2	equ	0xFDD
 11686                           plusw2	equ	0xFDB
 11687                           fsr2h	equ	0xFDA
 11688                           fsr2l	equ	0xFD9
 11689                           status	equ	0xFD8
 11690                           tosu	equ	0xFFF
 11691                           tosh	equ	0xFFE
 11692                           tosl	equ	0xFFD
 11693                           pclatu	equ	0xFFB
 11694                           pclath	equ	0xFFA
 11695                           tblptru	equ	0xFF8
 11696                           tblptrh	equ	0xFF7
 11697                           tblptrl	equ	0xFF6
 11698                           tablat	equ	0xFF5
 11699                           prodh	equ	0xFF4
 11700                           prodl	equ	0xFF3
 11701                           intcon	equ	0xFF2
 11702                           intcon2	equ	0xFF1
 11703                           intcon3	equ	0xFF0
 11704                           indf0	equ	0xFEF
 11705                           postinc0	equ	0xFEE
 11706                           fsr0h	equ	0xFEA
 11707                           fsr0l	equ	0xFE9
 11708                           wreg	equ	0xFE8
 11709                           indf1	equ	0xFE7
 11710                           postinc1	equ	0xFE6
 11711                           postdec1	equ	0xFE5
 11712                           fsr1h	equ	0xFE2
 11713                           fsr1l	equ	0xFE1
 11714                           bsr	equ	0xFE0
 11715                           indf2	equ	0xFDF
 11716                           postinc2	equ	0xFDE
 11717                           postdec2	equ	0xFDD
 11718                           plusw2	equ	0xFDB
 11719                           fsr2h	equ	0xFDA
 11720                           fsr2l	equ	0xFD9
 11721                           status	equ	0xFD8
 11722                           
 11723                           	psect	rparam
 11724  0000                     tosu	equ	0xFFF
 11725                           tosh	equ	0xFFE
 11726                           tosl	equ	0xFFD
 11727                           pclatu	equ	0xFFB
 11728                           pclath	equ	0xFFA
 11729                           tblptru	equ	0xFF8
 11730                           tblptrh	equ	0xFF7
 11731                           tblptrl	equ	0xFF6
 11732                           tablat	equ	0xFF5
 11733                           prodh	equ	0xFF4
 11734                           prodl	equ	0xFF3
 11735                           intcon	equ	0xFF2
 11736                           intcon2	equ	0xFF1
 11737                           intcon3	equ	0xFF0
 11738                           indf0	equ	0xFEF
 11739                           postinc0	equ	0xFEE
 11740                           fsr0h	equ	0xFEA
 11741                           fsr0l	equ	0xFE9
 11742                           wreg	equ	0xFE8
 11743                           indf1	equ	0xFE7
 11744                           postinc1	equ	0xFE6
 11745                           postdec1	equ	0xFE5
 11746                           fsr1h	equ	0xFE2
 11747                           fsr1l	equ	0xFE1
 11748                           bsr	equ	0xFE0
 11749                           indf2	equ	0xFDF
 11750                           postinc2	equ	0xFDE
 11751                           postdec2	equ	0xFDD
 11752                           plusw2	equ	0xFDB
 11753                           fsr2h	equ	0xFDA
 11754                           fsr2l	equ	0xFD9
 11755                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    210
    Data        2
    BSS         128
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      82
    BANK0           160     30     121
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           208      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ?_USBTransferOnePacket	PTR void  size(2) Largest target is 32
		 -> NULL(NULL[0]), BDT(BIGRAMl[32]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 32
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[32]), 

    ?_memset	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMl[32]), UEP1(ABS[1]), 

    memset@p1	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMl[32]), UEP1(ABS[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMl[32]), UEP1(ABS[1]), 

    sensors_i2c_async_write_bytes@data	PTR const unsigned char  size(1) Largest target is 1
		 -> sensors_i2c_async_rw_completed@AMI304_read_request(COMRAM[1]), sensors_i2c_async_rw_completed@MPL3115A2_read_request(COMRAM[1]), 

    sensors_i2c_async_read_bytes@data	PTR unsigned char  size(1) Largest target is 50
		 -> sensors_measurement_buffers(BANK0[50]), NULL(NULL[0]), 

    sensors_i2c_async_rw_buffer	PTR unsigned char  size(2) Largest target is 50
		 -> sensors_i2c_async_rw_completed@AMI304_read_request(COMRAM[1]), sensors_i2c_async_rw_completed@MPL3115A2_read_request(COMRAM[1]), sensors_measurement_buffers(BANK0[50]), NULL(NULL[0]), 

    sensors_i2c_read_byte@data	PTR unsigned char  size(1) Largest target is 1
		 -> sensors_init@data(BANK0[1]), 

    sensors_i2c_read_bytes@data	PTR unsigned char  size(1) Largest target is 1
		 -> sensors_init@data(BANK0[1]), 

    sensors_i2c_write_bytes@data	PTR const unsigned char  size(1) Largest target is 1
		 -> sensors_i2c_write_byte@data(BANK0[1]), 

    sensors_measurement_read_buffer	PTR unsigned char  size(1) Largest target is 50
		 -> sensors_measurement_buffers(BANK0[50]), NULL(NULL[0]), 

    sensors_measurement_get@m	PTR struct . size(2) Largest target is 64
		 -> comm_in_buffer..(DATA[24]), comm_in_buffer(BIGRAMhh[64]), 

    sensors_measurement_get@buffer	PTR const unsigned char  size(1) Largest target is 50
		 -> sensors_measurement_buffers(BANK0[50]), 

    comm_in_handle	PTR volatile void  size(2) Largest target is 32
		 -> NULL(NULL[0]), BDT(BIGRAMl[32]), 

    comm_out_handle	PTR volatile void  size(2) Largest target is 32
		 -> NULL(NULL[0]), BDT(BIGRAMl[32]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(ABS[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 32
		 -> NULL(NULL[0]), BDT(BIGRAMl[32]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 32
		 -> NULL(NULL[0]), BDT(BIGRAMl[32]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(1) Largest target is 26
		 -> sd002(CODE[26]), sd001(CODE[22]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(1) Largest target is 32
		 -> configDescriptor1(CODE[32]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 32
		 -> BDT(BIGRAMl[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 32
		 -> NULL(NULL[0]), BDT(BIGRAMl[32]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 32
		 -> NULL(NULL[0]), BDT(BIGRAMl[32]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> comm_in_buffer(BIGRAMhh[64]), comm_out_buffer(BIGRAMhl[64]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 32
		 -> NULL(NULL[0]), BDT(BIGRAMl[32]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 32
		 -> NULL(NULL[0]), BDT(BIGRAMl[32]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(ABS[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(2) Largest target is 32
		 -> NULL(NULL[0]), BDT(BIGRAMl[32]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(2) Largest target is 32
		 -> NULL(NULL[0]), BDT(BIGRAMl[32]), 

    S102$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S92$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S92$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S68$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S68$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S68$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S68$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(COMRAM[1]), BDT(BIGRAMl[32]), UEP1(ABS[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _interrupt_high in COMRAM

    _sensors_i2c_async_rw_completed->_sensors_i2c_async_read_bytes
    _sensors_i2c_async_rw_completed->_sensors_i2c_async_write_bytes
    _sensors_measurement_read_async->_sensors_i2c_async_read_bytes
    _comm_isr->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _comm_usb_configured->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint

Critical Paths under _interrupt_low in COMRAM

    None.

Critical Paths under _main in BANK0

    _app_process->_comm_process
    _comm_process->_sensors_measurement_get
    _app_init->_sensors_init
    _sensors_init->_sensors_i2c_read_byte
    _sensors_i2c_read_byte->_sensors_i2c_read_bytes
    _sensors_i2c_read_bytes->_WriteI2C
    _sensors_i2c_write_byte->_sensors_i2c_write_bytes
    _sensors_i2c_write_bytes->_WriteI2C
    _motors_init->_motors_set_pwm
    _comm_init->_USBDeviceInit
    _USBDeviceInit->_memset

Critical Paths under _interrupt_high in BANK0

    None.

Critical Paths under _interrupt_low in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_high in BANK1

    None.

Critical Paths under _interrupt_low in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_high in BANK2

    None.

Critical Paths under _interrupt_low in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_high in BANK3

    None.

Critical Paths under _interrupt_low in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_high in BANK4

    None.

Critical Paths under _interrupt_low in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_high in BANK5

    None.

Critical Paths under _interrupt_low in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt_high in BANK6

    None.

Critical Paths under _interrupt_low in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt_high in BANK7

    None.

Critical Paths under _interrupt_low in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2515
                           _app_init
                        _app_process
 ---------------------------------------------------------------------------------
 (1) _app_process                                          0     0      0    1393
                       _comm_process
                       _leds_process
                     _motors_process
                    _sensors_process
 ---------------------------------------------------------------------------------
 (2) _sensors_process                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _motors_process                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _leds_process                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _comm_process                                         4     4      0    1393
                                             22 BANK0      4     4      0
               _USBTransferOnePacket
                     _motors_set_pwm
            _sensors_measurement_get
 ---------------------------------------------------------------------------------
 (3) _sensors_measurement_get                              8     6      2     837
                                             14 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                 7     3      4     332
                                             14 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _app_init                                             0     0      0    1122
                          _comm_init
                          _leds_init
                        _motors_init
                       _sensors_init
          _sensors_measurement_start
 ---------------------------------------------------------------------------------
 (2) _sensors_measurement_start                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _sensors_init                                         3     3      0     648
                                             28 BANK0      2     2      0
                            _OpenI2C
             _sensors_i2c_write_byte
              _sensors_i2c_read_byte
 ---------------------------------------------------------------------------------
 (3) _sensors_i2c_read_byte                                3     1      2     245
                                             25 BANK0      3     1      2
             _sensors_i2c_read_bytes
 ---------------------------------------------------------------------------------
 (4) _sensors_i2c_read_bytes                              10     7      3     179
                                             15 BANK0     10     7      3
                            _IdleI2C
                           _WriteI2C
                            _ReadI2C
 ---------------------------------------------------------------------------------
 (5) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sensors_i2c_write_byte                               3     1      2     223
                                             20 BANK0      3     1      2
            _sensors_i2c_write_bytes
 ---------------------------------------------------------------------------------
 (4) _sensors_i2c_write_bytes                              5     2      3     156
                                             15 BANK0      5     2      3
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (5) _WriteI2C                                             1     1      0      22
                                             14 BANK0      1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (6) _IdleI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OpenI2C                                              2     1      1      44
                                             14 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _motors_init                                          0     0      0     176
                     _motors_set_pwm
 ---------------------------------------------------------------------------------
 (3) _motors_set_pwm                                       4     1      3     176
                                             14 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _leds_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _comm_init                                            0     0      0     298
                      _USBDeviceInit
                    _USBDeviceAttach
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0     298
                                             22 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6      96
                                             14 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupt_low                                        1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _interrupt_high                                      14    14      0   13147
                                              0 BANK0     14    14      0
                            _app_isr
 ---------------------------------------------------------------------------------
 (9) _app_isr                                              0     0      0   13147
                           _comm_isr
                           _leds_isr
                         _motors_isr
                        _sensors_isr
 ---------------------------------------------------------------------------------
 (10) _sensors_isr                                         0     0      0     264
          _sensors_measurement_tasks
            _sensors_i2c_async_tasks
 ---------------------------------------------------------------------------------
 (11) _sensors_i2c_async_tasks                             0     0      0     176
     _sensors_i2c_async_rw_completed
 ---------------------------------------------------------------------------------
 (12) _sensors_i2c_async_rw_completed                      0     0      0     176
       _sensors_i2c_async_read_bytes
      _sensors_i2c_async_write_bytes
 ---------------------------------------------------------------------------------
 (13) _sensors_i2c_async_write_bytes                       4     1      3      88
                                              1 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (11) _sensors_measurement_tasks                           0     0      0      88
     _sensors_measurement_read_async
 ---------------------------------------------------------------------------------
 (12) _sensors_measurement_read_async                      0     0      0      88
       _sensors_i2c_async_read_bytes
 ---------------------------------------------------------------------------------
 (13) _sensors_i2c_async_read_bytes                        4     1      3      88
                                              1 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (10) _motors_isr                                          3     3      0      30
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (10) _leds_isr                                           13    13      0     112
                                              1 COMRAM    13    13      0
 ---------------------------------------------------------------------------------
 (10) _comm_isr                                            0     0      0   12741
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (11) _USBDeviceTasks                                      2     2      0   12741
                                             36 COMRAM     2     2      0
                 _USBWakeFromSuspend
                         _USBSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
          _USBCtrlEPAllowStatusStage
                    _USBStallHandler
                   _USBCtrlEPService
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (12) i2_USBDeviceInit                                     1     1      0     983
                                              9 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPService                                    3     3      0    7218
                                             33 COMRAM     3     3      0
             _USBCtrlTrfSetupHandler
               _USBCtrlTrfOutHandler
                _USBCtrlTrfInHandler
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfInHandler                                 1     1      0     115
                                              2 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfRxService                                 3     3      0     114
                                              1 COMRAM     3     3      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfSetupHandler                              0     0      0    6921
    _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCtrlEPServiceComplete
                 _USBCheckStdRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckStdRequest                                  1     1      0    5331
                                             32 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                _USBStdSetCfgHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
            _USBStdFeatureReqHandler
 ---------------------------------------------------------------------------------
 (15) _USBStdFeatureReqHandler                             7     7      0    1881
                                             25 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStdGetStatusHandler                              3     3      0      46
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _USBStdGetDscHandler                                 2     2      0       0
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) _USBStdSetCfgHandler                                 1     1      0    1906
                                             25 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) i2_memset                                            8     2      6     318
                                              1 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (14) _USBCtrlEPServiceComplete                            0     0      0      92
          _USBCtrlEPAllowStatusStage
            _USBCtrlEPAllowDataStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfTxService                                 1     1      0      92
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _USBStallHandler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _USBSuspend                                          0     0      0    1498
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBWakeFromSuspend                                  0     0      0    1498
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    1498
                                             17 COMRAM     8     2      6
              _USBCheckVendorRequest
                _comm_usb_configured
 ---------------------------------------------------------------------------------
 (17) _comm_usb_configured                                 0     0      0    1476
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_USBTransferOnePacket                              7     3      4    1099
                                              1 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (18) _USBEnableEndpoint                                   6     5      1     377
                                             11 COMRAM     6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (19) _USBConfigureEndpoint                               10     9      1     222
                                              1 COMRAM    10     9      1
 ---------------------------------------------------------------------------------
 (17) _USBCheckVendorRequest                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
     _comm_init
       _USBDeviceInit
         _memset
       _USBDeviceAttach
     _leds_init
     _motors_init
       _motors_set_pwm
     _sensors_init
       _OpenI2C
       _sensors_i2c_write_byte
         _sensors_i2c_write_bytes
           _IdleI2C
           _WriteI2C
             _IdleI2C
       _sensors_i2c_read_byte
         _sensors_i2c_read_bytes
           _IdleI2C
           _WriteI2C
             _IdleI2C
           _ReadI2C
     _sensors_measurement_start
   _app_process
     _comm_process
       _USBTransferOnePacket
       _motors_set_pwm
       _sensors_measurement_get
     _leds_process
     _motors_process
     _sensors_process

 _interrupt_low (ROOT)

 _interrupt_high (ROOT)
   _app_isr
     _comm_isr
       _USBDeviceTasks
         _USBWakeFromSuspend
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckVendorRequest
             _comm_usb_configured
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
         _USBSuspend
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckVendorRequest
             _comm_usb_configured
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckVendorRequest
           _comm_usb_configured
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
         _USBCtrlEPAllowStatusStage
         _USBStallHandler
         _USBCtrlEPService
           _USBCtrlTrfSetupHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckVendorRequest
               _comm_usb_configured
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
             _USBCtrlEPServiceComplete
               _USBCtrlEPAllowStatusStage
               _USBCtrlEPAllowDataStage
                 _USBCtrlTrfTxService
             _USBCheckStdRequest
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _USBCheckVendorRequest
                 _comm_usb_configured
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
               _USBStdSetCfgHandler
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _USBCheckVendorRequest
                   _comm_usb_configured
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     i2_USBTransferOnePacket
                 i2_memset
               _USBStdGetDscHandler
               _USBStdGetStatusHandler
               _USBStdFeatureReqHandler
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _USBCheckVendorRequest
                   _comm_usb_configured
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     i2_USBTransferOnePacket
           _USBCtrlTrfOutHandler
             _USBCtrlTrfRxService
               _USBCtrlEPAllowStatusStage
           _USBCtrlTrfInHandler
             _USBCtrlTrfTxService
         i2_USBDeviceInit
           i2_memset
     _leds_isr
     _motors_isr
     _sensors_isr
       _sensors_measurement_tasks
         _sensors_measurement_read_async
           _sensors_i2c_async_read_bytes
       _sensors_i2c_async_tasks
         _sensors_i2c_async_rw_completed
           _sensors_i2c_async_read_bytes
           _sensors_i2c_async_write_bytes

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BIGRAMhl            D0      0       0      22        0.0%
BITBANK4            D0      0       0      12        0.0%
BANK4               D0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1E      79       5       75.6%
BITBANK5            80      0       0      14        0.0%
BANK5               80      0       0      15        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     26      52       1       86.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      1E       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CB      16        0.0%
DATA                 0      0      E9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Mon Nov 23 01:25:42 2015

                                          _USB_SD_Ptr 108E  
                                         _SSPSTATbits 000FC7  
                               __end_of_interrupt_low 1022  
                              ?_USBCheckVendorRequest 0028  
                                         __CFG_BOR$ON 000000  
                                                  bsr 000FE0  
                                       _USBDeviceInit 6FDC  
                                         __CFG_BORV$3 000000  
                                       ?_comm_process 0028  
                                        __CFG_CP0$OFF 000000  
                                        __CFG_CP1$OFF 000000  
                              __end_of_interrupt_high 6728  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0039  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 003B  
                         __end_of_USBStdGetDscHandler 745A  
                                                 l174 6A1C  
                                                 l193 621E  
                                                 l194 621C  
                                                 l196 6226  
                                                 l453 7462  
                                                 l462 748C  
                                                 l454 7564  
                                                 l801 6D94  
                                                 l458 7480  
                                                 l467 7526  
                                                 l395 60B2  
                                                 l734 7926  
                                                 l771 6608  
                                                 l907 616C  
                                                 l932 64A0  
                                                 l908 616E  
                                                 _BDT 000400  
                                                 l941 64BA  
                                                 l749 60EE  
                                                 l759 7FFE  
                                                 l929 64C4  
                                                 l777 6650  
                                                 l794 6D44  
                                                 l786 6CEC  
                                                 l789 6D10  
                                                 l798 6D8A  
                                        __CFG_CPB$OFF 000000  
                                                 _UIE 000F69  
                                                 _UIR 000F68  
                    __size_of_sensors_i2c_write_bytes 0058  
                                          _USBSuspend 6192  
                                                 fsr2 000FD9  
                                USBStdSetCfgHandler@i 0041  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 7680  
                                      _USBDeviceState 0012  
                           ??_sensors_i2c_async_tasks 002D  
                               ??_USBCtrlTrfRxService 0029  
                            __size_ofi2_USBDeviceInit 00DA  
                            USBEnableEndpoint@options 0033  
                                        __CFG_LVP$OFF 000000  
                                        __CFG_WDT$OFF 000000  
                                                l3315 628A  
                          USBConfigureEndpoint@handle 0031  
                                                l4133 74E6  
                                                l3319 629A  
                                                l3271 7034  
                                                l4135 74F2  
                                                l3265 7008  
                                                l4161 63D8  
                                                l4153 63CA  
                                                l4129 749E  
                                                l4137 750E  
                                                l4171 63E8  
                                                l4163 63DA  
                                                l4155 63CC  
                                                l3295 7050  
                                                l3279 703E  
                                                l4177 63F4  
                                                l4169 63E6  
                                                l4185 7D14  
                                                l4179 63F6  
                                                l4531 662C  
                                                l3581 69B0  
                                                l4189 7D18  
                                                l4607 6D4C  
                                                l3575 6990  
                                                l4545 60C4  
                                                l4537 6644  
                                                l3593 6A04  
                                                l4569 64AA  
                                                l4593 6D28  
                                                _LATD 000F8C  
                                                u3285 7F7A  
                                                u3295 7FBE  
                                                u3927 77C2  
                                                u3937 77E2  
                               ??_USBCtrlTrfTxService 0029  
                                                _UCFG 000F6F  
                                                _UEP0 000F70  
                                                _UEP1 000F71  
                                                _UEIE 000F6B  
                                                _UEIR 000F6A  
                                                _UCON 000F6D  
                                                _TMR1 000FCE  
                                                _TMR3 000FB2  
              USBStdFeatureReqHandler@current_ep_data 0045  
                                                _pDst 0009  
                                                _main 60AE  
                            ??i2_USBTransferOnePacket 002D  
                                 _comm_usb_configured 62AE  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                                                indf0 000FEF  
                                                fsr0l 000FE9  
                                                fsr2h 000FDA  
                                                indf1 000FE7  
                                                fsr1l 000FE1  
                                                indf2 000FDF  
                                                fsr2l 000FD9  
                                     _USBDeviceAttach 61FE  
                                                pclat 000FFA  
                          _sensors_i2c_async_rw_state 001F  
                                                prodh 000FF4  
                                                prodl 000FF3  
                                                start 1022  
                                       __CFG_IESO$OFF 000000  
                                     __end_of_IdleI2C 60D0  
                          __end_of_USBCheckStdRequest 6E56  
                              ??_USBCtrlTrfOutHandler 002C  
                                       __CFG_MCLRE$ON 000000  
                           ??_USBStdFeatureReqHandler 0041  
                                     __end_of_ReadI2C 6176  
                                     __end_of_OpenI2C 6192  
                            ??_USBStdGetStatusHandler 0029  
                    _sensors_i2c_async_rw_buffer_size 001B  
                                    ??_motors_set_pwm 00CA  
                                      ?_USBDeviceInit 0028  
                                      ??_comm_process 00CF  
                                    ??_motors_process 00C7  
                                       __CFG_PLLDIV$2 000000  
                                               ?_main 0028  
                                ?_comm_usb_configured 0028  
                                     ?_interrupt_high 0028  
                   __size_of_USBCtrlEPServiceComplete 00DA  
                              __end_of_USBDeviceTasks 779A  
                           ?_USBCtrlEPServiceComplete 0028  
                                               i1l404 101C  
                                               i2l204 6C2A  
                                               i2l144 76A6  
                                               i2l321 6562  
                                               i2l145 7798  
                                               i2l401 66EE  
                                               i2l218 712A  
                                               i2l154 771E  
                                               i2l243 6F16  
                                               i2l323 65A6  
                                               i2l331 6CB4  
                                               i2l315 6B74  
                                               i2l228 718C  
                                               i2l332 6C98  
                                               i2l156 7724  
                                               i2l325 65A8  
                                               i2l174 6AC0  
                                               i2l270 7380  
                                               i2l271 73FA  
                                               i2l343 6E54  
                                               i2l360 7B14  
                                               i2l256 767E  
                                               i2l281 67C0  
                                               i2l361 7B12  
                                               i2l345 6DA6  
                                               i2l601 7AF0  
                                               i2l354 6E00  
                                               i2l291 684C  
                                               i2l371 7C06  
                                               i2l339 6CE0  
                                               i2l603 7AF2  
                                               i2l284 6838  
                                               i2l277 7458  
                                               i2l285 67D0  
                                               i2l294 63B8  
                                               i2l286 67D6  
                                               i2l383 7D0A  
                                               i2l379 7C88  
                                               i2l643 65FC  
                                               i2l811 61FC  
                                               i2l830 679A  
                                               i2l815 6310  
                                               i2l831 67B6  
                                               i2l488 650A  
                                               i2l593 79A6  
                                               i2l745 615A  
                                               i2l842 7284  
                                               i2l595 79F8  
                                               i2l827 6762  
                                               i2l851 72B2  
                                               i2l835 735A  
                                               i2l597 7A4A  
                                               i2l861 72DE  
                                               i2l845 7294  
                                               i2l870 732C  
                                               i2l854 72B8  
                                               i2l846 729C  
                                               i2l599 7A9E  
                                               i2l863 7302  
                                               i2l847 72AE  
                                               i2l839 7270  
                                               i2l768 60C2  
                                               i2l856 72BE  
                                               _UADDR 000F6E  
                                               i2l867 730A  
                                               i2l869 732A  
                                               _TMR0L 000FD6  
                                       __CFG_USBDIV$2 000000  
                                               _USTAT 000F6C  
                                       __CFG_PWRT$OFF 000000  
                                       __CFG_WRT0$OFF 000000  
                  __size_of_USBCtrlEPAllowStatusStage 00B6  
                                       __CFG_WRT1$OFF 000000  
                                      __CFG_EBTR0$OFF 000000  
                                      __CFG_FCMEN$OFF 000000  
                                      __CFG_EBTR1$OFF 000000  
                                       ?_leds_process 0028  
                                     __end_of_app_isr 60E0  
                     __end_of_USBCtrlEPAllowDataStage 697E  
                                               _sd000 10F4  
                                               _sd001 10CC  
                                               _sd002 10B2  
                                       __CFG_WRTB$OFF 000000  
                                       __CFG_WRTC$OFF 000000  
                                      __CFG_EBTRB$OFF 000000  
                                          i2memset@p1 0029  
                         _sensors_i2c_async_rw_buffer 000B  
                                               pclath 000FFA  
                                               tablat 000FF5  
                                               plusw2 000FDB  
                                               status 000FD8  
               __end_of_sensors_i2c_async_write_bytes 6312  
              __size_of_sensors_i2c_async_write_bytes 0032  
                       _sensors_i2c_async_write_bytes 62E0  
                                    __end_ofi2_memset 6254  
                     __end_of_sensors_i2c_async_tasks 735C  
                        __size_of_USBStdSetCfgHandler 00C4  
                __end_of_sensors_i2c_async_read_bytes 61FE  
               __size_of_sensors_i2c_async_read_bytes 0028  
                        _sensors_i2c_async_read_bytes 61D6  
                                     __initialization 6344  
                        __end_of_leds_status_patterns 108E  
                                        __end_of_main 60B8  
                                   ??_sensors_process 00C7  
                           __size_of_USBCtrlEPService 00B4  
                               ??_comm_usb_configured 0039  
                                              ??_main 00D7  
                                       __activetblptr 000002  
                                     ?_USBDeviceTasks 0028  
                                         ?_USBSuspend 0028  
                                      ??_leds_process 00C7  
                             __end_of_USBDeviceAttach 6228  
                                              _ADCON1 000FC1  
                                    __end_of_WriteI2C 64C6  
                                         OpenI2C@slew 00C7  
                                              i2l4001 7B6C  
                                              i2l4011 7BA0  
                                              i2l4015 7BB2  
                                              i2l4025 7BF2  
                                              i2l4009 7B9E  
                                              i2l4027 7C1E  
                                              i2l4053 7CD6  
                                              i2l4037 7C64  
                                              i2l3431 61D0  
                                              i2l4055 7CE2  
                                              i2l4047 7C9C  
                                              i2l4039 7C70  
                                              i2l3415 776C  
                                              i2l3351 76B8  
                                              i2l2703 65E0  
                                              i2l3505 63B6  
                                              i2l3417 778E  
                                              i2l3409 7744  
                                              i2l3337 769E  
                                              i2l3329 7692  
                                              i2l3451 64D4  
                                              i2l3339 76A2  
                                              i2l3445 64C8  
                                              i2l3429 61CE  
                                              i2l3525 6B02  
                                              i2l3381 76FA  
                                              i2l3365 76E0  
                                              i2l3551 645C  
                                              i2l3447 64CE  
                                              i2l3375 76F0  
                                              i2l3359 76C4  
                                              i2l4415 60BE  
                                              i2l3625 692A  
                                              i2l3537 6B62  
                                              i2l4425 727C  
                                              i2l3547 644E  
                                              i2l3707 713C  
                                              i2l3715 714C  
                                              i2l3539 6B68  
                                              i2l4427 7280  
                                              i2l3565 68B2  
                                              i2l3477 6BB6  
                                              i2l3645 6E70  
                                              i2l3629 694C  
                                              i2l3813 6FB4  
                                              i2l3821 736C  
                                              i2l3389 7716  
                                              i2l4373 7A4C  
                                              i2l4365 79A8  
                                              i2l3743 7592  
                                              i2l4703 71E4  
                                              i2l4711 71F0  
                                              i2l3649 6E78  
                                              i2l3913 6C5A  
                                              i2l4377 7AA0  
                                              i2l4369 79FA  
                                              i2l4457 72D4  
                                              i2l3659 6EA0  
                                              i2l3667 6ED6  
                                              i2l3763 7618  
                                              i2l4483 7330  
                                              i2l4491 733A  
                                              i2l3669 6EDC  
                                              i2l3677 6F12  
                                              i2l3693 70D4  
                                              i2l3829 7400  
                                              i2l3837 7446  
                                              i2l3773 7674  
                                              i2l3749 75B2  
                                              i2l4661 6746  
                                              i2l4389 6150  
                                              i2l4821 66EA  
                                              i2l3791 6F4C  
                                              i2l3951 6DBC  
                                              i2l3759 760C  
                                              i2l4727 7204  
                                              i2l4655 672A  
                                              i2l3689 70CC  
                                              i2l3849 67EC  
                                              i2l3961 6DE6  
                                              i2l3937 6CDC  
                                              i2l3929 6CA8  
                                              i2l4497 6260  
                                              i2l4673 6782  
                                              i2l4755 6A54  
                                              i2l3859 682A  
                                              i2l3971 6E14  
                                              i2l3947 6DB0  
                                              i2l3939 6CDE  
                                              i2l4749 6A32  
                                              i2l3957 6DDA  
                                              i2l3949 6DB6  
                                              i2l4669 676A  
                                              i2l4767 6AA8  
                                              i2l4863 64E6  
                                              i2l4775 6232  
                                              i2l3959 6DE0  
                                              i2l3975 6E2A  
                                              i2l4679 679E  
                                              i2l4865 6508  
                                              i2l4697 71BA  
                                              i2l4779 6242  
                                           ??_IdleI2C 00C7  
                                      _leds_led0_mode 004E  
                                              _SSPADD 000FC8  
                                      _leds_led1_mode 004F  
                                      _leds_led2_mode 00D7  
                                              _SSPBUF 000FC9  
                                      _leds_led3_mode 00D8  
                            i2USBTransferOnePacket@ep 002D  
                                   ??i2_USBDeviceInit 0031  
                                           ??_ReadI2C 00C7  
                     __size_ofi2_USBTransferOnePacket 00A4  
                                __size_of_app_process 0010  
                                      __CFG_VREGEN$ON 000000  
                                           ??_OpenI2C 00C8  
                    sensors_i2c_async_read_bytes@data 002B  
                                   _shortPacketStatus 0023  
                                      __CFG_XINST$OFF 000000  
                                    __end_of_app_init 6344  
                                     USBDeviceTasks@i 004D  
                         USBStdFeatureReqHandler@pUEP 0043  
                                    __end_of_comm_isr 60AE  
                            USBTransferOnePacket@data 00C8  
                          USBCtrlTrfInHandler@lastDTS 002A  
                                     ??_USBDeviceInit 00CF  
                            ?_sensors_measurement_get 00C7  
                                      __CFG_STVREN$ON 000000  
                       ?_sensors_i2c_async_read_bytes 0029  
                                    __end_of_leds_isr 7AF4  
                                   _USBEnableEndpoint 643E  
                     __size_of_USBStdGetStatusHandler 0096  
                                              _memset 6280  
                                              clear_0 634A  
                                              clear_1 6356  
                                  ?_USBEnableEndpoint 0033  
                             _sensors_i2c_write_bytes 65FE  
                                           ??_app_isr 004E  
                       __size_of_USBTransferOnePacket 00A0  
                                        __pdataCOMRAM 0051  
                                        ?_motors_init 0028  
                                        ?_sensors_isr 0028  
                                        __mediumconst 0000  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
                                              tblptru 000FF8  
                                 ??_USBEnableEndpoint 0034  
                                  _motors_pwm_on_bits 0050  
                               _sensors_i2c_read_byte 612C  
                                         _CtrlTrfData 000428  
                            ??_sensors_i2c_read_bytes 00CB  
                                _controlTransferState 0015  
                                  _leds_quad_patterns 1026  
                                __end_of_comm_process 7566  
                                          __accesstop 0060  
                             __end_of__initialization 6374  
                                     __CFG_PBADEN$OFF 000000  
                            __size_of_USBStallHandler 003E  
                                 __size_of_USBSuspend 001E  
                      ?_sensors_i2c_async_write_bytes 0029  
                             ??_USBCheckVendorRequest 0029  
                         ??_sensors_measurement_tasks 002D  
                                      __pcstackCOMRAM 0028  
                           __end_of_USBEnableEndpoint 6482  
                         ??_sensors_measurement_start 00C7  
                                       __end_of_sd000 10F8  
                                       __end_of_sd001 10E2  
                                       __end_of_sd002 10CC  
                    __size_of_USBCtrlEPAllowDataStage 0098  
                       __size_of_USBConfigureEndpoint 0098  
                         __end_of_USBCtrlTrfInHandler 6CE2  
                              i2_USBTransferOnePacket 6A1E  
                                _leds_status_led_mode 0018  
                                           ?i2_memset 0029  
                                  __size_of_comm_init 0016  
                            ??_USBCtrlTrfSetupHandler 0049  
                                    ?_USBDeviceAttach 0028  
                                _leds_status_patterns 105A  
                              _USBStdGetStatusHandler 67B8  
                                          __pbssBANK0 0060  
                                  __size_of_leds_init 0042  
                                          __pnvCOMRAM 004E  
                         __size_of_USBWakeFromSuspend 0026  
                                         _pBDTEntryIn 006C  
                    __end_of_USBCtrlEPServiceComplete 718E  
                    ??_sensors_i2c_async_rw_completed 002D  
                     ?_sensors_i2c_async_rw_completed 0028  
                                __end_of_leds_process 60A8  
                                USBCtrlTrfRxService@i 002A  
                                    ??_interrupt_high 00B9  
                           ??_sensors_i2c_write_bytes 00CB  
                                             ?_memset 00C7  
                                          _device_dsc 10E2  
                                           ?_WriteI2C 0028  
                                    _USBCtrlEPService 6AC2  
                                          _ep_data_in 0078  
                      ??_sensors_i2c_async_read_bytes 002C  
                         __end_of_USBCtrlTrfRxService 7680  
                                  _USBCheckStdRequest 6D9A  
                                   _configDescriptor1 1092  
                                          ??i2_memset 002F  
                         __end_of_USBCtrlTrfTxService 6F18  
                                 _USBStdSetCfgHandler 6F18  
                           _sensors_measurement_tasks 60B8  
                              ?_sensors_i2c_read_byte 00D2  
                           _sensors_measurement_start 60E0  
                   _sensors_measurement_buffers_ready 0080  
                                           ?_app_init 0028  
                                             _SSPCON1 000FC6  
                                             _SSPCON2 000FC5  
                                 ?_USBCheckStdRequest 0028  
                        __size_of_USBStdGetDscHandler 00FE  
                                             _UIEbits 000F69  
                                           ?_comm_isr 0028  
                                             _SSPSTAT 000FC7  
                            ??_sensors_i2c_write_byte 00CF  
                                             _UIRbits 000F68  
                                           ?_leds_isr 0028  
                     __size_of_sensors_i2c_read_bytes 00B8  
                                             _IdleI2C 60C4  
                              __size_of_interrupt_low 000A  
                                             _ReadI2C 615C  
                                     _sensors_process 1014  
                                             _OpenI2C 6176  
                                             __Hparam 0000  
                                ?_USBStdSetCfgHandler 0028  
                                             __Lparam 0000  
                    sensors_i2c_async_write_bytes@len 002A  
                          __size_of_USBEnableEndpoint 0044  
                                   __end_of_comm_init 6116  
                                ??_USBCheckStdRequest 0048  
                       __size_of_USBCtrlTrfOutHandler 0054  
                                    ??_USBDeviceTasks 004C  
                                   ??_USBStallHandler 0029  
                                        __psmallconst 1026  
                                             __pcinit 6344  
                                          ??_WriteI2C 00C7  
                                   __end_of_leds_init 643E  
                                     __size_of_memset 002E  
                           __end_of_configDescriptor1 10B2  
                                             __ramtop 0800  
                                             __ptext0 60AE  
                                             __ptext1 60F0  
                                             __ptext2 1014  
                                             __ptext3 60A8  
                                             __ptext4 60A6  
                                             __ptext5 745A  
                                             __ptext6 7D0C  
                                             __ptext7 697E  
                                             __ptext8 6312  
                                             __ptext9 60E0  
                                             _app_isr 60D0  
                                             _inPipes 00B3  
                            ?_sensors_i2c_async_tasks 0028  
                         _USBDeferOUTDataStagePackets 0010  
                                           _T0CONbits 000FD5  
                                           _T1CONbits 000FCD  
                                        ??_USBSuspend 0041  
                                           _T3CONbits 000FB1  
                                     i2_USBDeviceInit 718E  
                                    i2USBDeviceInit@i 0031  
                               __size_of_comm_process 010C  
                                   _comm_process$1803 00D1  
                                   _comm_process$1734 00CF  
                                __size_of_motors_init 004A  
                                __size_of_sensors_isr 001A  
                                          ??_app_init 00D7  
                                  __end_of_USB_CD_Ptr 1092  
                     __end_of_sensors_i2c_write_bytes 6656  
                     __size_of_USBCtrlTrfSetupHandler 0062  
                                          ??_comm_isr 004E  
                                      __pintcode_body 66B8  
                                end_of_initialization 6374  
                                          ??_leds_isr 0029  
                                  __end_of_USB_SD_Ptr 1091  
                                 _pBDTEntryEP0OutNext 0007  
                                             memset@c 00C9  
                                             memset@n 00CB  
                                             memset@p 00CD  
                                       __Lmediumconst 0000  
                                             int_func 66B8  
                                       ?_sensors_init 0028  
                            ?_USBStdFeatureReqHandler 0028  
                               ??_USBStdSetCfgHandler 0041  
                                  __end_of_USBSuspend 61B0  
                         __end_of_comm_usb_configured 62E0  
                             _USBCtrlEPAllowDataStage 68E6  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                             sensors_i2c_read_byte@da 00D4  
                             sensors_i2c_read_byte@ra 00D2  
                                             postinc0 000FEE  
                                             postinc1 000FE6  
                                             postinc2 000FDE  
                             sensors_i2c_read_bytes@i 00D0  
                            _USBCtrlEPServiceComplete 70B4  
                 _sensors_measurement_buffers_current 007F  
                              _sensors_i2c_read_bytes 6CE2  
                           sensors_i2c_read_byte@data 00D3  
                                          _motors_isr 65AA  
                                          _motors_pwm 0001  
                                       _interrupt_low 1018  
                          _USBStatusStageEnabledFlag1 007D  
                          _USBStatusStageEnabledFlag2 007E  
                                        _comm_process 745A  
                                  USBEnableEndpoint@p 0036  
                           sensors_i2c_read_bytes@len 00C9  
                    __size_of_sensors_measurement_get 02F4  
                                           _TRISBbits 000F93  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                             __size_of_motors_set_pwm 0040  
                                  _BothEP0OutUOWNsSet 000D  
                             __size_of_motors_process 0002  
                           USBConfigureEndpoint@EPNum 0030  
                             __end_of_sensors_process 1016  
                          ?_USBCtrlEPAllowStatusStage 0028  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 003D  
                     __size_of_sensors_i2c_write_byte 0016  
                                           _USTATcopy 0026  
                                       ??_app_process 00D3  
                                      ??_sensors_init 00D5  
                               __size_of_leds_process 0002  
                        __end_of_USBTransferOnePacket 6A1E  
                              _USBCtrlTrfSetupHandler 6656  
                         sensors_i2c_write_bytes@data 00CA  
                      __size_of_USBCheckVendorRequest 0002  
                       __end_of_USBCheckVendorRequest 60A6  
                             ?i2_USBTransferOnePacket 0029  
                               __end_of_USBDeviceInit 70B4  
                                      ?_interrupt_low 0028  
                                       __pidataCOMRAM 1004  
                             __end_ofi2_USBDeviceInit 7268  
                                           i2memset@c 002B  
                                           i2memset@n 002D  
                                           i2memset@p 002F  
                                      __end_of_memset 62AE  
                                        _leds_counter 0017  
                                   _USBBusIsSuspended 007C  
                                 start_initialization 6344  
                             ?_USBStdGetStatusHandler 0028  
                          sensors_i2c_read_bytes@data 00CA  
                       USBCtrlTrfRxService@byteToRead 002B  
                                        _leds_process 60A6  
                                   __size_ofi2_memset 002C  
                        __end_of_USBConfigureEndpoint 68E6  
                                    WriteI2C@data_out 00C7  
                     __end_of_USBStdFeatureReqHandler 7D0C  
                    ??_sensors_measurement_read_async 002D  
                     ?_sensors_measurement_read_async 0028  
                   __end_of_USBCtrlEPAllowStatusStage 6C2C  
                            __end_of_USBCtrlEPService 6B76  
                  __size_of_sensors_measurement_tasks 000C  
                  __size_of_sensors_measurement_start 0010  
                           sensors_i2c_write_bytes@da 00CB  
                           sensors_i2c_write_bytes@ra 00C8  
                           ??_USBCtrlEPAllowDataStage 002A  
                                      USBDeviceInit@i 00CF  
                                 __end_of_app_process 6100  
                              _pBDTEntryEP0OutCurrent 0005  
                             USBTransferOnePacket@dir 00C7  
                             USBTransferOnePacket@len 00CA  
                      __end_ofi2_USBTransferOnePacket 6AC2  
                                 _USBStdGetDscHandler 735C  
                             motors_isr@motor_pwm_bit 002B  
                              _sensors_i2c_write_byte 6116  
                                    __CFG_LPT1OSC$OFF 000000  
                                            ??_memset 00CD  
                                         ?_motors_isr 0028  
                             ??_sensors_i2c_read_byte 00D4  
                              _USBActiveConfiguration 0024  
                      __end_of_USBStdGetStatusHandler 684E  
                                   __size_of_WriteI2C 0044  
              __end_of_sensors_i2c_async_rw_completed 67B8  
             __size_of_sensors_i2c_async_rw_completed 0090  
                      _sensors_i2c_async_rw_completed 6728  
                                         __pbssCOMRAM 0001  
                         _sensors_measurement_buffers 0081  
                                       __pcstackBANK0 00B9  
                        __size_of_USBCtrlTrfInHandler 00B6  
sensors_i2c_async_rw_completed@MPL3115A2_read_request 0052  
                       sensors_measurement_get@buffer 00CE  
                                ?_USBStdGetDscHandler 0028  
                                    ?_sensors_process 0028  
               _sensors_i2c_async_rw_register_address 001E  
                                   __size_of_app_init 0032  
                                            ?_IdleI2C 0028  
                         _sensors_measurement_started 0022  
                          __end_of_USBWakeFromSuspend 61D6  
                 _sensors_i2c_async_rw_device_address 001C  
                                   __size_of_comm_isr 0004  
                                     _USBStallHandler 637E  
                                        _pBDTEntryOut 0070  
                                            ?_ReadI2C 0028  
                                   __size_of_leds_isr 01CC  
                                           __pnvBANK0 00D7  
                            __size_of_USBDeviceAttach 002A  
                                            ?_OpenI2C 00C7  
                   __end_of_sensors_measurement_tasks 60C4  
                   __end_of_sensors_measurement_start 60F0  
                                           __pintcode 1008  
                                     ??_interrupt_low 0028  
                      _sensors_i2c_async_rw_operation 001D  
   sensors_i2c_async_rw_completed@AMI304_read_request 0051  
                                         __pintcodelo 1018  
                                    sensors_init@data 00D6  
                                           _comm_init 6100  
                                    ?i2_USBDeviceInit 0028  
                                            ?_app_isr 0028  
                                __end_of_sensors_init 7928  
                                _USBTransferOnePacket 697E  
                                      _motors_current 0027  
                                         __smallconst 1026  
                             _sensors_measurement_get 7D0C  
                                           _leds_init 63FC  
                                      _motors_set_pwm 63BC  
                                      _motors_process 60A8  
                        __end_of_USBCtrlTrfOutHandler 65AA  
                               ??_USBStdGetDscHandler 0029  
                                         _ep_data_out 007A  
                        __size_of_USBCtrlTrfRxService 011A  
                       USBConfigureEndpoint@direction 0029  
                    __size_of_sensors_i2c_async_tasks 00F4  
                                         _app_process 60F0  
                        __size_of_USBCtrlTrfTxService 00C2  
                                 __size_of_motors_isr 0054  
                                            _LATDbits 000F8C  
                                            _LATEbits 000F8D  
                              _comm_usb_is_configured 0014  
                          ??_USBCtrlEPServiceComplete 002A  
                                            _IPR1bits 000F9F  
                                            _IPR2bits 000FA2  
                                            _PIE1bits 000F9D  
                                            _PIE2bits 000FA0  
                            ?_sensors_i2c_write_bytes 00C8  
                                            i2u142_44 65C2  
                                            i2u142_45 65BE  
                                            i2u254_40 6EC8  
                                            i2u254_47 6EBE  
                                            i2u270_48 7660  
                                            i2u335_40 7952  
                                            i2u335_45 7948  
                                            i2u256_40 6F04  
                                            i2u256_47 6EFA  
                                            _PIR1bits 000F9E  
                                            i2u249_45 6942  
                                            _PIR2bits 000FA1  
                                            i2u276_40 73C8  
                                            i2u276_47 73C2  
                                            i2u277_40 73F4  
                                            i2u277_47 73EE  
                                            i2u279_40 743E  
                                            i2u294_48 6CC8  
                                            i2u279_47 7438  
                                            i2u296_40 6DFA  
                             ?_sensors_i2c_read_bytes 00C8  
                           USBCtrlEPService@setup_cnt 004B  
                                            _RCONbits 000FD0  
                                    __CFG_WDTPS$32768 000000  
                                            _UEP0bits 000F70  
                          _USBDeferINDataStagePackets 000F  
                         __size_of_USBCheckStdRequest 00BC  
                                            _UCONbits 000F6D  
                                _USBConfigureEndpoint 684E  
                                    motors_set_pwm@m0 00CA  
                                    motors_set_pwm@m1 00C7  
                                    motors_set_pwm@m2 00C8  
                                    motors_set_pwm@m3 00C9  
                     _sensors_measurement_read_buffer 0020  
                                          ?_comm_init 0028  
                    __size_of_USBStdFeatureReqHandler 0218  
                               ?_USBTransferOnePacket 00C7  
                              __end_of_motors_set_pwm 63FC  
                                       ??_motors_init 00CB  
                                       ??_sensors_isr 002D  
                              __end_of_motors_process 60AA  
                          sensors_i2c_write_byte@data 00CE  
                                          ?_leds_init 0028  
                                        _RemoteWakeup 000E  
                                            i2_memset 6228  
                             __size_of_interrupt_high 5720  
                          sensors_i2c_write_bytes@len 00C9  
                             __end_of_USBStallHandler 63BC  
                                         _INTCON2bits 000FF1  
                                         _INTCON3bits 000FF0  
                         ??_USBCtrlEPAllowStatusStage 0029  
                         __end_of_USBStdSetCfgHandler 6FDC  
                                    OpenI2C@sync_mode 00C8  
                                    __size_of_IdleI2C 000C  
                                  __end_of_device_dsc 10F4  
                             ?_USBCtrlTrfSetupHandler 0028  
                      __end_of_sensors_i2c_read_bytes 6D9A  
                                    __size_of_ReadI2C 001A  
                             USBStdGetStatusHandler@p 002A  
                                            __Hrparam 0000  
                                    __size_of_OpenI2C 001C  
                   sensors_i2c_async_write_bytes@data 002B  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 00CB  
                     sensors_i2c_async_read_bytes@len 002A  
                                            _SetupPkt 000420  
                               ?_USBConfigureEndpoint 0029  
                                    _motors_pwm_scale 0068  
                                   ??_USBDeviceAttach 00C7  
                                            _WriteI2C 6482  
                           ??_sensors_measurement_get 00C9  
                        __size_of_comm_usb_configured 0032  
                                    __size_of_app_isr 0010  
                                     ?_motors_set_pwm 00C7  
                                     ?_motors_process 0028  
                             __size_of_USBDeviceTasks 011A  
                                            __ptext10 779A  
                                            __ptext11 612C  
                                            __ptext20 63BC  
                                            __ptext12 6CE2  
                                            __ptext21 63FC  
                                            __ptext13 615C  
                                            __ptext30 7268  
                                            __ptext22 6100  
                                            __ptext14 6116  
                                            __ptext31 6728  
                                            __ptext23 61FE  
                                            __ptext15 65FE  
                                            __ptext40 718E  
                                            __ptext32 62E0  
                                            __ptext24 6FDC  
                                            __ptext16 6482  
                                            __ptext41 6AC2  
                                            __ptext33 60B8  
                                            __ptext25 6280  
                                            __ptext17 60C4  
                                            __ptext50 6F18  
                                            __ptext42 6C2C  
                                            __ptext34 6254  
                                            __ptext18 6176  
                                            __ptext51 6228  
                                            __ptext43 6556  
                                            __ptext35 61D6  
                                            __ptext19 650C  
                                            __ptext60 62AE  
                                            __ptext52 70B4  
                                            __ptext44 7566  
                                            __ptext36 65AA  
                                            __ptext28 60D0  
                                            __ptext61 6A1E  
                                            __ptext53 68E6  
                                            __ptext45 6656  
                                            __ptext37 7928  
                                            __ptext29 6142  
                                            __ptext62 643E  
                                            __ptext54 6E56  
                                            __ptext46 6D9A  
                                            __ptext38 60AA  
                                            __ptext63 684E  
                                            __ptext55 6B76  
                                            __ptext47 7AF4  
                                            __ptext39 7680  
                                            __ptext64 60A4  
                                            __ptext56 637E  
                                            __ptext48 67B8  
                                            __ptext57 6192  
                                            __ptext49 735C  
                                            __ptext58 61B0  
                                            __ptext59 64C6  
                                            _app_init 6312  
                                            _comm_isr 60AA  
                                 __end_of_motors_init 6556  
                                 __end_of_sensors_isr 615C  
                                            _leds_isr 7928  
                      __end_of_USBCtrlTrfSetupHandler 66B8  
                                       __size_of_main 000A  
                                   ?_USBCtrlEPService 0028  
                                  ??_USBCtrlEPService 0049  
                             ?_sensors_i2c_write_byte 00CD  
                                 _USBCtrlTrfInHandler 6C2C  
                                            _outPipes 0060  
                                     _comm_out_handle 0076  
                                _USBCtrlTrfOutHandler 6556  
                               __size_of_sensors_init 018E  
              __end_of_sensors_measurement_read_async 6280  
             __size_of_sensors_measurement_read_async 002C  
                      _sensors_measurement_read_async 6254  
                                     _comm_out_buffer 000500  
                           _USBCtrlEPAllowStatusStage 6B76  
                      _sensors_measurement_read_state 0021  
                                      _comm_in_handle 0074  
                                      _comm_in_buffer 000540  
                                        ??_motors_isr 0029  
                              ??_USBTransferOnePacket 00CB  
                                         ??_comm_init 00D0  
                               _USBCheckVendorRequest 60A4  
                               __CFG_CPUDIV$OSC1_PLL2 000000  
                           _USBDeferStatusStagePacket 0011  
                         _motors_current_off_duration 0019  
                                         ??_leds_init 00C7  
                                          _INTCONbits 000FF2  
                      __size_of_sensors_i2c_read_byte 0016  
                       __end_of_sensors_i2c_read_byte 6142  
                            sensors_measurement_get@m 00C7  
                                ?_USBCtrlTrfInHandler 0028  
                       USBCtrlTrfTxService@byteToSend 0029  
                      sensors_i2c_async_read_bytes@da 002C  
                      sensors_i2c_async_read_bytes@ra 0029  
                                            memset@p1 00C7  
                     sensors_i2c_async_write_bytes@da 002C  
                     sensors_i2c_async_write_bytes@ra 0029  
                                    ?_USBStallHandler 0028  
                            USBStdFeatureReqHandler@p 0046  
                             _sensors_i2c_async_tasks 7268  
                                            intlevel1 0000  
                                            intlevel2 0000  
                     __end_of_sensors_measurement_get 8000  
                              __size_of_USBDeviceInit 00D8  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 650C  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0046  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 003F  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0039  
                     _USER_USB_CALLBACK_EVENT_HANDLER 64C6  
                        i2USBTransferOnePacket@handle 002E  
                                  __end_of_motors_isr 65FE  
                                        _sensors_init 779A  
                      __end_of_sensors_i2c_write_byte 612C  
                          i2USBTransferOnePacket@data 002A  
                              ??_USBConfigureEndpoint 002A  
                               ?_USBCtrlTrfOutHandler 0028  
                _sensors_i2c_async_rw_buffer_progress 001A  
                                 _USBCtrlTrfRxService 7566  
                                  _USBWakeFromSuspend 61B0  
                             _USBStdFeatureReqHandler 7AF4  
                            sensors_i2c_read_bytes@da 00D1  
                            sensors_i2c_read_bytes@ra 00C8  
                                 _USBCtrlTrfTxService 6E56  
                          __end_of_leds_quad_patterns 105A  
                                 ?_USBWakeFromSuspend 0028  
                                         _motors_init 650C  
                               ??_USBCtrlTrfInHandler 002A  
                                      _interrupt_high 1008  
                                         _sensors_isr 6142  
                               _USBAlternateInterface 0025  
                           i2USBTransferOnePacket@dir 0029  
                           i2USBTransferOnePacket@len 002C  
                                         _SSPCON1bits 000FC6  
                                         _SSPCON2bits 000FC5  
                                 USBEnableEndpoint@ep 0038  
                                     _endpoint_number 0016  
                     ??_sensors_i2c_async_write_bytes 002C  
                                ?_USBCtrlTrfRxService 0028  
                                  __CFG_FOSC$HSPLL_HS 000000  
                            ?_USBCtrlEPAllowDataStage 0028  
                                ?_USBCtrlTrfTxService 0028  
                                        ?_app_process 0028  
                        _USBStatusStageTimeoutCounter 0013  
                                ??_USBWakeFromSuspend 0041  
                          USBTransferOnePacket@handle 00CC  
                                    leds_isr@pat_flag 0032  
                            sensors_i2c_write_byte@da 00CF  
                            __size_of_sensors_process 0002  
                                          _USB_CD_Ptr 1091  
                            sensors_i2c_write_byte@ra 00CD  
                            sensors_i2c_write_bytes@i 00CC  
                          ?_sensors_measurement_tasks 0028  
                          ?_sensors_measurement_start 0028  
